

================================================================
== Vivado HLS Report for 'mmult_hw'
================================================================
* Date:           Sat Apr  9 11:44:55 2022

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        hls_mmult_prj
* Solution:       solution4
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.510|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   13|   13|   13|   13|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- L1      |   11|   11|         5|          1|          1|     8|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	7  / (exitcond2)
	3  / (!exitcond2)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	2  / true
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_7_7), !map !7"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_7_6), !map !13"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_7_5), !map !19"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_7_4), !map !25"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_7_3), !map !31"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_7_2), !map !37"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_7_1), !map !43"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_7_0), !map !49"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_6_7), !map !55"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_6_6), !map !60"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_6_5), !map !65"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_6_4), !map !70"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_6_3), !map !75"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_6_2), !map !80"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_6_1), !map !85"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_6_0), !map !90"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_5_7), !map !95"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_5_6), !map !100"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_5_5), !map !105"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_5_4), !map !110"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_5_3), !map !115"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_5_2), !map !120"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_5_1), !map !125"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_5_0), !map !130"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_4_7), !map !135"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_4_6), !map !140"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_4_5), !map !145"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_4_4), !map !150"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_4_3), !map !155"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_4_2), !map !160"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_4_1), !map !165"   --->   Operation 38 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_4_0), !map !170"   --->   Operation 39 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_3_7), !map !175"   --->   Operation 40 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_3_6), !map !180"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_3_5), !map !185"   --->   Operation 42 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_3_4), !map !190"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_3_3), !map !195"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_3_2), !map !200"   --->   Operation 45 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_3_1), !map !205"   --->   Operation 46 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_3_0), !map !210"   --->   Operation 47 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_2_7), !map !215"   --->   Operation 48 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_2_6), !map !220"   --->   Operation 49 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_2_5), !map !225"   --->   Operation 50 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_2_4), !map !230"   --->   Operation 51 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_2_3), !map !235"   --->   Operation 52 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_2_2), !map !240"   --->   Operation 53 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_2_1), !map !245"   --->   Operation 54 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_2_0), !map !250"   --->   Operation 55 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_1_7), !map !255"   --->   Operation 56 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_1_6), !map !260"   --->   Operation 57 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_1_5), !map !265"   --->   Operation 58 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_1_4), !map !270"   --->   Operation 59 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_1_3), !map !275"   --->   Operation 60 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_1_2), !map !280"   --->   Operation 61 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_1_1), !map !285"   --->   Operation 62 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_1_0), !map !290"   --->   Operation 63 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_0_7), !map !295"   --->   Operation 64 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_0_6), !map !300"   --->   Operation 65 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_0_5), !map !305"   --->   Operation 66 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_0_4), !map !310"   --->   Operation 67 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_0_3), !map !315"   --->   Operation 68 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_0_2), !map !320"   --->   Operation 69 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_0_1), !map !325"   --->   Operation 70 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %b_0_0), !map !330"   --->   Operation 71 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %out_7), !map !335"   --->   Operation 72 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %out_6), !map !341"   --->   Operation 73 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %out_5), !map !346"   --->   Operation 74 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %out_4), !map !351"   --->   Operation 75 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %out_3), !map !356"   --->   Operation 76 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %out_2), !map !361"   --->   Operation 77 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %out_1), !map !366"   --->   Operation 78 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %out_0), !map !371"   --->   Operation 79 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %a_7), !map !376"   --->   Operation 80 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %a_6), !map !380"   --->   Operation 81 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %a_5), !map !384"   --->   Operation 82 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %a_4), !map !388"   --->   Operation 83 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %a_3), !map !392"   --->   Operation 84 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %a_2), !map !396"   --->   Operation 85 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %a_1), !map !400"   --->   Operation 86 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x i32]* %a_0), !map !404"   --->   Operation 87 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @mmult_hw_str) nounwind"   --->   Operation 88 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (1.76ns)   --->   "br label %1" [mmult_accel.cpp:13]   --->   Operation 89 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 90 [1/1] (0.00ns)   --->   "%ia = phi i4 [ 0, %0 ], [ %ia_1, %2 ]"   --->   Operation 90 'phi' 'ia' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 91 [1/1] (1.30ns)   --->   "%exitcond2 = icmp eq i4 %ia, -8" [mmult_accel.cpp:13]   --->   Operation 91 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8) nounwind"   --->   Operation 92 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 93 [1/1] (1.73ns)   --->   "%ia_1 = add i4 %ia, 1" [mmult_accel.cpp:13]   --->   Operation 93 'add' 'ia_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %3, label %2" [mmult_accel.cpp:13]   --->   Operation 94 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 95 [1/1] (0.00ns)   --->   "%tmp = zext i4 %ia to i64" [mmult_accel.cpp:19]   --->   Operation 95 'zext' 'tmp' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%a_0_addr = getelementptr [8 x i32]* %a_0, i64 0, i64 %tmp" [mmult_accel.cpp:19]   --->   Operation 96 'getelementptr' 'a_0_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 97 [2/2] (2.32ns)   --->   "%a_0_load = load i32* %a_0_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 97 'load' 'a_0_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 98 [1/1] (0.00ns)   --->   "%b_0_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_0_0)" [mmult_accel.cpp:19]   --->   Operation 98 'read' 'b_0_0_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%a_1_addr = getelementptr [8 x i32]* %a_1, i64 0, i64 %tmp" [mmult_accel.cpp:19]   --->   Operation 99 'getelementptr' 'a_1_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 100 [2/2] (2.32ns)   --->   "%a_1_load = load i32* %a_1_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 100 'load' 'a_1_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 101 [1/1] (0.00ns)   --->   "%b_1_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_1_0)" [mmult_accel.cpp:19]   --->   Operation 101 'read' 'b_1_0_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 102 [1/1] (0.00ns)   --->   "%a_2_addr = getelementptr [8 x i32]* %a_2, i64 0, i64 %tmp" [mmult_accel.cpp:19]   --->   Operation 102 'getelementptr' 'a_2_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 103 [2/2] (2.32ns)   --->   "%a_2_load = load i32* %a_2_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 103 'load' 'a_2_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 104 [1/1] (0.00ns)   --->   "%b_2_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_2_0)" [mmult_accel.cpp:19]   --->   Operation 104 'read' 'b_2_0_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%a_3_addr = getelementptr [8 x i32]* %a_3, i64 0, i64 %tmp" [mmult_accel.cpp:19]   --->   Operation 105 'getelementptr' 'a_3_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 106 [2/2] (2.32ns)   --->   "%a_3_load = load i32* %a_3_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 106 'load' 'a_3_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 107 [1/1] (0.00ns)   --->   "%b_3_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_3_0)" [mmult_accel.cpp:19]   --->   Operation 107 'read' 'b_3_0_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 108 [1/1] (0.00ns)   --->   "%a_4_addr = getelementptr [8 x i32]* %a_4, i64 0, i64 %tmp" [mmult_accel.cpp:19]   --->   Operation 108 'getelementptr' 'a_4_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 109 [2/2] (2.32ns)   --->   "%a_4_load = load i32* %a_4_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 109 'load' 'a_4_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 110 [1/1] (0.00ns)   --->   "%b_4_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_4_0)" [mmult_accel.cpp:19]   --->   Operation 110 'read' 'b_4_0_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 111 [1/1] (0.00ns)   --->   "%a_5_addr = getelementptr [8 x i32]* %a_5, i64 0, i64 %tmp" [mmult_accel.cpp:19]   --->   Operation 111 'getelementptr' 'a_5_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 112 [2/2] (2.32ns)   --->   "%a_5_load = load i32* %a_5_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 112 'load' 'a_5_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 113 [1/1] (0.00ns)   --->   "%b_5_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_5_0)" [mmult_accel.cpp:19]   --->   Operation 113 'read' 'b_5_0_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (0.00ns)   --->   "%a_6_addr = getelementptr [8 x i32]* %a_6, i64 0, i64 %tmp" [mmult_accel.cpp:19]   --->   Operation 114 'getelementptr' 'a_6_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 115 [2/2] (2.32ns)   --->   "%a_6_load = load i32* %a_6_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 115 'load' 'a_6_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 116 [1/1] (0.00ns)   --->   "%b_6_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_6_0)" [mmult_accel.cpp:19]   --->   Operation 116 'read' 'b_6_0_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 117 [1/1] (0.00ns)   --->   "%a_7_addr = getelementptr [8 x i32]* %a_7, i64 0, i64 %tmp" [mmult_accel.cpp:19]   --->   Operation 117 'getelementptr' 'a_7_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 118 [2/2] (2.32ns)   --->   "%a_7_load = load i32* %a_7_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 118 'load' 'a_7_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 119 [1/1] (0.00ns)   --->   "%b_7_0_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_7_0)" [mmult_accel.cpp:19]   --->   Operation 119 'read' 'b_7_0_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 120 [1/1] (0.00ns)   --->   "%b_0_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_0_1)" [mmult_accel.cpp:19]   --->   Operation 120 'read' 'b_0_1_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 121 [1/1] (0.00ns)   --->   "%b_1_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_1_1)" [mmult_accel.cpp:19]   --->   Operation 121 'read' 'b_1_1_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 122 [1/1] (0.00ns)   --->   "%b_2_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_2_1)" [mmult_accel.cpp:19]   --->   Operation 122 'read' 'b_2_1_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 123 [1/1] (0.00ns)   --->   "%b_3_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_3_1)" [mmult_accel.cpp:19]   --->   Operation 123 'read' 'b_3_1_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 124 [1/1] (0.00ns)   --->   "%b_4_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_4_1)" [mmult_accel.cpp:19]   --->   Operation 124 'read' 'b_4_1_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "%b_5_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_5_1)" [mmult_accel.cpp:19]   --->   Operation 125 'read' 'b_5_1_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 126 [1/1] (0.00ns)   --->   "%b_6_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_6_1)" [mmult_accel.cpp:19]   --->   Operation 126 'read' 'b_6_1_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 127 [1/1] (0.00ns)   --->   "%b_7_1_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_7_1)" [mmult_accel.cpp:19]   --->   Operation 127 'read' 'b_7_1_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 128 [1/1] (0.00ns)   --->   "%b_0_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_0_2)" [mmult_accel.cpp:19]   --->   Operation 128 'read' 'b_0_2_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 129 [1/1] (0.00ns)   --->   "%b_1_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_1_2)" [mmult_accel.cpp:19]   --->   Operation 129 'read' 'b_1_2_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 130 [1/1] (0.00ns)   --->   "%b_2_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_2_2)" [mmult_accel.cpp:19]   --->   Operation 130 'read' 'b_2_2_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 131 [1/1] (0.00ns)   --->   "%b_3_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_3_2)" [mmult_accel.cpp:19]   --->   Operation 131 'read' 'b_3_2_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 132 [1/1] (0.00ns)   --->   "%b_4_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_4_2)" [mmult_accel.cpp:19]   --->   Operation 132 'read' 'b_4_2_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "%b_5_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_5_2)" [mmult_accel.cpp:19]   --->   Operation 133 'read' 'b_5_2_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 134 [1/1] (0.00ns)   --->   "%b_6_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_6_2)" [mmult_accel.cpp:19]   --->   Operation 134 'read' 'b_6_2_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 135 [1/1] (0.00ns)   --->   "%b_7_2_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_7_2)" [mmult_accel.cpp:19]   --->   Operation 135 'read' 'b_7_2_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 136 [1/1] (0.00ns)   --->   "%b_0_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_0_3)" [mmult_accel.cpp:19]   --->   Operation 136 'read' 'b_0_3_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 137 [1/1] (0.00ns)   --->   "%b_1_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_1_3)" [mmult_accel.cpp:19]   --->   Operation 137 'read' 'b_1_3_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 138 [1/1] (0.00ns)   --->   "%b_2_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_2_3)" [mmult_accel.cpp:19]   --->   Operation 138 'read' 'b_2_3_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 139 [1/1] (0.00ns)   --->   "%b_3_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_3_3)" [mmult_accel.cpp:19]   --->   Operation 139 'read' 'b_3_3_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 140 [1/1] (0.00ns)   --->   "%b_4_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_4_3)" [mmult_accel.cpp:19]   --->   Operation 140 'read' 'b_4_3_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 141 [1/1] (0.00ns)   --->   "%b_5_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_5_3)" [mmult_accel.cpp:19]   --->   Operation 141 'read' 'b_5_3_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 142 [1/1] (0.00ns)   --->   "%b_6_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_6_3)" [mmult_accel.cpp:19]   --->   Operation 142 'read' 'b_6_3_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 143 [1/1] (0.00ns)   --->   "%b_7_3_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_7_3)" [mmult_accel.cpp:19]   --->   Operation 143 'read' 'b_7_3_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 144 [1/1] (0.00ns)   --->   "%b_0_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_0_4)" [mmult_accel.cpp:19]   --->   Operation 144 'read' 'b_0_4_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 145 [1/1] (0.00ns)   --->   "%b_1_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_1_4)" [mmult_accel.cpp:19]   --->   Operation 145 'read' 'b_1_4_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 146 [1/1] (0.00ns)   --->   "%b_2_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_2_4)" [mmult_accel.cpp:19]   --->   Operation 146 'read' 'b_2_4_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 147 [1/1] (0.00ns)   --->   "%b_3_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_3_4)" [mmult_accel.cpp:19]   --->   Operation 147 'read' 'b_3_4_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 148 [1/1] (0.00ns)   --->   "%b_4_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_4_4)" [mmult_accel.cpp:19]   --->   Operation 148 'read' 'b_4_4_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 149 [1/1] (0.00ns)   --->   "%b_5_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_5_4)" [mmult_accel.cpp:19]   --->   Operation 149 'read' 'b_5_4_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 150 [1/1] (0.00ns)   --->   "%b_6_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_6_4)" [mmult_accel.cpp:19]   --->   Operation 150 'read' 'b_6_4_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 151 [1/1] (0.00ns)   --->   "%b_7_4_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_7_4)" [mmult_accel.cpp:19]   --->   Operation 151 'read' 'b_7_4_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 152 [1/1] (0.00ns)   --->   "%b_0_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_0_5)" [mmult_accel.cpp:19]   --->   Operation 152 'read' 'b_0_5_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 153 [1/1] (0.00ns)   --->   "%b_1_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_1_5)" [mmult_accel.cpp:19]   --->   Operation 153 'read' 'b_1_5_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 154 [1/1] (0.00ns)   --->   "%b_2_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_2_5)" [mmult_accel.cpp:19]   --->   Operation 154 'read' 'b_2_5_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 155 [1/1] (0.00ns)   --->   "%b_3_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_3_5)" [mmult_accel.cpp:19]   --->   Operation 155 'read' 'b_3_5_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 156 [1/1] (0.00ns)   --->   "%b_4_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_4_5)" [mmult_accel.cpp:19]   --->   Operation 156 'read' 'b_4_5_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 157 [1/1] (0.00ns)   --->   "%b_5_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_5_5)" [mmult_accel.cpp:19]   --->   Operation 157 'read' 'b_5_5_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 158 [1/1] (0.00ns)   --->   "%b_6_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_6_5)" [mmult_accel.cpp:19]   --->   Operation 158 'read' 'b_6_5_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 159 [1/1] (0.00ns)   --->   "%b_7_5_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_7_5)" [mmult_accel.cpp:19]   --->   Operation 159 'read' 'b_7_5_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 160 [1/1] (0.00ns)   --->   "%b_0_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_0_6)" [mmult_accel.cpp:19]   --->   Operation 160 'read' 'b_0_6_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 161 [1/1] (0.00ns)   --->   "%b_1_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_1_6)" [mmult_accel.cpp:19]   --->   Operation 161 'read' 'b_1_6_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 162 [1/1] (0.00ns)   --->   "%b_2_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_2_6)" [mmult_accel.cpp:19]   --->   Operation 162 'read' 'b_2_6_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 163 [1/1] (0.00ns)   --->   "%b_3_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_3_6)" [mmult_accel.cpp:19]   --->   Operation 163 'read' 'b_3_6_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 164 [1/1] (0.00ns)   --->   "%b_4_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_4_6)" [mmult_accel.cpp:19]   --->   Operation 164 'read' 'b_4_6_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 165 [1/1] (0.00ns)   --->   "%b_5_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_5_6)" [mmult_accel.cpp:19]   --->   Operation 165 'read' 'b_5_6_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 166 [1/1] (0.00ns)   --->   "%b_6_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_6_6)" [mmult_accel.cpp:19]   --->   Operation 166 'read' 'b_6_6_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 167 [1/1] (0.00ns)   --->   "%b_7_6_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_7_6)" [mmult_accel.cpp:19]   --->   Operation 167 'read' 'b_7_6_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 168 [1/1] (0.00ns)   --->   "%b_0_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_0_7)" [mmult_accel.cpp:19]   --->   Operation 168 'read' 'b_0_7_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 169 [1/1] (0.00ns)   --->   "%b_1_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_1_7)" [mmult_accel.cpp:19]   --->   Operation 169 'read' 'b_1_7_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 170 [1/1] (0.00ns)   --->   "%b_2_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_2_7)" [mmult_accel.cpp:19]   --->   Operation 170 'read' 'b_2_7_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 171 [1/1] (0.00ns)   --->   "%b_3_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_3_7)" [mmult_accel.cpp:19]   --->   Operation 171 'read' 'b_3_7_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 172 [1/1] (0.00ns)   --->   "%b_4_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_4_7)" [mmult_accel.cpp:19]   --->   Operation 172 'read' 'b_4_7_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 173 [1/1] (0.00ns)   --->   "%b_5_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_5_7)" [mmult_accel.cpp:19]   --->   Operation 173 'read' 'b_5_7_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 174 [1/1] (0.00ns)   --->   "%b_6_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_6_7)" [mmult_accel.cpp:19]   --->   Operation 174 'read' 'b_6_7_read' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 175 [1/1] (0.00ns)   --->   "%b_7_7_read = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %b_7_7)" [mmult_accel.cpp:19]   --->   Operation 175 'read' 'b_7_7_read' <Predicate = (!exitcond2)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 176 [1/2] (2.32ns)   --->   "%a_0_load = load i32* %a_0_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 176 'load' 'a_0_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 177 [1/2] (2.32ns)   --->   "%a_1_load = load i32* %a_1_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 177 'load' 'a_1_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 178 [1/2] (2.32ns)   --->   "%a_2_load = load i32* %a_2_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 178 'load' 'a_2_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 179 [1/2] (2.32ns)   --->   "%a_3_load = load i32* %a_3_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 179 'load' 'a_3_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 180 [1/2] (2.32ns)   --->   "%a_4_load = load i32* %a_4_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 180 'load' 'a_4_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 181 [1/2] (2.32ns)   --->   "%a_5_load = load i32* %a_5_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 181 'load' 'a_5_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 182 [1/2] (2.32ns)   --->   "%a_6_load = load i32* %a_6_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 182 'load' 'a_6_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 183 [1/2] (2.32ns)   --->   "%a_7_load = load i32* %a_7_addr, align 4" [mmult_accel.cpp:19]   --->   Operation 183 'load' 'a_7_load' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 4 <SV = 3> <Delay = 8.51>
ST_4 : Operation 184 [1/1] (8.51ns)   --->   "%tmp_5 = mul nsw i32 %a_0_load, %b_0_0_read" [mmult_accel.cpp:19]   --->   Operation 184 'mul' 'tmp_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 185 [1/1] (8.51ns)   --->   "%tmp_5_0_1 = mul nsw i32 %a_1_load, %b_1_0_read" [mmult_accel.cpp:19]   --->   Operation 185 'mul' 'tmp_5_0_1' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 186 [1/1] (8.51ns)   --->   "%tmp_5_0_2 = mul nsw i32 %a_2_load, %b_2_0_read" [mmult_accel.cpp:19]   --->   Operation 186 'mul' 'tmp_5_0_2' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 187 [1/1] (8.51ns)   --->   "%tmp_5_0_3 = mul nsw i32 %a_3_load, %b_3_0_read" [mmult_accel.cpp:19]   --->   Operation 187 'mul' 'tmp_5_0_3' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 188 [1/1] (8.51ns)   --->   "%tmp_5_0_4 = mul nsw i32 %a_4_load, %b_4_0_read" [mmult_accel.cpp:19]   --->   Operation 188 'mul' 'tmp_5_0_4' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 189 [1/1] (8.51ns)   --->   "%tmp_5_0_5 = mul nsw i32 %a_5_load, %b_5_0_read" [mmult_accel.cpp:19]   --->   Operation 189 'mul' 'tmp_5_0_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 190 [1/1] (8.51ns)   --->   "%tmp_5_0_6 = mul nsw i32 %a_6_load, %b_6_0_read" [mmult_accel.cpp:19]   --->   Operation 190 'mul' 'tmp_5_0_6' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 191 [1/1] (8.51ns)   --->   "%tmp_5_0_7 = mul nsw i32 %a_7_load, %b_7_0_read" [mmult_accel.cpp:19]   --->   Operation 191 'mul' 'tmp_5_0_7' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 192 [1/1] (8.51ns)   --->   "%tmp_5_1 = mul nsw i32 %a_0_load, %b_0_1_read" [mmult_accel.cpp:19]   --->   Operation 192 'mul' 'tmp_5_1' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 193 [1/1] (8.51ns)   --->   "%tmp_5_1_1 = mul nsw i32 %a_1_load, %b_1_1_read" [mmult_accel.cpp:19]   --->   Operation 193 'mul' 'tmp_5_1_1' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 194 [1/1] (8.51ns)   --->   "%tmp_5_1_2 = mul nsw i32 %a_2_load, %b_2_1_read" [mmult_accel.cpp:19]   --->   Operation 194 'mul' 'tmp_5_1_2' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 195 [1/1] (8.51ns)   --->   "%tmp_5_1_3 = mul nsw i32 %a_3_load, %b_3_1_read" [mmult_accel.cpp:19]   --->   Operation 195 'mul' 'tmp_5_1_3' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 196 [1/1] (8.51ns)   --->   "%tmp_5_1_4 = mul nsw i32 %a_4_load, %b_4_1_read" [mmult_accel.cpp:19]   --->   Operation 196 'mul' 'tmp_5_1_4' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 197 [1/1] (8.51ns)   --->   "%tmp_5_1_5 = mul nsw i32 %a_5_load, %b_5_1_read" [mmult_accel.cpp:19]   --->   Operation 197 'mul' 'tmp_5_1_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 198 [1/1] (8.51ns)   --->   "%tmp_5_1_6 = mul nsw i32 %a_6_load, %b_6_1_read" [mmult_accel.cpp:19]   --->   Operation 198 'mul' 'tmp_5_1_6' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 199 [1/1] (8.51ns)   --->   "%tmp_5_1_7 = mul nsw i32 %a_7_load, %b_7_1_read" [mmult_accel.cpp:19]   --->   Operation 199 'mul' 'tmp_5_1_7' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 200 [1/1] (8.51ns)   --->   "%tmp_5_2 = mul nsw i32 %a_0_load, %b_0_2_read" [mmult_accel.cpp:19]   --->   Operation 200 'mul' 'tmp_5_2' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 201 [1/1] (8.51ns)   --->   "%tmp_5_2_1 = mul nsw i32 %a_1_load, %b_1_2_read" [mmult_accel.cpp:19]   --->   Operation 201 'mul' 'tmp_5_2_1' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 202 [1/1] (8.51ns)   --->   "%tmp_5_2_2 = mul nsw i32 %a_2_load, %b_2_2_read" [mmult_accel.cpp:19]   --->   Operation 202 'mul' 'tmp_5_2_2' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 203 [1/1] (8.51ns)   --->   "%tmp_5_2_3 = mul nsw i32 %a_3_load, %b_3_2_read" [mmult_accel.cpp:19]   --->   Operation 203 'mul' 'tmp_5_2_3' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 204 [1/1] (8.51ns)   --->   "%tmp_5_2_4 = mul nsw i32 %a_4_load, %b_4_2_read" [mmult_accel.cpp:19]   --->   Operation 204 'mul' 'tmp_5_2_4' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 205 [1/1] (8.51ns)   --->   "%tmp_5_2_5 = mul nsw i32 %a_5_load, %b_5_2_read" [mmult_accel.cpp:19]   --->   Operation 205 'mul' 'tmp_5_2_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 206 [1/1] (8.51ns)   --->   "%tmp_5_2_6 = mul nsw i32 %a_6_load, %b_6_2_read" [mmult_accel.cpp:19]   --->   Operation 206 'mul' 'tmp_5_2_6' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 207 [1/1] (8.51ns)   --->   "%tmp_5_2_7 = mul nsw i32 %a_7_load, %b_7_2_read" [mmult_accel.cpp:19]   --->   Operation 207 'mul' 'tmp_5_2_7' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 208 [1/1] (8.51ns)   --->   "%tmp_5_3 = mul nsw i32 %a_0_load, %b_0_3_read" [mmult_accel.cpp:19]   --->   Operation 208 'mul' 'tmp_5_3' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 209 [1/1] (8.51ns)   --->   "%tmp_5_3_1 = mul nsw i32 %a_1_load, %b_1_3_read" [mmult_accel.cpp:19]   --->   Operation 209 'mul' 'tmp_5_3_1' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 210 [1/1] (8.51ns)   --->   "%tmp_5_3_2 = mul nsw i32 %a_2_load, %b_2_3_read" [mmult_accel.cpp:19]   --->   Operation 210 'mul' 'tmp_5_3_2' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 211 [1/1] (8.51ns)   --->   "%tmp_5_3_3 = mul nsw i32 %a_3_load, %b_3_3_read" [mmult_accel.cpp:19]   --->   Operation 211 'mul' 'tmp_5_3_3' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 212 [1/1] (8.51ns)   --->   "%tmp_5_3_4 = mul nsw i32 %a_4_load, %b_4_3_read" [mmult_accel.cpp:19]   --->   Operation 212 'mul' 'tmp_5_3_4' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 213 [1/1] (8.51ns)   --->   "%tmp_5_3_5 = mul nsw i32 %a_5_load, %b_5_3_read" [mmult_accel.cpp:19]   --->   Operation 213 'mul' 'tmp_5_3_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 214 [1/1] (8.51ns)   --->   "%tmp_5_3_6 = mul nsw i32 %a_6_load, %b_6_3_read" [mmult_accel.cpp:19]   --->   Operation 214 'mul' 'tmp_5_3_6' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 215 [1/1] (8.51ns)   --->   "%tmp_5_3_7 = mul nsw i32 %a_7_load, %b_7_3_read" [mmult_accel.cpp:19]   --->   Operation 215 'mul' 'tmp_5_3_7' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 216 [1/1] (8.51ns)   --->   "%tmp_5_4 = mul nsw i32 %a_0_load, %b_0_4_read" [mmult_accel.cpp:19]   --->   Operation 216 'mul' 'tmp_5_4' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 217 [1/1] (8.51ns)   --->   "%tmp_5_4_1 = mul nsw i32 %a_1_load, %b_1_4_read" [mmult_accel.cpp:19]   --->   Operation 217 'mul' 'tmp_5_4_1' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 218 [1/1] (8.51ns)   --->   "%tmp_5_4_2 = mul nsw i32 %a_2_load, %b_2_4_read" [mmult_accel.cpp:19]   --->   Operation 218 'mul' 'tmp_5_4_2' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 219 [1/1] (8.51ns)   --->   "%tmp_5_4_3 = mul nsw i32 %a_3_load, %b_3_4_read" [mmult_accel.cpp:19]   --->   Operation 219 'mul' 'tmp_5_4_3' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 220 [1/1] (8.51ns)   --->   "%tmp_5_4_4 = mul nsw i32 %a_4_load, %b_4_4_read" [mmult_accel.cpp:19]   --->   Operation 220 'mul' 'tmp_5_4_4' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 221 [1/1] (8.51ns)   --->   "%tmp_5_4_5 = mul nsw i32 %a_5_load, %b_5_4_read" [mmult_accel.cpp:19]   --->   Operation 221 'mul' 'tmp_5_4_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 222 [1/1] (8.51ns)   --->   "%tmp_5_4_6 = mul nsw i32 %a_6_load, %b_6_4_read" [mmult_accel.cpp:19]   --->   Operation 222 'mul' 'tmp_5_4_6' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 223 [1/1] (8.51ns)   --->   "%tmp_5_4_7 = mul nsw i32 %a_7_load, %b_7_4_read" [mmult_accel.cpp:19]   --->   Operation 223 'mul' 'tmp_5_4_7' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 224 [1/1] (8.51ns)   --->   "%tmp_5_5 = mul nsw i32 %a_0_load, %b_0_5_read" [mmult_accel.cpp:19]   --->   Operation 224 'mul' 'tmp_5_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 225 [1/1] (8.51ns)   --->   "%tmp_5_5_1 = mul nsw i32 %a_1_load, %b_1_5_read" [mmult_accel.cpp:19]   --->   Operation 225 'mul' 'tmp_5_5_1' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 226 [1/1] (8.51ns)   --->   "%tmp_5_5_2 = mul nsw i32 %a_2_load, %b_2_5_read" [mmult_accel.cpp:19]   --->   Operation 226 'mul' 'tmp_5_5_2' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 227 [1/1] (8.51ns)   --->   "%tmp_5_5_3 = mul nsw i32 %a_3_load, %b_3_5_read" [mmult_accel.cpp:19]   --->   Operation 227 'mul' 'tmp_5_5_3' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 228 [1/1] (8.51ns)   --->   "%tmp_5_5_4 = mul nsw i32 %a_4_load, %b_4_5_read" [mmult_accel.cpp:19]   --->   Operation 228 'mul' 'tmp_5_5_4' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 229 [1/1] (8.51ns)   --->   "%tmp_5_5_5 = mul nsw i32 %a_5_load, %b_5_5_read" [mmult_accel.cpp:19]   --->   Operation 229 'mul' 'tmp_5_5_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 230 [1/1] (8.51ns)   --->   "%tmp_5_5_6 = mul nsw i32 %a_6_load, %b_6_5_read" [mmult_accel.cpp:19]   --->   Operation 230 'mul' 'tmp_5_5_6' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 231 [1/1] (8.51ns)   --->   "%tmp_5_5_7 = mul nsw i32 %a_7_load, %b_7_5_read" [mmult_accel.cpp:19]   --->   Operation 231 'mul' 'tmp_5_5_7' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 232 [1/1] (8.51ns)   --->   "%tmp_5_6 = mul nsw i32 %a_0_load, %b_0_6_read" [mmult_accel.cpp:19]   --->   Operation 232 'mul' 'tmp_5_6' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 233 [1/1] (8.51ns)   --->   "%tmp_5_6_1 = mul nsw i32 %a_1_load, %b_1_6_read" [mmult_accel.cpp:19]   --->   Operation 233 'mul' 'tmp_5_6_1' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 234 [1/1] (8.51ns)   --->   "%tmp_5_6_2 = mul nsw i32 %a_2_load, %b_2_6_read" [mmult_accel.cpp:19]   --->   Operation 234 'mul' 'tmp_5_6_2' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 235 [1/1] (8.51ns)   --->   "%tmp_5_6_3 = mul nsw i32 %a_3_load, %b_3_6_read" [mmult_accel.cpp:19]   --->   Operation 235 'mul' 'tmp_5_6_3' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 236 [1/1] (8.51ns)   --->   "%tmp_5_6_4 = mul nsw i32 %a_4_load, %b_4_6_read" [mmult_accel.cpp:19]   --->   Operation 236 'mul' 'tmp_5_6_4' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 237 [1/1] (8.51ns)   --->   "%tmp_5_6_5 = mul nsw i32 %a_5_load, %b_5_6_read" [mmult_accel.cpp:19]   --->   Operation 237 'mul' 'tmp_5_6_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 238 [1/1] (8.51ns)   --->   "%tmp_5_6_6 = mul nsw i32 %a_6_load, %b_6_6_read" [mmult_accel.cpp:19]   --->   Operation 238 'mul' 'tmp_5_6_6' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 239 [1/1] (8.51ns)   --->   "%tmp_5_6_7 = mul nsw i32 %a_7_load, %b_7_6_read" [mmult_accel.cpp:19]   --->   Operation 239 'mul' 'tmp_5_6_7' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 240 [1/1] (8.51ns)   --->   "%tmp_5_7 = mul nsw i32 %a_0_load, %b_0_7_read" [mmult_accel.cpp:19]   --->   Operation 240 'mul' 'tmp_5_7' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 241 [1/1] (8.51ns)   --->   "%tmp_5_7_1 = mul nsw i32 %a_1_load, %b_1_7_read" [mmult_accel.cpp:19]   --->   Operation 241 'mul' 'tmp_5_7_1' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 242 [1/1] (8.51ns)   --->   "%tmp_5_7_2 = mul nsw i32 %a_2_load, %b_2_7_read" [mmult_accel.cpp:19]   --->   Operation 242 'mul' 'tmp_5_7_2' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 243 [1/1] (8.51ns)   --->   "%tmp_5_7_3 = mul nsw i32 %a_3_load, %b_3_7_read" [mmult_accel.cpp:19]   --->   Operation 243 'mul' 'tmp_5_7_3' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 244 [1/1] (8.51ns)   --->   "%tmp_5_7_4 = mul nsw i32 %a_4_load, %b_4_7_read" [mmult_accel.cpp:19]   --->   Operation 244 'mul' 'tmp_5_7_4' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 245 [1/1] (8.51ns)   --->   "%tmp_5_7_5 = mul nsw i32 %a_5_load, %b_5_7_read" [mmult_accel.cpp:19]   --->   Operation 245 'mul' 'tmp_5_7_5' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 246 [1/1] (8.51ns)   --->   "%tmp_5_7_6 = mul nsw i32 %a_6_load, %b_6_7_read" [mmult_accel.cpp:19]   --->   Operation 246 'mul' 'tmp_5_7_6' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 247 [1/1] (8.51ns)   --->   "%tmp_5_7_7 = mul nsw i32 %a_7_load, %b_7_7_read" [mmult_accel.cpp:19]   --->   Operation 247 'mul' 'tmp_5_7_7' <Predicate = (!exitcond2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.92>
ST_5 : Operation 248 [1/1] (2.55ns)   --->   "%tmp2 = add i32 %tmp_5, %tmp_5_0_1" [mmult_accel.cpp:19]   --->   Operation 248 'add' 'tmp2' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 249 [1/1] (2.55ns)   --->   "%tmp3 = add i32 %tmp_5_0_2, %tmp_5_0_3" [mmult_accel.cpp:19]   --->   Operation 249 'add' 'tmp3' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 250 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp5 = add i32 %tmp_5_0_4, %tmp_5_0_5" [mmult_accel.cpp:19]   --->   Operation 250 'add' 'tmp5' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 251 [1/1] (2.55ns)   --->   "%tmp6 = add i32 %tmp_5_0_6, %tmp_5_0_7" [mmult_accel.cpp:19]   --->   Operation 251 'add' 'tmp6' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 252 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp4 = add i32 %tmp6, %tmp5" [mmult_accel.cpp:19]   --->   Operation 252 'add' 'tmp4' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 253 [1/1] (2.55ns)   --->   "%tmp8 = add i32 %tmp_5_1, %tmp_5_1_1" [mmult_accel.cpp:19]   --->   Operation 253 'add' 'tmp8' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 254 [1/1] (2.55ns)   --->   "%tmp9 = add i32 %tmp_5_1_2, %tmp_5_1_3" [mmult_accel.cpp:19]   --->   Operation 254 'add' 'tmp9' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 255 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp11 = add i32 %tmp_5_1_4, %tmp_5_1_5" [mmult_accel.cpp:19]   --->   Operation 255 'add' 'tmp11' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 256 [1/1] (2.55ns)   --->   "%tmp12 = add i32 %tmp_5_1_6, %tmp_5_1_7" [mmult_accel.cpp:19]   --->   Operation 256 'add' 'tmp12' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 257 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp10 = add i32 %tmp12, %tmp11" [mmult_accel.cpp:19]   --->   Operation 257 'add' 'tmp10' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 258 [1/1] (2.55ns)   --->   "%tmp14 = add i32 %tmp_5_2, %tmp_5_2_1" [mmult_accel.cpp:19]   --->   Operation 258 'add' 'tmp14' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 259 [1/1] (2.55ns)   --->   "%tmp15 = add i32 %tmp_5_2_2, %tmp_5_2_3" [mmult_accel.cpp:19]   --->   Operation 259 'add' 'tmp15' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 260 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp17 = add i32 %tmp_5_2_4, %tmp_5_2_5" [mmult_accel.cpp:19]   --->   Operation 260 'add' 'tmp17' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 261 [1/1] (2.55ns)   --->   "%tmp18 = add i32 %tmp_5_2_6, %tmp_5_2_7" [mmult_accel.cpp:19]   --->   Operation 261 'add' 'tmp18' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 262 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp16 = add i32 %tmp18, %tmp17" [mmult_accel.cpp:19]   --->   Operation 262 'add' 'tmp16' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 263 [1/1] (2.55ns)   --->   "%tmp20 = add i32 %tmp_5_3, %tmp_5_3_1" [mmult_accel.cpp:19]   --->   Operation 263 'add' 'tmp20' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 264 [1/1] (2.55ns)   --->   "%tmp21 = add i32 %tmp_5_3_2, %tmp_5_3_3" [mmult_accel.cpp:19]   --->   Operation 264 'add' 'tmp21' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 265 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp23 = add i32 %tmp_5_3_4, %tmp_5_3_5" [mmult_accel.cpp:19]   --->   Operation 265 'add' 'tmp23' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 266 [1/1] (2.55ns)   --->   "%tmp24 = add i32 %tmp_5_3_6, %tmp_5_3_7" [mmult_accel.cpp:19]   --->   Operation 266 'add' 'tmp24' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 267 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp22 = add i32 %tmp24, %tmp23" [mmult_accel.cpp:19]   --->   Operation 267 'add' 'tmp22' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 268 [1/1] (2.55ns)   --->   "%tmp26 = add i32 %tmp_5_4, %tmp_5_4_1" [mmult_accel.cpp:19]   --->   Operation 268 'add' 'tmp26' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 269 [1/1] (2.55ns)   --->   "%tmp27 = add i32 %tmp_5_4_2, %tmp_5_4_3" [mmult_accel.cpp:19]   --->   Operation 269 'add' 'tmp27' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 270 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp29 = add i32 %tmp_5_4_4, %tmp_5_4_5" [mmult_accel.cpp:19]   --->   Operation 270 'add' 'tmp29' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 271 [1/1] (2.55ns)   --->   "%tmp30 = add i32 %tmp_5_4_6, %tmp_5_4_7" [mmult_accel.cpp:19]   --->   Operation 271 'add' 'tmp30' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 272 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp28 = add i32 %tmp30, %tmp29" [mmult_accel.cpp:19]   --->   Operation 272 'add' 'tmp28' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 273 [1/1] (2.55ns)   --->   "%tmp32 = add i32 %tmp_5_5, %tmp_5_5_1" [mmult_accel.cpp:19]   --->   Operation 273 'add' 'tmp32' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 274 [1/1] (2.55ns)   --->   "%tmp33 = add i32 %tmp_5_5_2, %tmp_5_5_3" [mmult_accel.cpp:19]   --->   Operation 274 'add' 'tmp33' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 275 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp35 = add i32 %tmp_5_5_4, %tmp_5_5_5" [mmult_accel.cpp:19]   --->   Operation 275 'add' 'tmp35' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 276 [1/1] (2.55ns)   --->   "%tmp36 = add i32 %tmp_5_5_6, %tmp_5_5_7" [mmult_accel.cpp:19]   --->   Operation 276 'add' 'tmp36' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 277 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp34 = add i32 %tmp36, %tmp35" [mmult_accel.cpp:19]   --->   Operation 277 'add' 'tmp34' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 278 [1/1] (2.55ns)   --->   "%tmp38 = add i32 %tmp_5_6, %tmp_5_6_1" [mmult_accel.cpp:19]   --->   Operation 278 'add' 'tmp38' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 279 [1/1] (2.55ns)   --->   "%tmp39 = add i32 %tmp_5_6_2, %tmp_5_6_3" [mmult_accel.cpp:19]   --->   Operation 279 'add' 'tmp39' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 280 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp41 = add i32 %tmp_5_6_4, %tmp_5_6_5" [mmult_accel.cpp:19]   --->   Operation 280 'add' 'tmp41' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 281 [1/1] (2.55ns)   --->   "%tmp42 = add i32 %tmp_5_6_6, %tmp_5_6_7" [mmult_accel.cpp:19]   --->   Operation 281 'add' 'tmp42' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 282 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp40 = add i32 %tmp42, %tmp41" [mmult_accel.cpp:19]   --->   Operation 282 'add' 'tmp40' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 283 [1/1] (2.55ns)   --->   "%tmp44 = add i32 %tmp_5_7, %tmp_5_7_1" [mmult_accel.cpp:19]   --->   Operation 283 'add' 'tmp44' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 284 [1/1] (2.55ns)   --->   "%tmp45 = add i32 %tmp_5_7_2, %tmp_5_7_3" [mmult_accel.cpp:19]   --->   Operation 284 'add' 'tmp45' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 285 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp47 = add i32 %tmp_5_7_4, %tmp_5_7_5" [mmult_accel.cpp:19]   --->   Operation 285 'add' 'tmp47' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 286 [1/1] (2.55ns)   --->   "%tmp48 = add i32 %tmp_5_7_6, %tmp_5_7_7" [mmult_accel.cpp:19]   --->   Operation 286 'add' 'tmp48' <Predicate = (!exitcond2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 287 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp46 = add i32 %tmp48, %tmp47" [mmult_accel.cpp:19]   --->   Operation 287 'add' 'tmp46' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 6.69>
ST_6 : Operation 288 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str2) nounwind" [mmult_accel.cpp:14]   --->   Operation 288 'specloopname' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 289 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([3 x i8]* @p_str2) nounwind" [mmult_accel.cpp:14]   --->   Operation 289 'specregionbegin' 'tmp_1' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 290 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [mmult_accel.cpp:14]   --->   Operation 290 'specpipeline' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 291 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp1 = add i32 %tmp3, %tmp2" [mmult_accel.cpp:19]   --->   Operation 291 'add' 'tmp1' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 292 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%sum_1_0_7 = add nsw i32 %tmp4, %tmp1" [mmult_accel.cpp:19]   --->   Operation 292 'add' 'sum_1_0_7' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 293 [1/1] (0.00ns)   --->   "%out_0_addr = getelementptr [8 x i32]* %out_0, i64 0, i64 %tmp" [mmult_accel.cpp:20]   --->   Operation 293 'getelementptr' 'out_0_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 294 [1/1] (2.32ns)   --->   "store i32 %sum_1_0_7, i32* %out_0_addr, align 4" [mmult_accel.cpp:20]   --->   Operation 294 'store' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 295 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp7 = add i32 %tmp9, %tmp8" [mmult_accel.cpp:19]   --->   Operation 295 'add' 'tmp7' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 296 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%sum_1_1_7 = add nsw i32 %tmp10, %tmp7" [mmult_accel.cpp:19]   --->   Operation 296 'add' 'sum_1_1_7' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 297 [1/1] (0.00ns)   --->   "%out_1_addr = getelementptr [8 x i32]* %out_1, i64 0, i64 %tmp" [mmult_accel.cpp:20]   --->   Operation 297 'getelementptr' 'out_1_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 298 [1/1] (2.32ns)   --->   "store i32 %sum_1_1_7, i32* %out_1_addr, align 4" [mmult_accel.cpp:20]   --->   Operation 298 'store' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 299 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp13 = add i32 %tmp15, %tmp14" [mmult_accel.cpp:19]   --->   Operation 299 'add' 'tmp13' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 300 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%sum_1_2_7 = add nsw i32 %tmp16, %tmp13" [mmult_accel.cpp:19]   --->   Operation 300 'add' 'sum_1_2_7' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 301 [1/1] (0.00ns)   --->   "%out_2_addr = getelementptr [8 x i32]* %out_2, i64 0, i64 %tmp" [mmult_accel.cpp:20]   --->   Operation 301 'getelementptr' 'out_2_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 302 [1/1] (2.32ns)   --->   "store i32 %sum_1_2_7, i32* %out_2_addr, align 4" [mmult_accel.cpp:20]   --->   Operation 302 'store' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 303 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp19 = add i32 %tmp21, %tmp20" [mmult_accel.cpp:19]   --->   Operation 303 'add' 'tmp19' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 304 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%sum_1_3_7 = add nsw i32 %tmp22, %tmp19" [mmult_accel.cpp:19]   --->   Operation 304 'add' 'sum_1_3_7' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 305 [1/1] (0.00ns)   --->   "%out_3_addr = getelementptr [8 x i32]* %out_3, i64 0, i64 %tmp" [mmult_accel.cpp:20]   --->   Operation 305 'getelementptr' 'out_3_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 306 [1/1] (2.32ns)   --->   "store i32 %sum_1_3_7, i32* %out_3_addr, align 4" [mmult_accel.cpp:20]   --->   Operation 306 'store' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 307 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp25 = add i32 %tmp27, %tmp26" [mmult_accel.cpp:19]   --->   Operation 307 'add' 'tmp25' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 308 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%sum_1_4_7 = add nsw i32 %tmp28, %tmp25" [mmult_accel.cpp:19]   --->   Operation 308 'add' 'sum_1_4_7' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 309 [1/1] (0.00ns)   --->   "%out_4_addr = getelementptr [8 x i32]* %out_4, i64 0, i64 %tmp" [mmult_accel.cpp:20]   --->   Operation 309 'getelementptr' 'out_4_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 310 [1/1] (2.32ns)   --->   "store i32 %sum_1_4_7, i32* %out_4_addr, align 4" [mmult_accel.cpp:20]   --->   Operation 310 'store' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 311 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp31 = add i32 %tmp33, %tmp32" [mmult_accel.cpp:19]   --->   Operation 311 'add' 'tmp31' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 312 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%sum_1_5_7 = add nsw i32 %tmp34, %tmp31" [mmult_accel.cpp:19]   --->   Operation 312 'add' 'sum_1_5_7' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 313 [1/1] (0.00ns)   --->   "%out_5_addr = getelementptr [8 x i32]* %out_5, i64 0, i64 %tmp" [mmult_accel.cpp:20]   --->   Operation 313 'getelementptr' 'out_5_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 314 [1/1] (2.32ns)   --->   "store i32 %sum_1_5_7, i32* %out_5_addr, align 4" [mmult_accel.cpp:20]   --->   Operation 314 'store' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 315 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp37 = add i32 %tmp39, %tmp38" [mmult_accel.cpp:19]   --->   Operation 315 'add' 'tmp37' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 316 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%sum_1_6_7 = add nsw i32 %tmp40, %tmp37" [mmult_accel.cpp:19]   --->   Operation 316 'add' 'sum_1_6_7' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 317 [1/1] (0.00ns)   --->   "%out_6_addr = getelementptr [8 x i32]* %out_6, i64 0, i64 %tmp" [mmult_accel.cpp:20]   --->   Operation 317 'getelementptr' 'out_6_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 318 [1/1] (2.32ns)   --->   "store i32 %sum_1_6_7, i32* %out_6_addr, align 4" [mmult_accel.cpp:20]   --->   Operation 318 'store' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 319 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp43 = add i32 %tmp45, %tmp44" [mmult_accel.cpp:19]   --->   Operation 319 'add' 'tmp43' <Predicate = (!exitcond2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 320 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%sum_1_7_7 = add nsw i32 %tmp46, %tmp43" [mmult_accel.cpp:19]   --->   Operation 320 'add' 'sum_1_7_7' <Predicate = (!exitcond2)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 321 [1/1] (0.00ns)   --->   "%out_7_addr = getelementptr [8 x i32]* %out_7, i64 0, i64 %tmp" [mmult_accel.cpp:20]   --->   Operation 321 'getelementptr' 'out_7_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 322 [1/1] (2.32ns)   --->   "store i32 %sum_1_7_7, i32* %out_7_addr, align 4" [mmult_accel.cpp:20]   --->   Operation 322 'store' <Predicate = (!exitcond2)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 323 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([3 x i8]* @p_str2, i32 %tmp_1) nounwind" [mmult_accel.cpp:21]   --->   Operation 323 'specregionend' 'empty_2' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 324 [1/1] (0.00ns)   --->   "br label %1" [mmult_accel.cpp:13]   --->   Operation 324 'br' <Predicate = (!exitcond2)> <Delay = 0.00>

State 7 <SV = 2> <Delay = 0.00>
ST_7 : Operation 325 [1/1] (0.00ns)   --->   "ret void" [mmult_accel.cpp:24]   --->   Operation 325 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('ia') with incoming values : ('ia', mmult_accel.cpp:13) [164]  (1.77 ns)

 <State 2>: 2.32ns
The critical path consists of the following:
	'phi' operation ('ia') with incoming values : ('ia', mmult_accel.cpp:13) [164]  (0 ns)
	'getelementptr' operation ('a_0_addr', mmult_accel.cpp:19) [174]  (0 ns)
	'load' operation ('a_0_load', mmult_accel.cpp:19) on array 'a_0' [175]  (2.32 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'load' operation ('a_0_load', mmult_accel.cpp:19) on array 'a_0' [175]  (2.32 ns)

 <State 4>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_5', mmult_accel.cpp:19) [177]  (8.51 ns)

 <State 5>: 6.92ns
The critical path consists of the following:
	'add' operation ('tmp6', mmult_accel.cpp:19) [210]  (2.55 ns)
	'add' operation ('tmp4', mmult_accel.cpp:19) [211]  (4.37 ns)

 <State 6>: 6.69ns
The critical path consists of the following:
	'add' operation ('tmp1', mmult_accel.cpp:19) [208]  (0 ns)
	'add' operation ('sum_1_0_7', mmult_accel.cpp:19) [212]  (4.37 ns)
	'store' operation (mmult_accel.cpp:20) of variable 'sum_1_0_7', mmult_accel.cpp:19 on array 'out_0' [214]  (2.32 ns)

 <State 7>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
