// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mmult_hw,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.510000,HLS_SYN_LAT=13,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=192,HLS_SYN_FF=7313,HLS_SYN_LUT=3380,HLS_VERSION=2018_3}" *)

module mmult_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_address0,
        a_0_ce0,
        a_0_q0,
        a_1_address0,
        a_1_ce0,
        a_1_q0,
        a_2_address0,
        a_2_ce0,
        a_2_q0,
        a_3_address0,
        a_3_ce0,
        a_3_q0,
        a_4_address0,
        a_4_ce0,
        a_4_q0,
        a_5_address0,
        a_5_ce0,
        a_5_q0,
        a_6_address0,
        a_6_ce0,
        a_6_q0,
        a_7_address0,
        a_7_ce0,
        a_7_q0,
        b_0_0,
        b_0_1,
        b_0_2,
        b_0_3,
        b_0_4,
        b_0_5,
        b_0_6,
        b_0_7,
        b_1_0,
        b_1_1,
        b_1_2,
        b_1_3,
        b_1_4,
        b_1_5,
        b_1_6,
        b_1_7,
        b_2_0,
        b_2_1,
        b_2_2,
        b_2_3,
        b_2_4,
        b_2_5,
        b_2_6,
        b_2_7,
        b_3_0,
        b_3_1,
        b_3_2,
        b_3_3,
        b_3_4,
        b_3_5,
        b_3_6,
        b_3_7,
        b_4_0,
        b_4_1,
        b_4_2,
        b_4_3,
        b_4_4,
        b_4_5,
        b_4_6,
        b_4_7,
        b_5_0,
        b_5_1,
        b_5_2,
        b_5_3,
        b_5_4,
        b_5_5,
        b_5_6,
        b_5_7,
        b_6_0,
        b_6_1,
        b_6_2,
        b_6_3,
        b_6_4,
        b_6_5,
        b_6_6,
        b_6_7,
        b_7_0,
        b_7_1,
        b_7_2,
        b_7_3,
        b_7_4,
        b_7_5,
        b_7_6,
        b_7_7,
        out_0_address0,
        out_0_ce0,
        out_0_we0,
        out_0_d0,
        out_1_address0,
        out_1_ce0,
        out_1_we0,
        out_1_d0,
        out_2_address0,
        out_2_ce0,
        out_2_we0,
        out_2_d0,
        out_3_address0,
        out_3_ce0,
        out_3_we0,
        out_3_d0,
        out_4_address0,
        out_4_ce0,
        out_4_we0,
        out_4_d0,
        out_5_address0,
        out_5_ce0,
        out_5_we0,
        out_5_d0,
        out_6_address0,
        out_6_ce0,
        out_6_we0,
        out_6_d0,
        out_7_address0,
        out_7_ce0,
        out_7_we0,
        out_7_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] a_0_address0;
output   a_0_ce0;
input  [31:0] a_0_q0;
output  [2:0] a_1_address0;
output   a_1_ce0;
input  [31:0] a_1_q0;
output  [2:0] a_2_address0;
output   a_2_ce0;
input  [31:0] a_2_q0;
output  [2:0] a_3_address0;
output   a_3_ce0;
input  [31:0] a_3_q0;
output  [2:0] a_4_address0;
output   a_4_ce0;
input  [31:0] a_4_q0;
output  [2:0] a_5_address0;
output   a_5_ce0;
input  [31:0] a_5_q0;
output  [2:0] a_6_address0;
output   a_6_ce0;
input  [31:0] a_6_q0;
output  [2:0] a_7_address0;
output   a_7_ce0;
input  [31:0] a_7_q0;
input  [31:0] b_0_0;
input  [31:0] b_0_1;
input  [31:0] b_0_2;
input  [31:0] b_0_3;
input  [31:0] b_0_4;
input  [31:0] b_0_5;
input  [31:0] b_0_6;
input  [31:0] b_0_7;
input  [31:0] b_1_0;
input  [31:0] b_1_1;
input  [31:0] b_1_2;
input  [31:0] b_1_3;
input  [31:0] b_1_4;
input  [31:0] b_1_5;
input  [31:0] b_1_6;
input  [31:0] b_1_7;
input  [31:0] b_2_0;
input  [31:0] b_2_1;
input  [31:0] b_2_2;
input  [31:0] b_2_3;
input  [31:0] b_2_4;
input  [31:0] b_2_5;
input  [31:0] b_2_6;
input  [31:0] b_2_7;
input  [31:0] b_3_0;
input  [31:0] b_3_1;
input  [31:0] b_3_2;
input  [31:0] b_3_3;
input  [31:0] b_3_4;
input  [31:0] b_3_5;
input  [31:0] b_3_6;
input  [31:0] b_3_7;
input  [31:0] b_4_0;
input  [31:0] b_4_1;
input  [31:0] b_4_2;
input  [31:0] b_4_3;
input  [31:0] b_4_4;
input  [31:0] b_4_5;
input  [31:0] b_4_6;
input  [31:0] b_4_7;
input  [31:0] b_5_0;
input  [31:0] b_5_1;
input  [31:0] b_5_2;
input  [31:0] b_5_3;
input  [31:0] b_5_4;
input  [31:0] b_5_5;
input  [31:0] b_5_6;
input  [31:0] b_5_7;
input  [31:0] b_6_0;
input  [31:0] b_6_1;
input  [31:0] b_6_2;
input  [31:0] b_6_3;
input  [31:0] b_6_4;
input  [31:0] b_6_5;
input  [31:0] b_6_6;
input  [31:0] b_6_7;
input  [31:0] b_7_0;
input  [31:0] b_7_1;
input  [31:0] b_7_2;
input  [31:0] b_7_3;
input  [31:0] b_7_4;
input  [31:0] b_7_5;
input  [31:0] b_7_6;
input  [31:0] b_7_7;
output  [2:0] out_0_address0;
output   out_0_ce0;
output   out_0_we0;
output  [31:0] out_0_d0;
output  [2:0] out_1_address0;
output   out_1_ce0;
output   out_1_we0;
output  [31:0] out_1_d0;
output  [2:0] out_2_address0;
output   out_2_ce0;
output   out_2_we0;
output  [31:0] out_2_d0;
output  [2:0] out_3_address0;
output   out_3_ce0;
output   out_3_we0;
output  [31:0] out_3_d0;
output  [2:0] out_4_address0;
output   out_4_ce0;
output   out_4_we0;
output  [31:0] out_4_d0;
output  [2:0] out_5_address0;
output   out_5_ce0;
output   out_5_we0;
output  [31:0] out_5_d0;
output  [2:0] out_6_address0;
output   out_6_ce0;
output   out_6_we0;
output  [31:0] out_6_d0;
output  [2:0] out_7_address0;
output   out_7_ce0;
output   out_7_we0;
output  [31:0] out_7_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_ce0;
reg a_1_ce0;
reg a_2_ce0;
reg a_3_ce0;
reg a_4_ce0;
reg a_5_ce0;
reg a_6_ce0;
reg a_7_ce0;
reg out_0_ce0;
reg out_0_we0;
reg out_1_ce0;
reg out_1_we0;
reg out_2_ce0;
reg out_2_we0;
reg out_3_ce0;
reg out_3_we0;
reg out_4_ce0;
reg out_4_we0;
reg out_5_ce0;
reg out_5_we0;
reg out_6_ce0;
reg out_6_we0;
reg out_7_ce0;
reg out_7_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] ia_reg_788;
wire   [0:0] exitcond2_fu_799_p2;
reg   [0:0] exitcond2_reg_1335;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond2_reg_1335_pp0_iter1_reg;
reg   [0:0] exitcond2_reg_1335_pp0_iter2_reg;
reg   [0:0] exitcond2_reg_1335_pp0_iter3_reg;
wire   [3:0] ia_1_fu_805_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] tmp_fu_811_p1;
reg   [63:0] tmp_reg_1344;
reg   [63:0] tmp_reg_1344_pp0_iter1_reg;
reg   [63:0] tmp_reg_1344_pp0_iter2_reg;
reg   [63:0] tmp_reg_1344_pp0_iter3_reg;
reg  signed [31:0] b_0_0_read_reg_1361;
reg  signed [31:0] b_0_0_read_reg_1361_pp0_iter1_reg;
reg  signed [31:0] b_1_0_read_reg_1371;
reg  signed [31:0] b_1_0_read_reg_1371_pp0_iter1_reg;
reg  signed [31:0] b_2_0_read_reg_1381;
reg  signed [31:0] b_2_0_read_reg_1381_pp0_iter1_reg;
reg  signed [31:0] b_3_0_read_reg_1391;
reg  signed [31:0] b_3_0_read_reg_1391_pp0_iter1_reg;
reg  signed [31:0] b_4_0_read_reg_1401;
reg  signed [31:0] b_4_0_read_reg_1401_pp0_iter1_reg;
reg  signed [31:0] b_5_0_read_reg_1411;
reg  signed [31:0] b_5_0_read_reg_1411_pp0_iter1_reg;
reg  signed [31:0] b_6_0_read_reg_1421;
reg  signed [31:0] b_6_0_read_reg_1421_pp0_iter1_reg;
reg  signed [31:0] b_7_0_read_reg_1431;
reg  signed [31:0] b_7_0_read_reg_1431_pp0_iter1_reg;
reg  signed [31:0] b_0_1_read_reg_1436;
reg  signed [31:0] b_0_1_read_reg_1436_pp0_iter1_reg;
reg  signed [31:0] b_1_1_read_reg_1441;
reg  signed [31:0] b_1_1_read_reg_1441_pp0_iter1_reg;
reg  signed [31:0] b_2_1_read_reg_1446;
reg  signed [31:0] b_2_1_read_reg_1446_pp0_iter1_reg;
reg  signed [31:0] b_3_1_read_reg_1451;
reg  signed [31:0] b_3_1_read_reg_1451_pp0_iter1_reg;
reg  signed [31:0] b_4_1_read_reg_1456;
reg  signed [31:0] b_4_1_read_reg_1456_pp0_iter1_reg;
reg  signed [31:0] b_5_1_read_reg_1461;
reg  signed [31:0] b_5_1_read_reg_1461_pp0_iter1_reg;
reg  signed [31:0] b_6_1_read_reg_1466;
reg  signed [31:0] b_6_1_read_reg_1466_pp0_iter1_reg;
reg  signed [31:0] b_7_1_read_reg_1471;
reg  signed [31:0] b_7_1_read_reg_1471_pp0_iter1_reg;
reg  signed [31:0] b_0_2_read_reg_1476;
reg  signed [31:0] b_0_2_read_reg_1476_pp0_iter1_reg;
reg  signed [31:0] b_1_2_read_reg_1481;
reg  signed [31:0] b_1_2_read_reg_1481_pp0_iter1_reg;
reg  signed [31:0] b_2_2_read_reg_1486;
reg  signed [31:0] b_2_2_read_reg_1486_pp0_iter1_reg;
reg  signed [31:0] b_3_2_read_reg_1491;
reg  signed [31:0] b_3_2_read_reg_1491_pp0_iter1_reg;
reg  signed [31:0] b_4_2_read_reg_1496;
reg  signed [31:0] b_4_2_read_reg_1496_pp0_iter1_reg;
reg  signed [31:0] b_5_2_read_reg_1501;
reg  signed [31:0] b_5_2_read_reg_1501_pp0_iter1_reg;
reg  signed [31:0] b_6_2_read_reg_1506;
reg  signed [31:0] b_6_2_read_reg_1506_pp0_iter1_reg;
reg  signed [31:0] b_7_2_read_reg_1511;
reg  signed [31:0] b_7_2_read_reg_1511_pp0_iter1_reg;
reg  signed [31:0] b_0_3_read_reg_1516;
reg  signed [31:0] b_0_3_read_reg_1516_pp0_iter1_reg;
reg  signed [31:0] b_1_3_read_reg_1521;
reg  signed [31:0] b_1_3_read_reg_1521_pp0_iter1_reg;
reg  signed [31:0] b_2_3_read_reg_1526;
reg  signed [31:0] b_2_3_read_reg_1526_pp0_iter1_reg;
reg  signed [31:0] b_3_3_read_reg_1531;
reg  signed [31:0] b_3_3_read_reg_1531_pp0_iter1_reg;
reg  signed [31:0] b_4_3_read_reg_1536;
reg  signed [31:0] b_4_3_read_reg_1536_pp0_iter1_reg;
reg  signed [31:0] b_5_3_read_reg_1541;
reg  signed [31:0] b_5_3_read_reg_1541_pp0_iter1_reg;
reg  signed [31:0] b_6_3_read_reg_1546;
reg  signed [31:0] b_6_3_read_reg_1546_pp0_iter1_reg;
reg  signed [31:0] b_7_3_read_reg_1551;
reg  signed [31:0] b_7_3_read_reg_1551_pp0_iter1_reg;
reg  signed [31:0] b_0_4_read_reg_1556;
reg  signed [31:0] b_0_4_read_reg_1556_pp0_iter1_reg;
reg  signed [31:0] b_1_4_read_reg_1561;
reg  signed [31:0] b_1_4_read_reg_1561_pp0_iter1_reg;
reg  signed [31:0] b_2_4_read_reg_1566;
reg  signed [31:0] b_2_4_read_reg_1566_pp0_iter1_reg;
reg  signed [31:0] b_3_4_read_reg_1571;
reg  signed [31:0] b_3_4_read_reg_1571_pp0_iter1_reg;
reg  signed [31:0] b_4_4_read_reg_1576;
reg  signed [31:0] b_4_4_read_reg_1576_pp0_iter1_reg;
reg  signed [31:0] b_5_4_read_reg_1581;
reg  signed [31:0] b_5_4_read_reg_1581_pp0_iter1_reg;
reg  signed [31:0] b_6_4_read_reg_1586;
reg  signed [31:0] b_6_4_read_reg_1586_pp0_iter1_reg;
reg  signed [31:0] b_7_4_read_reg_1591;
reg  signed [31:0] b_7_4_read_reg_1591_pp0_iter1_reg;
reg  signed [31:0] b_0_5_read_reg_1596;
reg  signed [31:0] b_0_5_read_reg_1596_pp0_iter1_reg;
reg  signed [31:0] b_1_5_read_reg_1601;
reg  signed [31:0] b_1_5_read_reg_1601_pp0_iter1_reg;
reg  signed [31:0] b_2_5_read_reg_1606;
reg  signed [31:0] b_2_5_read_reg_1606_pp0_iter1_reg;
reg  signed [31:0] b_3_5_read_reg_1611;
reg  signed [31:0] b_3_5_read_reg_1611_pp0_iter1_reg;
reg  signed [31:0] b_4_5_read_reg_1616;
reg  signed [31:0] b_4_5_read_reg_1616_pp0_iter1_reg;
reg  signed [31:0] b_5_5_read_reg_1621;
reg  signed [31:0] b_5_5_read_reg_1621_pp0_iter1_reg;
reg  signed [31:0] b_6_5_read_reg_1626;
reg  signed [31:0] b_6_5_read_reg_1626_pp0_iter1_reg;
reg  signed [31:0] b_7_5_read_reg_1631;
reg  signed [31:0] b_7_5_read_reg_1631_pp0_iter1_reg;
reg  signed [31:0] b_0_6_read_reg_1636;
reg  signed [31:0] b_0_6_read_reg_1636_pp0_iter1_reg;
reg  signed [31:0] b_1_6_read_reg_1641;
reg  signed [31:0] b_1_6_read_reg_1641_pp0_iter1_reg;
reg  signed [31:0] b_2_6_read_reg_1646;
reg  signed [31:0] b_2_6_read_reg_1646_pp0_iter1_reg;
reg  signed [31:0] b_3_6_read_reg_1651;
reg  signed [31:0] b_3_6_read_reg_1651_pp0_iter1_reg;
reg  signed [31:0] b_4_6_read_reg_1656;
reg  signed [31:0] b_4_6_read_reg_1656_pp0_iter1_reg;
reg  signed [31:0] b_5_6_read_reg_1661;
reg  signed [31:0] b_5_6_read_reg_1661_pp0_iter1_reg;
reg  signed [31:0] b_6_6_read_reg_1666;
reg  signed [31:0] b_6_6_read_reg_1666_pp0_iter1_reg;
reg  signed [31:0] b_7_6_read_reg_1671;
reg  signed [31:0] b_7_6_read_reg_1671_pp0_iter1_reg;
reg  signed [31:0] b_0_7_read_reg_1676;
reg  signed [31:0] b_0_7_read_reg_1676_pp0_iter1_reg;
reg  signed [31:0] b_1_7_read_reg_1681;
reg  signed [31:0] b_1_7_read_reg_1681_pp0_iter1_reg;
reg  signed [31:0] b_2_7_read_reg_1686;
reg  signed [31:0] b_2_7_read_reg_1686_pp0_iter1_reg;
reg  signed [31:0] b_3_7_read_reg_1691;
reg  signed [31:0] b_3_7_read_reg_1691_pp0_iter1_reg;
reg  signed [31:0] b_4_7_read_reg_1696;
reg  signed [31:0] b_4_7_read_reg_1696_pp0_iter1_reg;
reg  signed [31:0] b_5_7_read_reg_1701;
reg  signed [31:0] b_5_7_read_reg_1701_pp0_iter1_reg;
reg  signed [31:0] b_6_7_read_reg_1706;
reg  signed [31:0] b_6_7_read_reg_1706_pp0_iter1_reg;
reg  signed [31:0] b_7_7_read_reg_1711;
reg  signed [31:0] b_7_7_read_reg_1711_pp0_iter1_reg;
reg  signed [31:0] a_0_load_reg_1716;
reg  signed [31:0] a_1_load_reg_1728;
reg  signed [31:0] a_2_load_reg_1740;
reg  signed [31:0] a_3_load_reg_1752;
reg  signed [31:0] a_4_load_reg_1764;
reg  signed [31:0] a_5_load_reg_1776;
reg  signed [31:0] a_6_load_reg_1788;
reg  signed [31:0] a_7_load_reg_1800;
wire   [31:0] tmp_5_fu_823_p2;
reg   [31:0] tmp_5_reg_1812;
wire   [31:0] tmp_5_0_1_fu_827_p2;
reg   [31:0] tmp_5_0_1_reg_1817;
wire   [31:0] tmp_5_0_2_fu_831_p2;
reg   [31:0] tmp_5_0_2_reg_1822;
wire   [31:0] tmp_5_0_3_fu_835_p2;
reg   [31:0] tmp_5_0_3_reg_1827;
wire   [31:0] tmp_5_0_4_fu_839_p2;
reg   [31:0] tmp_5_0_4_reg_1832;
wire   [31:0] tmp_5_0_5_fu_843_p2;
reg   [31:0] tmp_5_0_5_reg_1837;
wire   [31:0] tmp_5_0_6_fu_847_p2;
reg   [31:0] tmp_5_0_6_reg_1842;
wire   [31:0] tmp_5_0_7_fu_851_p2;
reg   [31:0] tmp_5_0_7_reg_1847;
wire   [31:0] tmp_5_1_fu_855_p2;
reg   [31:0] tmp_5_1_reg_1852;
wire   [31:0] tmp_5_1_1_fu_859_p2;
reg   [31:0] tmp_5_1_1_reg_1857;
wire   [31:0] tmp_5_1_2_fu_863_p2;
reg   [31:0] tmp_5_1_2_reg_1862;
wire   [31:0] tmp_5_1_3_fu_867_p2;
reg   [31:0] tmp_5_1_3_reg_1867;
wire   [31:0] tmp_5_1_4_fu_871_p2;
reg   [31:0] tmp_5_1_4_reg_1872;
wire   [31:0] tmp_5_1_5_fu_875_p2;
reg   [31:0] tmp_5_1_5_reg_1877;
wire   [31:0] tmp_5_1_6_fu_879_p2;
reg   [31:0] tmp_5_1_6_reg_1882;
wire   [31:0] tmp_5_1_7_fu_883_p2;
reg   [31:0] tmp_5_1_7_reg_1887;
wire   [31:0] tmp_5_2_fu_887_p2;
reg   [31:0] tmp_5_2_reg_1892;
wire   [31:0] tmp_5_2_1_fu_891_p2;
reg   [31:0] tmp_5_2_1_reg_1897;
wire   [31:0] tmp_5_2_2_fu_895_p2;
reg   [31:0] tmp_5_2_2_reg_1902;
wire   [31:0] tmp_5_2_3_fu_899_p2;
reg   [31:0] tmp_5_2_3_reg_1907;
wire   [31:0] tmp_5_2_4_fu_903_p2;
reg   [31:0] tmp_5_2_4_reg_1912;
wire   [31:0] tmp_5_2_5_fu_907_p2;
reg   [31:0] tmp_5_2_5_reg_1917;
wire   [31:0] tmp_5_2_6_fu_911_p2;
reg   [31:0] tmp_5_2_6_reg_1922;
wire   [31:0] tmp_5_2_7_fu_915_p2;
reg   [31:0] tmp_5_2_7_reg_1927;
wire   [31:0] tmp_5_3_fu_919_p2;
reg   [31:0] tmp_5_3_reg_1932;
wire   [31:0] tmp_5_3_1_fu_923_p2;
reg   [31:0] tmp_5_3_1_reg_1937;
wire   [31:0] tmp_5_3_2_fu_927_p2;
reg   [31:0] tmp_5_3_2_reg_1942;
wire   [31:0] tmp_5_3_3_fu_931_p2;
reg   [31:0] tmp_5_3_3_reg_1947;
wire   [31:0] tmp_5_3_4_fu_935_p2;
reg   [31:0] tmp_5_3_4_reg_1952;
wire   [31:0] tmp_5_3_5_fu_939_p2;
reg   [31:0] tmp_5_3_5_reg_1957;
wire   [31:0] tmp_5_3_6_fu_943_p2;
reg   [31:0] tmp_5_3_6_reg_1962;
wire   [31:0] tmp_5_3_7_fu_947_p2;
reg   [31:0] tmp_5_3_7_reg_1967;
wire   [31:0] tmp_5_4_fu_951_p2;
reg   [31:0] tmp_5_4_reg_1972;
wire   [31:0] tmp_5_4_1_fu_955_p2;
reg   [31:0] tmp_5_4_1_reg_1977;
wire   [31:0] tmp_5_4_2_fu_959_p2;
reg   [31:0] tmp_5_4_2_reg_1982;
wire   [31:0] tmp_5_4_3_fu_963_p2;
reg   [31:0] tmp_5_4_3_reg_1987;
wire   [31:0] tmp_5_4_4_fu_967_p2;
reg   [31:0] tmp_5_4_4_reg_1992;
wire   [31:0] tmp_5_4_5_fu_971_p2;
reg   [31:0] tmp_5_4_5_reg_1997;
wire   [31:0] tmp_5_4_6_fu_975_p2;
reg   [31:0] tmp_5_4_6_reg_2002;
wire   [31:0] tmp_5_4_7_fu_979_p2;
reg   [31:0] tmp_5_4_7_reg_2007;
wire   [31:0] tmp_5_5_fu_983_p2;
reg   [31:0] tmp_5_5_reg_2012;
wire   [31:0] tmp_5_5_1_fu_987_p2;
reg   [31:0] tmp_5_5_1_reg_2017;
wire   [31:0] tmp_5_5_2_fu_991_p2;
reg   [31:0] tmp_5_5_2_reg_2022;
wire   [31:0] tmp_5_5_3_fu_995_p2;
reg   [31:0] tmp_5_5_3_reg_2027;
wire   [31:0] tmp_5_5_4_fu_999_p2;
reg   [31:0] tmp_5_5_4_reg_2032;
wire   [31:0] tmp_5_5_5_fu_1003_p2;
reg   [31:0] tmp_5_5_5_reg_2037;
wire   [31:0] tmp_5_5_6_fu_1007_p2;
reg   [31:0] tmp_5_5_6_reg_2042;
wire   [31:0] tmp_5_5_7_fu_1011_p2;
reg   [31:0] tmp_5_5_7_reg_2047;
wire   [31:0] tmp_5_6_fu_1015_p2;
reg   [31:0] tmp_5_6_reg_2052;
wire   [31:0] tmp_5_6_1_fu_1019_p2;
reg   [31:0] tmp_5_6_1_reg_2057;
wire   [31:0] tmp_5_6_2_fu_1023_p2;
reg   [31:0] tmp_5_6_2_reg_2062;
wire   [31:0] tmp_5_6_3_fu_1027_p2;
reg   [31:0] tmp_5_6_3_reg_2067;
wire   [31:0] tmp_5_6_4_fu_1031_p2;
reg   [31:0] tmp_5_6_4_reg_2072;
wire   [31:0] tmp_5_6_5_fu_1035_p2;
reg   [31:0] tmp_5_6_5_reg_2077;
wire   [31:0] tmp_5_6_6_fu_1039_p2;
reg   [31:0] tmp_5_6_6_reg_2082;
wire   [31:0] tmp_5_6_7_fu_1043_p2;
reg   [31:0] tmp_5_6_7_reg_2087;
wire   [31:0] tmp_5_7_fu_1047_p2;
reg   [31:0] tmp_5_7_reg_2092;
wire   [31:0] tmp_5_7_1_fu_1051_p2;
reg   [31:0] tmp_5_7_1_reg_2097;
wire   [31:0] tmp_5_7_2_fu_1055_p2;
reg   [31:0] tmp_5_7_2_reg_2102;
wire   [31:0] tmp_5_7_3_fu_1059_p2;
reg   [31:0] tmp_5_7_3_reg_2107;
wire   [31:0] tmp_5_7_4_fu_1063_p2;
reg   [31:0] tmp_5_7_4_reg_2112;
wire   [31:0] tmp_5_7_5_fu_1067_p2;
reg   [31:0] tmp_5_7_5_reg_2117;
wire   [31:0] tmp_5_7_6_fu_1071_p2;
reg   [31:0] tmp_5_7_6_reg_2122;
wire   [31:0] tmp_5_7_7_fu_1075_p2;
reg   [31:0] tmp_5_7_7_reg_2127;
wire   [31:0] tmp2_fu_1079_p2;
reg   [31:0] tmp2_reg_2132;
wire   [31:0] tmp3_fu_1083_p2;
reg   [31:0] tmp3_reg_2137;
wire   [31:0] tmp4_fu_1095_p2;
reg   [31:0] tmp4_reg_2142;
wire   [31:0] tmp8_fu_1101_p2;
reg   [31:0] tmp8_reg_2147;
wire   [31:0] tmp9_fu_1105_p2;
reg   [31:0] tmp9_reg_2152;
wire   [31:0] tmp10_fu_1117_p2;
reg   [31:0] tmp10_reg_2157;
wire   [31:0] tmp14_fu_1123_p2;
reg   [31:0] tmp14_reg_2162;
wire   [31:0] tmp15_fu_1127_p2;
reg   [31:0] tmp15_reg_2167;
wire   [31:0] tmp16_fu_1139_p2;
reg   [31:0] tmp16_reg_2172;
wire   [31:0] tmp20_fu_1145_p2;
reg   [31:0] tmp20_reg_2177;
wire   [31:0] tmp21_fu_1149_p2;
reg   [31:0] tmp21_reg_2182;
wire   [31:0] tmp22_fu_1161_p2;
reg   [31:0] tmp22_reg_2187;
wire   [31:0] tmp26_fu_1167_p2;
reg   [31:0] tmp26_reg_2192;
wire   [31:0] tmp27_fu_1171_p2;
reg   [31:0] tmp27_reg_2197;
wire   [31:0] tmp28_fu_1183_p2;
reg   [31:0] tmp28_reg_2202;
wire   [31:0] tmp32_fu_1189_p2;
reg   [31:0] tmp32_reg_2207;
wire   [31:0] tmp33_fu_1193_p2;
reg   [31:0] tmp33_reg_2212;
wire   [31:0] tmp34_fu_1205_p2;
reg   [31:0] tmp34_reg_2217;
wire   [31:0] tmp38_fu_1211_p2;
reg   [31:0] tmp38_reg_2222;
wire   [31:0] tmp39_fu_1215_p2;
reg   [31:0] tmp39_reg_2227;
wire   [31:0] tmp40_fu_1227_p2;
reg   [31:0] tmp40_reg_2232;
wire   [31:0] tmp44_fu_1233_p2;
reg   [31:0] tmp44_reg_2237;
wire   [31:0] tmp45_fu_1237_p2;
reg   [31:0] tmp45_reg_2242;
wire   [31:0] tmp46_fu_1249_p2;
reg   [31:0] tmp46_reg_2247;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0;
wire   [31:0] tmp6_fu_1091_p2;
wire   [31:0] tmp5_fu_1087_p2;
wire   [31:0] tmp12_fu_1113_p2;
wire   [31:0] tmp11_fu_1109_p2;
wire   [31:0] tmp18_fu_1135_p2;
wire   [31:0] tmp17_fu_1131_p2;
wire   [31:0] tmp24_fu_1157_p2;
wire   [31:0] tmp23_fu_1153_p2;
wire   [31:0] tmp30_fu_1179_p2;
wire   [31:0] tmp29_fu_1175_p2;
wire   [31:0] tmp36_fu_1201_p2;
wire   [31:0] tmp35_fu_1197_p2;
wire   [31:0] tmp42_fu_1223_p2;
wire   [31:0] tmp41_fu_1219_p2;
wire   [31:0] tmp48_fu_1245_p2;
wire   [31:0] tmp47_fu_1241_p2;
wire   [31:0] tmp1_fu_1255_p2;
wire   [31:0] tmp7_fu_1265_p2;
wire   [31:0] tmp13_fu_1275_p2;
wire   [31:0] tmp19_fu_1285_p2;
wire   [31:0] tmp25_fu_1295_p2;
wire   [31:0] tmp31_fu_1305_p2;
wire   [31:0] tmp37_fu_1315_p2;
wire   [31:0] tmp43_fu_1325_p2;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_799_p2 == 1'd0))) begin
        ia_reg_788 <= ia_1_fu_805_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ia_reg_788 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_1335 == 1'd0))) begin
        a_0_load_reg_1716 <= a_0_q0;
        a_1_load_reg_1728 <= a_1_q0;
        a_2_load_reg_1740 <= a_2_q0;
        a_3_load_reg_1752 <= a_3_q0;
        a_4_load_reg_1764 <= a_4_q0;
        a_5_load_reg_1776 <= a_5_q0;
        a_6_load_reg_1788 <= a_6_q0;
        a_7_load_reg_1800 <= a_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_799_p2 == 1'd0))) begin
        b_0_0_read_reg_1361 <= b_0_0;
        b_0_1_read_reg_1436 <= b_0_1;
        b_0_2_read_reg_1476 <= b_0_2;
        b_0_3_read_reg_1516 <= b_0_3;
        b_0_4_read_reg_1556 <= b_0_4;
        b_0_5_read_reg_1596 <= b_0_5;
        b_0_6_read_reg_1636 <= b_0_6;
        b_0_7_read_reg_1676 <= b_0_7;
        b_1_0_read_reg_1371 <= b_1_0;
        b_1_1_read_reg_1441 <= b_1_1;
        b_1_2_read_reg_1481 <= b_1_2;
        b_1_3_read_reg_1521 <= b_1_3;
        b_1_4_read_reg_1561 <= b_1_4;
        b_1_5_read_reg_1601 <= b_1_5;
        b_1_6_read_reg_1641 <= b_1_6;
        b_1_7_read_reg_1681 <= b_1_7;
        b_2_0_read_reg_1381 <= b_2_0;
        b_2_1_read_reg_1446 <= b_2_1;
        b_2_2_read_reg_1486 <= b_2_2;
        b_2_3_read_reg_1526 <= b_2_3;
        b_2_4_read_reg_1566 <= b_2_4;
        b_2_5_read_reg_1606 <= b_2_5;
        b_2_6_read_reg_1646 <= b_2_6;
        b_2_7_read_reg_1686 <= b_2_7;
        b_3_0_read_reg_1391 <= b_3_0;
        b_3_1_read_reg_1451 <= b_3_1;
        b_3_2_read_reg_1491 <= b_3_2;
        b_3_3_read_reg_1531 <= b_3_3;
        b_3_4_read_reg_1571 <= b_3_4;
        b_3_5_read_reg_1611 <= b_3_5;
        b_3_6_read_reg_1651 <= b_3_6;
        b_3_7_read_reg_1691 <= b_3_7;
        b_4_0_read_reg_1401 <= b_4_0;
        b_4_1_read_reg_1456 <= b_4_1;
        b_4_2_read_reg_1496 <= b_4_2;
        b_4_3_read_reg_1536 <= b_4_3;
        b_4_4_read_reg_1576 <= b_4_4;
        b_4_5_read_reg_1616 <= b_4_5;
        b_4_6_read_reg_1656 <= b_4_6;
        b_4_7_read_reg_1696 <= b_4_7;
        b_5_0_read_reg_1411 <= b_5_0;
        b_5_1_read_reg_1461 <= b_5_1;
        b_5_2_read_reg_1501 <= b_5_2;
        b_5_3_read_reg_1541 <= b_5_3;
        b_5_4_read_reg_1581 <= b_5_4;
        b_5_5_read_reg_1621 <= b_5_5;
        b_5_6_read_reg_1661 <= b_5_6;
        b_5_7_read_reg_1701 <= b_5_7;
        b_6_0_read_reg_1421 <= b_6_0;
        b_6_1_read_reg_1466 <= b_6_1;
        b_6_2_read_reg_1506 <= b_6_2;
        b_6_3_read_reg_1546 <= b_6_3;
        b_6_4_read_reg_1586 <= b_6_4;
        b_6_5_read_reg_1626 <= b_6_5;
        b_6_6_read_reg_1666 <= b_6_6;
        b_6_7_read_reg_1706 <= b_6_7;
        b_7_0_read_reg_1431 <= b_7_0;
        b_7_1_read_reg_1471 <= b_7_1;
        b_7_2_read_reg_1511 <= b_7_2;
        b_7_3_read_reg_1551 <= b_7_3;
        b_7_4_read_reg_1591 <= b_7_4;
        b_7_5_read_reg_1631 <= b_7_5;
        b_7_6_read_reg_1671 <= b_7_6;
        b_7_7_read_reg_1711 <= b_7_7;
        tmp_reg_1344[3 : 0] <= tmp_fu_811_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_0_0_read_reg_1361_pp0_iter1_reg <= b_0_0_read_reg_1361;
        b_0_1_read_reg_1436_pp0_iter1_reg <= b_0_1_read_reg_1436;
        b_0_2_read_reg_1476_pp0_iter1_reg <= b_0_2_read_reg_1476;
        b_0_3_read_reg_1516_pp0_iter1_reg <= b_0_3_read_reg_1516;
        b_0_4_read_reg_1556_pp0_iter1_reg <= b_0_4_read_reg_1556;
        b_0_5_read_reg_1596_pp0_iter1_reg <= b_0_5_read_reg_1596;
        b_0_6_read_reg_1636_pp0_iter1_reg <= b_0_6_read_reg_1636;
        b_0_7_read_reg_1676_pp0_iter1_reg <= b_0_7_read_reg_1676;
        b_1_0_read_reg_1371_pp0_iter1_reg <= b_1_0_read_reg_1371;
        b_1_1_read_reg_1441_pp0_iter1_reg <= b_1_1_read_reg_1441;
        b_1_2_read_reg_1481_pp0_iter1_reg <= b_1_2_read_reg_1481;
        b_1_3_read_reg_1521_pp0_iter1_reg <= b_1_3_read_reg_1521;
        b_1_4_read_reg_1561_pp0_iter1_reg <= b_1_4_read_reg_1561;
        b_1_5_read_reg_1601_pp0_iter1_reg <= b_1_5_read_reg_1601;
        b_1_6_read_reg_1641_pp0_iter1_reg <= b_1_6_read_reg_1641;
        b_1_7_read_reg_1681_pp0_iter1_reg <= b_1_7_read_reg_1681;
        b_2_0_read_reg_1381_pp0_iter1_reg <= b_2_0_read_reg_1381;
        b_2_1_read_reg_1446_pp0_iter1_reg <= b_2_1_read_reg_1446;
        b_2_2_read_reg_1486_pp0_iter1_reg <= b_2_2_read_reg_1486;
        b_2_3_read_reg_1526_pp0_iter1_reg <= b_2_3_read_reg_1526;
        b_2_4_read_reg_1566_pp0_iter1_reg <= b_2_4_read_reg_1566;
        b_2_5_read_reg_1606_pp0_iter1_reg <= b_2_5_read_reg_1606;
        b_2_6_read_reg_1646_pp0_iter1_reg <= b_2_6_read_reg_1646;
        b_2_7_read_reg_1686_pp0_iter1_reg <= b_2_7_read_reg_1686;
        b_3_0_read_reg_1391_pp0_iter1_reg <= b_3_0_read_reg_1391;
        b_3_1_read_reg_1451_pp0_iter1_reg <= b_3_1_read_reg_1451;
        b_3_2_read_reg_1491_pp0_iter1_reg <= b_3_2_read_reg_1491;
        b_3_3_read_reg_1531_pp0_iter1_reg <= b_3_3_read_reg_1531;
        b_3_4_read_reg_1571_pp0_iter1_reg <= b_3_4_read_reg_1571;
        b_3_5_read_reg_1611_pp0_iter1_reg <= b_3_5_read_reg_1611;
        b_3_6_read_reg_1651_pp0_iter1_reg <= b_3_6_read_reg_1651;
        b_3_7_read_reg_1691_pp0_iter1_reg <= b_3_7_read_reg_1691;
        b_4_0_read_reg_1401_pp0_iter1_reg <= b_4_0_read_reg_1401;
        b_4_1_read_reg_1456_pp0_iter1_reg <= b_4_1_read_reg_1456;
        b_4_2_read_reg_1496_pp0_iter1_reg <= b_4_2_read_reg_1496;
        b_4_3_read_reg_1536_pp0_iter1_reg <= b_4_3_read_reg_1536;
        b_4_4_read_reg_1576_pp0_iter1_reg <= b_4_4_read_reg_1576;
        b_4_5_read_reg_1616_pp0_iter1_reg <= b_4_5_read_reg_1616;
        b_4_6_read_reg_1656_pp0_iter1_reg <= b_4_6_read_reg_1656;
        b_4_7_read_reg_1696_pp0_iter1_reg <= b_4_7_read_reg_1696;
        b_5_0_read_reg_1411_pp0_iter1_reg <= b_5_0_read_reg_1411;
        b_5_1_read_reg_1461_pp0_iter1_reg <= b_5_1_read_reg_1461;
        b_5_2_read_reg_1501_pp0_iter1_reg <= b_5_2_read_reg_1501;
        b_5_3_read_reg_1541_pp0_iter1_reg <= b_5_3_read_reg_1541;
        b_5_4_read_reg_1581_pp0_iter1_reg <= b_5_4_read_reg_1581;
        b_5_5_read_reg_1621_pp0_iter1_reg <= b_5_5_read_reg_1621;
        b_5_6_read_reg_1661_pp0_iter1_reg <= b_5_6_read_reg_1661;
        b_5_7_read_reg_1701_pp0_iter1_reg <= b_5_7_read_reg_1701;
        b_6_0_read_reg_1421_pp0_iter1_reg <= b_6_0_read_reg_1421;
        b_6_1_read_reg_1466_pp0_iter1_reg <= b_6_1_read_reg_1466;
        b_6_2_read_reg_1506_pp0_iter1_reg <= b_6_2_read_reg_1506;
        b_6_3_read_reg_1546_pp0_iter1_reg <= b_6_3_read_reg_1546;
        b_6_4_read_reg_1586_pp0_iter1_reg <= b_6_4_read_reg_1586;
        b_6_5_read_reg_1626_pp0_iter1_reg <= b_6_5_read_reg_1626;
        b_6_6_read_reg_1666_pp0_iter1_reg <= b_6_6_read_reg_1666;
        b_6_7_read_reg_1706_pp0_iter1_reg <= b_6_7_read_reg_1706;
        b_7_0_read_reg_1431_pp0_iter1_reg <= b_7_0_read_reg_1431;
        b_7_1_read_reg_1471_pp0_iter1_reg <= b_7_1_read_reg_1471;
        b_7_2_read_reg_1511_pp0_iter1_reg <= b_7_2_read_reg_1511;
        b_7_3_read_reg_1551_pp0_iter1_reg <= b_7_3_read_reg_1551;
        b_7_4_read_reg_1591_pp0_iter1_reg <= b_7_4_read_reg_1591;
        b_7_5_read_reg_1631_pp0_iter1_reg <= b_7_5_read_reg_1631;
        b_7_6_read_reg_1671_pp0_iter1_reg <= b_7_6_read_reg_1671;
        b_7_7_read_reg_1711_pp0_iter1_reg <= b_7_7_read_reg_1711;
        exitcond2_reg_1335 <= exitcond2_fu_799_p2;
        exitcond2_reg_1335_pp0_iter1_reg <= exitcond2_reg_1335;
        tmp_reg_1344_pp0_iter1_reg[3 : 0] <= tmp_reg_1344[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond2_reg_1335_pp0_iter2_reg <= exitcond2_reg_1335_pp0_iter1_reg;
        exitcond2_reg_1335_pp0_iter3_reg <= exitcond2_reg_1335_pp0_iter2_reg;
        tmp_reg_1344_pp0_iter2_reg[3 : 0] <= tmp_reg_1344_pp0_iter1_reg[3 : 0];
        tmp_reg_1344_pp0_iter3_reg[3 : 0] <= tmp_reg_1344_pp0_iter2_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1335_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp10_reg_2157 <= tmp10_fu_1117_p2;
        tmp14_reg_2162 <= tmp14_fu_1123_p2;
        tmp15_reg_2167 <= tmp15_fu_1127_p2;
        tmp16_reg_2172 <= tmp16_fu_1139_p2;
        tmp20_reg_2177 <= tmp20_fu_1145_p2;
        tmp21_reg_2182 <= tmp21_fu_1149_p2;
        tmp22_reg_2187 <= tmp22_fu_1161_p2;
        tmp26_reg_2192 <= tmp26_fu_1167_p2;
        tmp27_reg_2197 <= tmp27_fu_1171_p2;
        tmp28_reg_2202 <= tmp28_fu_1183_p2;
        tmp2_reg_2132 <= tmp2_fu_1079_p2;
        tmp32_reg_2207 <= tmp32_fu_1189_p2;
        tmp33_reg_2212 <= tmp33_fu_1193_p2;
        tmp34_reg_2217 <= tmp34_fu_1205_p2;
        tmp38_reg_2222 <= tmp38_fu_1211_p2;
        tmp39_reg_2227 <= tmp39_fu_1215_p2;
        tmp3_reg_2137 <= tmp3_fu_1083_p2;
        tmp40_reg_2232 <= tmp40_fu_1227_p2;
        tmp44_reg_2237 <= tmp44_fu_1233_p2;
        tmp45_reg_2242 <= tmp45_fu_1237_p2;
        tmp46_reg_2247 <= tmp46_fu_1249_p2;
        tmp4_reg_2142 <= tmp4_fu_1095_p2;
        tmp8_reg_2147 <= tmp8_fu_1101_p2;
        tmp9_reg_2152 <= tmp9_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1335_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_5_0_1_reg_1817 <= tmp_5_0_1_fu_827_p2;
        tmp_5_0_2_reg_1822 <= tmp_5_0_2_fu_831_p2;
        tmp_5_0_3_reg_1827 <= tmp_5_0_3_fu_835_p2;
        tmp_5_0_4_reg_1832 <= tmp_5_0_4_fu_839_p2;
        tmp_5_0_5_reg_1837 <= tmp_5_0_5_fu_843_p2;
        tmp_5_0_6_reg_1842 <= tmp_5_0_6_fu_847_p2;
        tmp_5_0_7_reg_1847 <= tmp_5_0_7_fu_851_p2;
        tmp_5_1_1_reg_1857 <= tmp_5_1_1_fu_859_p2;
        tmp_5_1_2_reg_1862 <= tmp_5_1_2_fu_863_p2;
        tmp_5_1_3_reg_1867 <= tmp_5_1_3_fu_867_p2;
        tmp_5_1_4_reg_1872 <= tmp_5_1_4_fu_871_p2;
        tmp_5_1_5_reg_1877 <= tmp_5_1_5_fu_875_p2;
        tmp_5_1_6_reg_1882 <= tmp_5_1_6_fu_879_p2;
        tmp_5_1_7_reg_1887 <= tmp_5_1_7_fu_883_p2;
        tmp_5_1_reg_1852 <= tmp_5_1_fu_855_p2;
        tmp_5_2_1_reg_1897 <= tmp_5_2_1_fu_891_p2;
        tmp_5_2_2_reg_1902 <= tmp_5_2_2_fu_895_p2;
        tmp_5_2_3_reg_1907 <= tmp_5_2_3_fu_899_p2;
        tmp_5_2_4_reg_1912 <= tmp_5_2_4_fu_903_p2;
        tmp_5_2_5_reg_1917 <= tmp_5_2_5_fu_907_p2;
        tmp_5_2_6_reg_1922 <= tmp_5_2_6_fu_911_p2;
        tmp_5_2_7_reg_1927 <= tmp_5_2_7_fu_915_p2;
        tmp_5_2_reg_1892 <= tmp_5_2_fu_887_p2;
        tmp_5_3_1_reg_1937 <= tmp_5_3_1_fu_923_p2;
        tmp_5_3_2_reg_1942 <= tmp_5_3_2_fu_927_p2;
        tmp_5_3_3_reg_1947 <= tmp_5_3_3_fu_931_p2;
        tmp_5_3_4_reg_1952 <= tmp_5_3_4_fu_935_p2;
        tmp_5_3_5_reg_1957 <= tmp_5_3_5_fu_939_p2;
        tmp_5_3_6_reg_1962 <= tmp_5_3_6_fu_943_p2;
        tmp_5_3_7_reg_1967 <= tmp_5_3_7_fu_947_p2;
        tmp_5_3_reg_1932 <= tmp_5_3_fu_919_p2;
        tmp_5_4_1_reg_1977 <= tmp_5_4_1_fu_955_p2;
        tmp_5_4_2_reg_1982 <= tmp_5_4_2_fu_959_p2;
        tmp_5_4_3_reg_1987 <= tmp_5_4_3_fu_963_p2;
        tmp_5_4_4_reg_1992 <= tmp_5_4_4_fu_967_p2;
        tmp_5_4_5_reg_1997 <= tmp_5_4_5_fu_971_p2;
        tmp_5_4_6_reg_2002 <= tmp_5_4_6_fu_975_p2;
        tmp_5_4_7_reg_2007 <= tmp_5_4_7_fu_979_p2;
        tmp_5_4_reg_1972 <= tmp_5_4_fu_951_p2;
        tmp_5_5_1_reg_2017 <= tmp_5_5_1_fu_987_p2;
        tmp_5_5_2_reg_2022 <= tmp_5_5_2_fu_991_p2;
        tmp_5_5_3_reg_2027 <= tmp_5_5_3_fu_995_p2;
        tmp_5_5_4_reg_2032 <= tmp_5_5_4_fu_999_p2;
        tmp_5_5_5_reg_2037 <= tmp_5_5_5_fu_1003_p2;
        tmp_5_5_6_reg_2042 <= tmp_5_5_6_fu_1007_p2;
        tmp_5_5_7_reg_2047 <= tmp_5_5_7_fu_1011_p2;
        tmp_5_5_reg_2012 <= tmp_5_5_fu_983_p2;
        tmp_5_6_1_reg_2057 <= tmp_5_6_1_fu_1019_p2;
        tmp_5_6_2_reg_2062 <= tmp_5_6_2_fu_1023_p2;
        tmp_5_6_3_reg_2067 <= tmp_5_6_3_fu_1027_p2;
        tmp_5_6_4_reg_2072 <= tmp_5_6_4_fu_1031_p2;
        tmp_5_6_5_reg_2077 <= tmp_5_6_5_fu_1035_p2;
        tmp_5_6_6_reg_2082 <= tmp_5_6_6_fu_1039_p2;
        tmp_5_6_7_reg_2087 <= tmp_5_6_7_fu_1043_p2;
        tmp_5_6_reg_2052 <= tmp_5_6_fu_1015_p2;
        tmp_5_7_1_reg_2097 <= tmp_5_7_1_fu_1051_p2;
        tmp_5_7_2_reg_2102 <= tmp_5_7_2_fu_1055_p2;
        tmp_5_7_3_reg_2107 <= tmp_5_7_3_fu_1059_p2;
        tmp_5_7_4_reg_2112 <= tmp_5_7_4_fu_1063_p2;
        tmp_5_7_5_reg_2117 <= tmp_5_7_5_fu_1067_p2;
        tmp_5_7_6_reg_2122 <= tmp_5_7_6_fu_1071_p2;
        tmp_5_7_7_reg_2127 <= tmp_5_7_7_fu_1075_p2;
        tmp_5_7_reg_2092 <= tmp_5_7_fu_1047_p2;
        tmp_5_reg_1812 <= tmp_5_fu_823_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_ce0 = 1'b1;
    end else begin
        a_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_ce0 = 1'b1;
    end else begin
        a_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_2_ce0 = 1'b1;
    end else begin
        a_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_3_ce0 = 1'b1;
    end else begin
        a_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_4_ce0 = 1'b1;
    end else begin
        a_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_5_ce0 = 1'b1;
    end else begin
        a_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_6_ce0 = 1'b1;
    end else begin
        a_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_7_ce0 = 1'b1;
    end else begin
        a_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_799_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_0_ce0 = 1'b1;
    end else begin
        out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1335_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_0_we0 = 1'b1;
    end else begin
        out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_1_ce0 = 1'b1;
    end else begin
        out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1335_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_1_we0 = 1'b1;
    end else begin
        out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_2_ce0 = 1'b1;
    end else begin
        out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1335_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_2_we0 = 1'b1;
    end else begin
        out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_3_ce0 = 1'b1;
    end else begin
        out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1335_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_3_we0 = 1'b1;
    end else begin
        out_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_4_ce0 = 1'b1;
    end else begin
        out_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1335_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_4_we0 = 1'b1;
    end else begin
        out_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_5_ce0 = 1'b1;
    end else begin
        out_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1335_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_5_we0 = 1'b1;
    end else begin
        out_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_6_ce0 = 1'b1;
    end else begin
        out_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1335_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_6_we0 = 1'b1;
    end else begin
        out_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_7_ce0 = 1'b1;
    end else begin
        out_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1335_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_7_we0 = 1'b1;
    end else begin
        out_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond2_fu_799_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond2_fu_799_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_address0 = tmp_fu_811_p1;

assign a_1_address0 = tmp_fu_811_p1;

assign a_2_address0 = tmp_fu_811_p1;

assign a_3_address0 = tmp_fu_811_p1;

assign a_4_address0 = tmp_fu_811_p1;

assign a_5_address0 = tmp_fu_811_p1;

assign a_6_address0 = tmp_fu_811_p1;

assign a_7_address0 = tmp_fu_811_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond2_fu_799_p2 = ((ia_reg_788 == 4'd8) ? 1'b1 : 1'b0);

assign ia_1_fu_805_p2 = (ia_reg_788 + 4'd1);

assign out_0_address0 = tmp_reg_1344_pp0_iter3_reg;

assign out_0_d0 = (tmp4_reg_2142 + tmp1_fu_1255_p2);

assign out_1_address0 = tmp_reg_1344_pp0_iter3_reg;

assign out_1_d0 = (tmp10_reg_2157 + tmp7_fu_1265_p2);

assign out_2_address0 = tmp_reg_1344_pp0_iter3_reg;

assign out_2_d0 = (tmp16_reg_2172 + tmp13_fu_1275_p2);

assign out_3_address0 = tmp_reg_1344_pp0_iter3_reg;

assign out_3_d0 = (tmp22_reg_2187 + tmp19_fu_1285_p2);

assign out_4_address0 = tmp_reg_1344_pp0_iter3_reg;

assign out_4_d0 = (tmp28_reg_2202 + tmp25_fu_1295_p2);

assign out_5_address0 = tmp_reg_1344_pp0_iter3_reg;

assign out_5_d0 = (tmp34_reg_2217 + tmp31_fu_1305_p2);

assign out_6_address0 = tmp_reg_1344_pp0_iter3_reg;

assign out_6_d0 = (tmp40_reg_2232 + tmp37_fu_1315_p2);

assign out_7_address0 = tmp_reg_1344_pp0_iter3_reg;

assign out_7_d0 = (tmp46_reg_2247 + tmp43_fu_1325_p2);

assign tmp10_fu_1117_p2 = (tmp12_fu_1113_p2 + tmp11_fu_1109_p2);

assign tmp11_fu_1109_p2 = (tmp_5_1_4_reg_1872 + tmp_5_1_5_reg_1877);

assign tmp12_fu_1113_p2 = (tmp_5_1_6_reg_1882 + tmp_5_1_7_reg_1887);

assign tmp13_fu_1275_p2 = (tmp15_reg_2167 + tmp14_reg_2162);

assign tmp14_fu_1123_p2 = (tmp_5_2_reg_1892 + tmp_5_2_1_reg_1897);

assign tmp15_fu_1127_p2 = (tmp_5_2_2_reg_1902 + tmp_5_2_3_reg_1907);

assign tmp16_fu_1139_p2 = (tmp18_fu_1135_p2 + tmp17_fu_1131_p2);

assign tmp17_fu_1131_p2 = (tmp_5_2_4_reg_1912 + tmp_5_2_5_reg_1917);

assign tmp18_fu_1135_p2 = (tmp_5_2_6_reg_1922 + tmp_5_2_7_reg_1927);

assign tmp19_fu_1285_p2 = (tmp21_reg_2182 + tmp20_reg_2177);

assign tmp1_fu_1255_p2 = (tmp3_reg_2137 + tmp2_reg_2132);

assign tmp20_fu_1145_p2 = (tmp_5_3_reg_1932 + tmp_5_3_1_reg_1937);

assign tmp21_fu_1149_p2 = (tmp_5_3_2_reg_1942 + tmp_5_3_3_reg_1947);

assign tmp22_fu_1161_p2 = (tmp24_fu_1157_p2 + tmp23_fu_1153_p2);

assign tmp23_fu_1153_p2 = (tmp_5_3_4_reg_1952 + tmp_5_3_5_reg_1957);

assign tmp24_fu_1157_p2 = (tmp_5_3_6_reg_1962 + tmp_5_3_7_reg_1967);

assign tmp25_fu_1295_p2 = (tmp27_reg_2197 + tmp26_reg_2192);

assign tmp26_fu_1167_p2 = (tmp_5_4_reg_1972 + tmp_5_4_1_reg_1977);

assign tmp27_fu_1171_p2 = (tmp_5_4_2_reg_1982 + tmp_5_4_3_reg_1987);

assign tmp28_fu_1183_p2 = (tmp30_fu_1179_p2 + tmp29_fu_1175_p2);

assign tmp29_fu_1175_p2 = (tmp_5_4_4_reg_1992 + tmp_5_4_5_reg_1997);

assign tmp2_fu_1079_p2 = (tmp_5_reg_1812 + tmp_5_0_1_reg_1817);

assign tmp30_fu_1179_p2 = (tmp_5_4_6_reg_2002 + tmp_5_4_7_reg_2007);

assign tmp31_fu_1305_p2 = (tmp33_reg_2212 + tmp32_reg_2207);

assign tmp32_fu_1189_p2 = (tmp_5_5_reg_2012 + tmp_5_5_1_reg_2017);

assign tmp33_fu_1193_p2 = (tmp_5_5_2_reg_2022 + tmp_5_5_3_reg_2027);

assign tmp34_fu_1205_p2 = (tmp36_fu_1201_p2 + tmp35_fu_1197_p2);

assign tmp35_fu_1197_p2 = (tmp_5_5_4_reg_2032 + tmp_5_5_5_reg_2037);

assign tmp36_fu_1201_p2 = (tmp_5_5_6_reg_2042 + tmp_5_5_7_reg_2047);

assign tmp37_fu_1315_p2 = (tmp39_reg_2227 + tmp38_reg_2222);

assign tmp38_fu_1211_p2 = (tmp_5_6_reg_2052 + tmp_5_6_1_reg_2057);

assign tmp39_fu_1215_p2 = (tmp_5_6_2_reg_2062 + tmp_5_6_3_reg_2067);

assign tmp3_fu_1083_p2 = (tmp_5_0_2_reg_1822 + tmp_5_0_3_reg_1827);

assign tmp40_fu_1227_p2 = (tmp42_fu_1223_p2 + tmp41_fu_1219_p2);

assign tmp41_fu_1219_p2 = (tmp_5_6_4_reg_2072 + tmp_5_6_5_reg_2077);

assign tmp42_fu_1223_p2 = (tmp_5_6_6_reg_2082 + tmp_5_6_7_reg_2087);

assign tmp43_fu_1325_p2 = (tmp45_reg_2242 + tmp44_reg_2237);

assign tmp44_fu_1233_p2 = (tmp_5_7_reg_2092 + tmp_5_7_1_reg_2097);

assign tmp45_fu_1237_p2 = (tmp_5_7_2_reg_2102 + tmp_5_7_3_reg_2107);

assign tmp46_fu_1249_p2 = (tmp48_fu_1245_p2 + tmp47_fu_1241_p2);

assign tmp47_fu_1241_p2 = (tmp_5_7_4_reg_2112 + tmp_5_7_5_reg_2117);

assign tmp48_fu_1245_p2 = (tmp_5_7_6_reg_2122 + tmp_5_7_7_reg_2127);

assign tmp4_fu_1095_p2 = (tmp6_fu_1091_p2 + tmp5_fu_1087_p2);

assign tmp5_fu_1087_p2 = (tmp_5_0_4_reg_1832 + tmp_5_0_5_reg_1837);

assign tmp6_fu_1091_p2 = (tmp_5_0_6_reg_1842 + tmp_5_0_7_reg_1847);

assign tmp7_fu_1265_p2 = (tmp9_reg_2152 + tmp8_reg_2147);

assign tmp8_fu_1101_p2 = (tmp_5_1_reg_1852 + tmp_5_1_1_reg_1857);

assign tmp9_fu_1105_p2 = (tmp_5_1_2_reg_1862 + tmp_5_1_3_reg_1867);

assign tmp_5_0_1_fu_827_p2 = ($signed(a_1_load_reg_1728) * $signed(b_1_0_read_reg_1371_pp0_iter1_reg));

assign tmp_5_0_2_fu_831_p2 = ($signed(a_2_load_reg_1740) * $signed(b_2_0_read_reg_1381_pp0_iter1_reg));

assign tmp_5_0_3_fu_835_p2 = ($signed(a_3_load_reg_1752) * $signed(b_3_0_read_reg_1391_pp0_iter1_reg));

assign tmp_5_0_4_fu_839_p2 = ($signed(a_4_load_reg_1764) * $signed(b_4_0_read_reg_1401_pp0_iter1_reg));

assign tmp_5_0_5_fu_843_p2 = ($signed(a_5_load_reg_1776) * $signed(b_5_0_read_reg_1411_pp0_iter1_reg));

assign tmp_5_0_6_fu_847_p2 = ($signed(a_6_load_reg_1788) * $signed(b_6_0_read_reg_1421_pp0_iter1_reg));

assign tmp_5_0_7_fu_851_p2 = ($signed(a_7_load_reg_1800) * $signed(b_7_0_read_reg_1431_pp0_iter1_reg));

assign tmp_5_1_1_fu_859_p2 = ($signed(a_1_load_reg_1728) * $signed(b_1_1_read_reg_1441_pp0_iter1_reg));

assign tmp_5_1_2_fu_863_p2 = ($signed(a_2_load_reg_1740) * $signed(b_2_1_read_reg_1446_pp0_iter1_reg));

assign tmp_5_1_3_fu_867_p2 = ($signed(a_3_load_reg_1752) * $signed(b_3_1_read_reg_1451_pp0_iter1_reg));

assign tmp_5_1_4_fu_871_p2 = ($signed(a_4_load_reg_1764) * $signed(b_4_1_read_reg_1456_pp0_iter1_reg));

assign tmp_5_1_5_fu_875_p2 = ($signed(a_5_load_reg_1776) * $signed(b_5_1_read_reg_1461_pp0_iter1_reg));

assign tmp_5_1_6_fu_879_p2 = ($signed(a_6_load_reg_1788) * $signed(b_6_1_read_reg_1466_pp0_iter1_reg));

assign tmp_5_1_7_fu_883_p2 = ($signed(a_7_load_reg_1800) * $signed(b_7_1_read_reg_1471_pp0_iter1_reg));

assign tmp_5_1_fu_855_p2 = ($signed(a_0_load_reg_1716) * $signed(b_0_1_read_reg_1436_pp0_iter1_reg));

assign tmp_5_2_1_fu_891_p2 = ($signed(a_1_load_reg_1728) * $signed(b_1_2_read_reg_1481_pp0_iter1_reg));

assign tmp_5_2_2_fu_895_p2 = ($signed(a_2_load_reg_1740) * $signed(b_2_2_read_reg_1486_pp0_iter1_reg));

assign tmp_5_2_3_fu_899_p2 = ($signed(a_3_load_reg_1752) * $signed(b_3_2_read_reg_1491_pp0_iter1_reg));

assign tmp_5_2_4_fu_903_p2 = ($signed(a_4_load_reg_1764) * $signed(b_4_2_read_reg_1496_pp0_iter1_reg));

assign tmp_5_2_5_fu_907_p2 = ($signed(a_5_load_reg_1776) * $signed(b_5_2_read_reg_1501_pp0_iter1_reg));

assign tmp_5_2_6_fu_911_p2 = ($signed(a_6_load_reg_1788) * $signed(b_6_2_read_reg_1506_pp0_iter1_reg));

assign tmp_5_2_7_fu_915_p2 = ($signed(a_7_load_reg_1800) * $signed(b_7_2_read_reg_1511_pp0_iter1_reg));

assign tmp_5_2_fu_887_p2 = ($signed(a_0_load_reg_1716) * $signed(b_0_2_read_reg_1476_pp0_iter1_reg));

assign tmp_5_3_1_fu_923_p2 = ($signed(a_1_load_reg_1728) * $signed(b_1_3_read_reg_1521_pp0_iter1_reg));

assign tmp_5_3_2_fu_927_p2 = ($signed(a_2_load_reg_1740) * $signed(b_2_3_read_reg_1526_pp0_iter1_reg));

assign tmp_5_3_3_fu_931_p2 = ($signed(a_3_load_reg_1752) * $signed(b_3_3_read_reg_1531_pp0_iter1_reg));

assign tmp_5_3_4_fu_935_p2 = ($signed(a_4_load_reg_1764) * $signed(b_4_3_read_reg_1536_pp0_iter1_reg));

assign tmp_5_3_5_fu_939_p2 = ($signed(a_5_load_reg_1776) * $signed(b_5_3_read_reg_1541_pp0_iter1_reg));

assign tmp_5_3_6_fu_943_p2 = ($signed(a_6_load_reg_1788) * $signed(b_6_3_read_reg_1546_pp0_iter1_reg));

assign tmp_5_3_7_fu_947_p2 = ($signed(a_7_load_reg_1800) * $signed(b_7_3_read_reg_1551_pp0_iter1_reg));

assign tmp_5_3_fu_919_p2 = ($signed(a_0_load_reg_1716) * $signed(b_0_3_read_reg_1516_pp0_iter1_reg));

assign tmp_5_4_1_fu_955_p2 = ($signed(a_1_load_reg_1728) * $signed(b_1_4_read_reg_1561_pp0_iter1_reg));

assign tmp_5_4_2_fu_959_p2 = ($signed(a_2_load_reg_1740) * $signed(b_2_4_read_reg_1566_pp0_iter1_reg));

assign tmp_5_4_3_fu_963_p2 = ($signed(a_3_load_reg_1752) * $signed(b_3_4_read_reg_1571_pp0_iter1_reg));

assign tmp_5_4_4_fu_967_p2 = ($signed(a_4_load_reg_1764) * $signed(b_4_4_read_reg_1576_pp0_iter1_reg));

assign tmp_5_4_5_fu_971_p2 = ($signed(a_5_load_reg_1776) * $signed(b_5_4_read_reg_1581_pp0_iter1_reg));

assign tmp_5_4_6_fu_975_p2 = ($signed(a_6_load_reg_1788) * $signed(b_6_4_read_reg_1586_pp0_iter1_reg));

assign tmp_5_4_7_fu_979_p2 = ($signed(a_7_load_reg_1800) * $signed(b_7_4_read_reg_1591_pp0_iter1_reg));

assign tmp_5_4_fu_951_p2 = ($signed(a_0_load_reg_1716) * $signed(b_0_4_read_reg_1556_pp0_iter1_reg));

assign tmp_5_5_1_fu_987_p2 = ($signed(a_1_load_reg_1728) * $signed(b_1_5_read_reg_1601_pp0_iter1_reg));

assign tmp_5_5_2_fu_991_p2 = ($signed(a_2_load_reg_1740) * $signed(b_2_5_read_reg_1606_pp0_iter1_reg));

assign tmp_5_5_3_fu_995_p2 = ($signed(a_3_load_reg_1752) * $signed(b_3_5_read_reg_1611_pp0_iter1_reg));

assign tmp_5_5_4_fu_999_p2 = ($signed(a_4_load_reg_1764) * $signed(b_4_5_read_reg_1616_pp0_iter1_reg));

assign tmp_5_5_5_fu_1003_p2 = ($signed(a_5_load_reg_1776) * $signed(b_5_5_read_reg_1621_pp0_iter1_reg));

assign tmp_5_5_6_fu_1007_p2 = ($signed(a_6_load_reg_1788) * $signed(b_6_5_read_reg_1626_pp0_iter1_reg));

assign tmp_5_5_7_fu_1011_p2 = ($signed(a_7_load_reg_1800) * $signed(b_7_5_read_reg_1631_pp0_iter1_reg));

assign tmp_5_5_fu_983_p2 = ($signed(a_0_load_reg_1716) * $signed(b_0_5_read_reg_1596_pp0_iter1_reg));

assign tmp_5_6_1_fu_1019_p2 = ($signed(a_1_load_reg_1728) * $signed(b_1_6_read_reg_1641_pp0_iter1_reg));

assign tmp_5_6_2_fu_1023_p2 = ($signed(a_2_load_reg_1740) * $signed(b_2_6_read_reg_1646_pp0_iter1_reg));

assign tmp_5_6_3_fu_1027_p2 = ($signed(a_3_load_reg_1752) * $signed(b_3_6_read_reg_1651_pp0_iter1_reg));

assign tmp_5_6_4_fu_1031_p2 = ($signed(a_4_load_reg_1764) * $signed(b_4_6_read_reg_1656_pp0_iter1_reg));

assign tmp_5_6_5_fu_1035_p2 = ($signed(a_5_load_reg_1776) * $signed(b_5_6_read_reg_1661_pp0_iter1_reg));

assign tmp_5_6_6_fu_1039_p2 = ($signed(a_6_load_reg_1788) * $signed(b_6_6_read_reg_1666_pp0_iter1_reg));

assign tmp_5_6_7_fu_1043_p2 = ($signed(a_7_load_reg_1800) * $signed(b_7_6_read_reg_1671_pp0_iter1_reg));

assign tmp_5_6_fu_1015_p2 = ($signed(a_0_load_reg_1716) * $signed(b_0_6_read_reg_1636_pp0_iter1_reg));

assign tmp_5_7_1_fu_1051_p2 = ($signed(a_1_load_reg_1728) * $signed(b_1_7_read_reg_1681_pp0_iter1_reg));

assign tmp_5_7_2_fu_1055_p2 = ($signed(a_2_load_reg_1740) * $signed(b_2_7_read_reg_1686_pp0_iter1_reg));

assign tmp_5_7_3_fu_1059_p2 = ($signed(a_3_load_reg_1752) * $signed(b_3_7_read_reg_1691_pp0_iter1_reg));

assign tmp_5_7_4_fu_1063_p2 = ($signed(a_4_load_reg_1764) * $signed(b_4_7_read_reg_1696_pp0_iter1_reg));

assign tmp_5_7_5_fu_1067_p2 = ($signed(a_5_load_reg_1776) * $signed(b_5_7_read_reg_1701_pp0_iter1_reg));

assign tmp_5_7_6_fu_1071_p2 = ($signed(a_6_load_reg_1788) * $signed(b_6_7_read_reg_1706_pp0_iter1_reg));

assign tmp_5_7_7_fu_1075_p2 = ($signed(a_7_load_reg_1800) * $signed(b_7_7_read_reg_1711_pp0_iter1_reg));

assign tmp_5_7_fu_1047_p2 = ($signed(a_0_load_reg_1716) * $signed(b_0_7_read_reg_1676_pp0_iter1_reg));

assign tmp_5_fu_823_p2 = ($signed(a_0_load_reg_1716) * $signed(b_0_0_read_reg_1361_pp0_iter1_reg));

assign tmp_fu_811_p1 = ia_reg_788;

always @ (posedge ap_clk) begin
    tmp_reg_1344[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_reg_1344_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_reg_1344_pp0_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_reg_1344_pp0_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //mmult_hw
