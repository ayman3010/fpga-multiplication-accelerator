// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mmult_hw,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.634000,HLS_SYN_LAT=5336,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=220,HLS_SYN_FF=10498,HLS_SYN_LUT=4364,HLS_VERSION=2018_3}" *)

module mmult_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_address0,
        a_0_ce0,
        a_0_q0,
        a_1_address0,
        a_1_ce0,
        a_1_q0,
        a_2_address0,
        a_2_ce0,
        a_2_q0,
        a_3_address0,
        a_3_ce0,
        a_3_q0,
        a_4_address0,
        a_4_ce0,
        a_4_q0,
        a_5_address0,
        a_5_ce0,
        a_5_q0,
        a_6_address0,
        a_6_ce0,
        a_6_q0,
        a_7_address0,
        a_7_ce0,
        a_7_q0,
        a_8_address0,
        a_8_ce0,
        a_8_q0,
        a_9_address0,
        a_9_ce0,
        a_9_q0,
        a_10_address0,
        a_10_ce0,
        a_10_q0,
        a_11_address0,
        a_11_ce0,
        a_11_q0,
        a_12_address0,
        a_12_ce0,
        a_12_q0,
        a_13_address0,
        a_13_ce0,
        a_13_q0,
        a_14_address0,
        a_14_ce0,
        a_14_q0,
        a_15_address0,
        a_15_ce0,
        a_15_q0,
        a_16_address0,
        a_16_ce0,
        a_16_q0,
        a_17_address0,
        a_17_ce0,
        a_17_q0,
        a_18_address0,
        a_18_ce0,
        a_18_q0,
        a_19_address0,
        a_19_ce0,
        a_19_q0,
        a_20_address0,
        a_20_ce0,
        a_20_q0,
        a_21_address0,
        a_21_ce0,
        a_21_q0,
        a_22_address0,
        a_22_ce0,
        a_22_q0,
        a_23_address0,
        a_23_ce0,
        a_23_q0,
        a_24_address0,
        a_24_ce0,
        a_24_q0,
        a_25_address0,
        a_25_ce0,
        a_25_q0,
        a_26_address0,
        a_26_ce0,
        a_26_q0,
        a_27_address0,
        a_27_ce0,
        a_27_q0,
        a_28_address0,
        a_28_ce0,
        a_28_q0,
        a_29_address0,
        a_29_ce0,
        a_29_q0,
        a_30_address0,
        a_30_ce0,
        a_30_q0,
        a_31_address0,
        a_31_ce0,
        a_31_q0,
        a_32_address0,
        a_32_ce0,
        a_32_q0,
        a_33_address0,
        a_33_ce0,
        a_33_q0,
        a_34_address0,
        a_34_ce0,
        a_34_q0,
        a_35_address0,
        a_35_ce0,
        a_35_q0,
        a_36_address0,
        a_36_ce0,
        a_36_q0,
        a_37_address0,
        a_37_ce0,
        a_37_q0,
        a_38_address0,
        a_38_ce0,
        a_38_q0,
        a_39_address0,
        a_39_ce0,
        a_39_q0,
        a_40_address0,
        a_40_ce0,
        a_40_q0,
        a_41_address0,
        a_41_ce0,
        a_41_q0,
        a_42_address0,
        a_42_ce0,
        a_42_q0,
        a_43_address0,
        a_43_ce0,
        a_43_q0,
        a_44_address0,
        a_44_ce0,
        a_44_q0,
        a_45_address0,
        a_45_ce0,
        a_45_q0,
        a_46_address0,
        a_46_ce0,
        a_46_q0,
        a_47_address0,
        a_47_ce0,
        a_47_q0,
        a_48_address0,
        a_48_ce0,
        a_48_q0,
        a_49_address0,
        a_49_ce0,
        a_49_q0,
        a_50_address0,
        a_50_ce0,
        a_50_q0,
        a_51_address0,
        a_51_ce0,
        a_51_q0,
        a_52_address0,
        a_52_ce0,
        a_52_q0,
        a_53_address0,
        a_53_ce0,
        a_53_q0,
        a_54_address0,
        a_54_ce0,
        a_54_q0,
        a_55_address0,
        a_55_ce0,
        a_55_q0,
        a_56_address0,
        a_56_ce0,
        a_56_q0,
        a_57_address0,
        a_57_ce0,
        a_57_q0,
        a_58_address0,
        a_58_ce0,
        a_58_q0,
        a_59_address0,
        a_59_ce0,
        a_59_q0,
        a_60_address0,
        a_60_ce0,
        a_60_q0,
        a_61_address0,
        a_61_ce0,
        a_61_q0,
        a_62_address0,
        a_62_ce0,
        a_62_q0,
        a_63_address0,
        a_63_ce0,
        a_63_q0,
        a_64_address0,
        a_64_ce0,
        a_64_q0,
        a_65_address0,
        a_65_ce0,
        a_65_q0,
        a_66_address0,
        a_66_ce0,
        a_66_q0,
        a_67_address0,
        a_67_ce0,
        a_67_q0,
        a_68_address0,
        a_68_ce0,
        a_68_q0,
        a_69_address0,
        a_69_ce0,
        a_69_q0,
        a_70_address0,
        a_70_ce0,
        a_70_q0,
        a_71_address0,
        a_71_ce0,
        a_71_q0,
        a_72_address0,
        a_72_ce0,
        a_72_q0,
        b_address0,
        b_ce0,
        b_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] a_0_address0;
output   a_0_ce0;
input  [31:0] a_0_q0;
output  [6:0] a_1_address0;
output   a_1_ce0;
input  [31:0] a_1_q0;
output  [6:0] a_2_address0;
output   a_2_ce0;
input  [31:0] a_2_q0;
output  [6:0] a_3_address0;
output   a_3_ce0;
input  [31:0] a_3_q0;
output  [6:0] a_4_address0;
output   a_4_ce0;
input  [31:0] a_4_q0;
output  [6:0] a_5_address0;
output   a_5_ce0;
input  [31:0] a_5_q0;
output  [6:0] a_6_address0;
output   a_6_ce0;
input  [31:0] a_6_q0;
output  [6:0] a_7_address0;
output   a_7_ce0;
input  [31:0] a_7_q0;
output  [6:0] a_8_address0;
output   a_8_ce0;
input  [31:0] a_8_q0;
output  [6:0] a_9_address0;
output   a_9_ce0;
input  [31:0] a_9_q0;
output  [6:0] a_10_address0;
output   a_10_ce0;
input  [31:0] a_10_q0;
output  [6:0] a_11_address0;
output   a_11_ce0;
input  [31:0] a_11_q0;
output  [6:0] a_12_address0;
output   a_12_ce0;
input  [31:0] a_12_q0;
output  [6:0] a_13_address0;
output   a_13_ce0;
input  [31:0] a_13_q0;
output  [6:0] a_14_address0;
output   a_14_ce0;
input  [31:0] a_14_q0;
output  [6:0] a_15_address0;
output   a_15_ce0;
input  [31:0] a_15_q0;
output  [6:0] a_16_address0;
output   a_16_ce0;
input  [31:0] a_16_q0;
output  [6:0] a_17_address0;
output   a_17_ce0;
input  [31:0] a_17_q0;
output  [6:0] a_18_address0;
output   a_18_ce0;
input  [31:0] a_18_q0;
output  [6:0] a_19_address0;
output   a_19_ce0;
input  [31:0] a_19_q0;
output  [6:0] a_20_address0;
output   a_20_ce0;
input  [31:0] a_20_q0;
output  [6:0] a_21_address0;
output   a_21_ce0;
input  [31:0] a_21_q0;
output  [6:0] a_22_address0;
output   a_22_ce0;
input  [31:0] a_22_q0;
output  [6:0] a_23_address0;
output   a_23_ce0;
input  [31:0] a_23_q0;
output  [6:0] a_24_address0;
output   a_24_ce0;
input  [31:0] a_24_q0;
output  [6:0] a_25_address0;
output   a_25_ce0;
input  [31:0] a_25_q0;
output  [6:0] a_26_address0;
output   a_26_ce0;
input  [31:0] a_26_q0;
output  [6:0] a_27_address0;
output   a_27_ce0;
input  [31:0] a_27_q0;
output  [6:0] a_28_address0;
output   a_28_ce0;
input  [31:0] a_28_q0;
output  [6:0] a_29_address0;
output   a_29_ce0;
input  [31:0] a_29_q0;
output  [6:0] a_30_address0;
output   a_30_ce0;
input  [31:0] a_30_q0;
output  [6:0] a_31_address0;
output   a_31_ce0;
input  [31:0] a_31_q0;
output  [6:0] a_32_address0;
output   a_32_ce0;
input  [31:0] a_32_q0;
output  [6:0] a_33_address0;
output   a_33_ce0;
input  [31:0] a_33_q0;
output  [6:0] a_34_address0;
output   a_34_ce0;
input  [31:0] a_34_q0;
output  [6:0] a_35_address0;
output   a_35_ce0;
input  [31:0] a_35_q0;
output  [6:0] a_36_address0;
output   a_36_ce0;
input  [31:0] a_36_q0;
output  [6:0] a_37_address0;
output   a_37_ce0;
input  [31:0] a_37_q0;
output  [6:0] a_38_address0;
output   a_38_ce0;
input  [31:0] a_38_q0;
output  [6:0] a_39_address0;
output   a_39_ce0;
input  [31:0] a_39_q0;
output  [6:0] a_40_address0;
output   a_40_ce0;
input  [31:0] a_40_q0;
output  [6:0] a_41_address0;
output   a_41_ce0;
input  [31:0] a_41_q0;
output  [6:0] a_42_address0;
output   a_42_ce0;
input  [31:0] a_42_q0;
output  [6:0] a_43_address0;
output   a_43_ce0;
input  [31:0] a_43_q0;
output  [6:0] a_44_address0;
output   a_44_ce0;
input  [31:0] a_44_q0;
output  [6:0] a_45_address0;
output   a_45_ce0;
input  [31:0] a_45_q0;
output  [6:0] a_46_address0;
output   a_46_ce0;
input  [31:0] a_46_q0;
output  [6:0] a_47_address0;
output   a_47_ce0;
input  [31:0] a_47_q0;
output  [6:0] a_48_address0;
output   a_48_ce0;
input  [31:0] a_48_q0;
output  [6:0] a_49_address0;
output   a_49_ce0;
input  [31:0] a_49_q0;
output  [6:0] a_50_address0;
output   a_50_ce0;
input  [31:0] a_50_q0;
output  [6:0] a_51_address0;
output   a_51_ce0;
input  [31:0] a_51_q0;
output  [6:0] a_52_address0;
output   a_52_ce0;
input  [31:0] a_52_q0;
output  [6:0] a_53_address0;
output   a_53_ce0;
input  [31:0] a_53_q0;
output  [6:0] a_54_address0;
output   a_54_ce0;
input  [31:0] a_54_q0;
output  [6:0] a_55_address0;
output   a_55_ce0;
input  [31:0] a_55_q0;
output  [6:0] a_56_address0;
output   a_56_ce0;
input  [31:0] a_56_q0;
output  [6:0] a_57_address0;
output   a_57_ce0;
input  [31:0] a_57_q0;
output  [6:0] a_58_address0;
output   a_58_ce0;
input  [31:0] a_58_q0;
output  [6:0] a_59_address0;
output   a_59_ce0;
input  [31:0] a_59_q0;
output  [6:0] a_60_address0;
output   a_60_ce0;
input  [31:0] a_60_q0;
output  [6:0] a_61_address0;
output   a_61_ce0;
input  [31:0] a_61_q0;
output  [6:0] a_62_address0;
output   a_62_ce0;
input  [31:0] a_62_q0;
output  [6:0] a_63_address0;
output   a_63_ce0;
input  [31:0] a_63_q0;
output  [6:0] a_64_address0;
output   a_64_ce0;
input  [31:0] a_64_q0;
output  [6:0] a_65_address0;
output   a_65_ce0;
input  [31:0] a_65_q0;
output  [6:0] a_66_address0;
output   a_66_ce0;
input  [31:0] a_66_q0;
output  [6:0] a_67_address0;
output   a_67_ce0;
input  [31:0] a_67_q0;
output  [6:0] a_68_address0;
output   a_68_ce0;
input  [31:0] a_68_q0;
output  [6:0] a_69_address0;
output   a_69_ce0;
input  [31:0] a_69_q0;
output  [6:0] a_70_address0;
output   a_70_ce0;
input  [31:0] a_70_q0;
output  [6:0] a_71_address0;
output   a_71_ce0;
input  [31:0] a_71_q0;
output  [6:0] a_72_address0;
output   a_72_ce0;
input  [31:0] a_72_q0;
output  [6:0] b_address0;
output   b_ce0;
input  [2335:0] b_q0;
output  [12:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_ce0;
reg a_1_ce0;
reg a_2_ce0;
reg a_3_ce0;
reg a_4_ce0;
reg a_5_ce0;
reg a_6_ce0;
reg a_7_ce0;
reg a_8_ce0;
reg a_9_ce0;
reg a_10_ce0;
reg a_11_ce0;
reg a_12_ce0;
reg a_13_ce0;
reg a_14_ce0;
reg a_15_ce0;
reg a_16_ce0;
reg a_17_ce0;
reg a_18_ce0;
reg a_19_ce0;
reg a_20_ce0;
reg a_21_ce0;
reg a_22_ce0;
reg a_23_ce0;
reg a_24_ce0;
reg a_25_ce0;
reg a_26_ce0;
reg a_27_ce0;
reg a_28_ce0;
reg a_29_ce0;
reg a_30_ce0;
reg a_31_ce0;
reg a_32_ce0;
reg a_33_ce0;
reg a_34_ce0;
reg a_35_ce0;
reg a_36_ce0;
reg a_37_ce0;
reg a_38_ce0;
reg a_39_ce0;
reg a_40_ce0;
reg a_41_ce0;
reg a_42_ce0;
reg a_43_ce0;
reg a_44_ce0;
reg a_45_ce0;
reg a_46_ce0;
reg a_47_ce0;
reg a_48_ce0;
reg a_49_ce0;
reg a_50_ce0;
reg a_51_ce0;
reg a_52_ce0;
reg a_53_ce0;
reg a_54_ce0;
reg a_55_ce0;
reg a_56_ce0;
reg a_57_ce0;
reg a_58_ce0;
reg a_59_ce0;
reg a_60_ce0;
reg a_61_ce0;
reg a_62_ce0;
reg a_63_ce0;
reg a_64_ce0;
reg a_65_ce0;
reg a_66_ce0;
reg a_67_ce0;
reg a_68_ce0;
reg a_69_ce0;
reg a_70_ce0;
reg a_71_ce0;
reg a_72_ce0;
reg b_ce0;
reg out_r_ce0;
reg out_r_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] indvar_flatten_reg_1459;
reg   [6:0] ia_reg_1470;
reg   [6:0] ib_reg_1481;
wire   [0:0] exitcond_flatten_fu_1492_p2;
reg   [0:0] exitcond_flatten_reg_2922;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_2922_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_2922_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_2922_pp0_iter3_reg;
reg   [0:0] exitcond_flatten_reg_2922_pp0_iter4_reg;
reg   [0:0] exitcond_flatten_reg_2922_pp0_iter5_reg;
wire   [12:0] indvar_flatten_next_fu_1498_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [6:0] ib_mid2_fu_1516_p3;
reg   [6:0] ib_mid2_reg_2931;
reg   [6:0] ib_mid2_reg_2931_pp0_iter1_reg;
reg   [6:0] ib_mid2_reg_2931_pp0_iter2_reg;
reg   [6:0] ib_mid2_reg_2931_pp0_iter3_reg;
reg   [6:0] ib_mid2_reg_2931_pp0_iter4_reg;
reg   [6:0] ib_mid2_reg_2931_pp0_iter5_reg;
wire   [6:0] tmp_mid2_v_fu_1524_p3;
reg   [6:0] tmp_mid2_v_reg_2936;
reg   [6:0] tmp_mid2_v_reg_2936_pp0_iter1_reg;
reg   [6:0] tmp_mid2_v_reg_2936_pp0_iter2_reg;
reg   [6:0] tmp_mid2_v_reg_2936_pp0_iter3_reg;
reg   [6:0] tmp_mid2_v_reg_2936_pp0_iter4_reg;
reg   [6:0] tmp_mid2_v_reg_2936_pp0_iter5_reg;
wire   [63:0] tmp_mid2_fu_1532_p1;
reg   [63:0] tmp_mid2_reg_2942;
reg   [63:0] tmp_mid2_reg_2942_pp0_iter1_reg;
wire   [6:0] ib_1_fu_1544_p2;
wire  signed [31:0] tmp_4_fu_1550_p1;
reg  signed [31:0] tmp_4_reg_3041;
reg  signed [31:0] tmp_4_reg_3041_pp0_iter2_reg;
reg  signed [31:0] tmp_4_reg_3041_pp0_iter3_reg;
reg  signed [31:0] tmp_6_reg_3046;
reg  signed [31:0] tmp_6_reg_3046_pp0_iter2_reg;
reg  signed [31:0] tmp_6_reg_3046_pp0_iter3_reg;
reg  signed [31:0] tmp_7_reg_3056;
reg  signed [31:0] tmp_7_reg_3056_pp0_iter2_reg;
reg  signed [31:0] tmp_8_reg_3066;
reg  signed [31:0] tmp_8_reg_3066_pp0_iter2_reg;
reg  signed [31:0] tmp_9_reg_3071;
reg  signed [31:0] tmp_9_reg_3071_pp0_iter2_reg;
reg  signed [31:0] tmp_9_reg_3071_pp0_iter3_reg;
reg  signed [31:0] tmp_s_reg_3076;
reg  signed [31:0] tmp_s_reg_3076_pp0_iter2_reg;
reg  signed [31:0] tmp_s_reg_3076_pp0_iter3_reg;
reg  signed [31:0] tmp_10_reg_3086;
reg  signed [31:0] tmp_10_reg_3086_pp0_iter2_reg;
reg  signed [31:0] tmp_11_reg_3096;
reg  signed [31:0] tmp_11_reg_3096_pp0_iter2_reg;
reg  signed [31:0] tmp_12_reg_3106;
reg  signed [31:0] tmp_12_reg_3106_pp0_iter2_reg;
reg  signed [31:0] tmp_13_reg_3116;
reg  signed [31:0] tmp_13_reg_3116_pp0_iter2_reg;
reg  signed [31:0] tmp_14_reg_3126;
reg  signed [31:0] tmp_14_reg_3126_pp0_iter2_reg;
reg  signed [31:0] tmp_15_reg_3136;
reg  signed [31:0] tmp_15_reg_3136_pp0_iter2_reg;
reg  signed [31:0] tmp_16_reg_3146;
reg  signed [31:0] tmp_16_reg_3146_pp0_iter2_reg;
reg  signed [31:0] tmp_17_reg_3156;
reg  signed [31:0] tmp_17_reg_3156_pp0_iter2_reg;
reg  signed [31:0] tmp_18_reg_3166;
reg  signed [31:0] tmp_18_reg_3166_pp0_iter2_reg;
reg  signed [31:0] tmp_19_reg_3176;
reg  signed [31:0] tmp_19_reg_3176_pp0_iter2_reg;
reg  signed [31:0] tmp_20_reg_3186;
reg  signed [31:0] tmp_20_reg_3186_pp0_iter2_reg;
reg  signed [31:0] tmp_21_reg_3196;
reg  signed [31:0] tmp_21_reg_3196_pp0_iter2_reg;
reg  signed [31:0] tmp_22_reg_3201;
reg  signed [31:0] tmp_22_reg_3201_pp0_iter2_reg;
reg  signed [31:0] tmp_22_reg_3201_pp0_iter3_reg;
reg  signed [31:0] tmp_23_reg_3206;
reg  signed [31:0] tmp_23_reg_3206_pp0_iter2_reg;
reg  signed [31:0] tmp_23_reg_3206_pp0_iter3_reg;
reg  signed [31:0] tmp_24_reg_3216;
reg  signed [31:0] tmp_24_reg_3216_pp0_iter2_reg;
reg  signed [31:0] tmp_25_reg_3226;
reg  signed [31:0] tmp_25_reg_3226_pp0_iter2_reg;
reg  signed [31:0] tmp_26_reg_3231;
reg  signed [31:0] tmp_26_reg_3231_pp0_iter2_reg;
reg  signed [31:0] tmp_26_reg_3231_pp0_iter3_reg;
reg  signed [31:0] tmp_27_reg_3236;
reg  signed [31:0] tmp_27_reg_3236_pp0_iter2_reg;
reg  signed [31:0] tmp_27_reg_3236_pp0_iter3_reg;
reg  signed [31:0] tmp_28_reg_3246;
reg  signed [31:0] tmp_28_reg_3246_pp0_iter2_reg;
reg  signed [31:0] tmp_29_reg_3256;
reg  signed [31:0] tmp_29_reg_3256_pp0_iter2_reg;
reg  signed [31:0] tmp_30_reg_3266;
reg  signed [31:0] tmp_30_reg_3266_pp0_iter2_reg;
reg  signed [31:0] tmp_31_reg_3276;
reg  signed [31:0] tmp_31_reg_3276_pp0_iter2_reg;
reg  signed [31:0] tmp_32_reg_3286;
reg  signed [31:0] tmp_32_reg_3286_pp0_iter2_reg;
reg  signed [31:0] tmp_33_reg_3296;
reg  signed [31:0] tmp_33_reg_3296_pp0_iter2_reg;
reg  signed [31:0] tmp_34_reg_3306;
reg  signed [31:0] tmp_34_reg_3306_pp0_iter2_reg;
reg  signed [31:0] tmp_35_reg_3316;
reg  signed [31:0] tmp_35_reg_3316_pp0_iter2_reg;
reg  signed [31:0] tmp_36_reg_3326;
reg  signed [31:0] tmp_36_reg_3326_pp0_iter2_reg;
reg  signed [31:0] tmp_37_reg_3336;
reg  signed [31:0] tmp_37_reg_3336_pp0_iter2_reg;
reg  signed [31:0] tmp_38_reg_3346;
reg  signed [31:0] tmp_38_reg_3346_pp0_iter2_reg;
reg  signed [31:0] tmp_39_reg_3356;
reg  signed [31:0] tmp_39_reg_3356_pp0_iter2_reg;
reg  signed [31:0] tmp_40_reg_3366;
reg  signed [31:0] tmp_40_reg_3366_pp0_iter2_reg;
reg  signed [31:0] tmp_41_reg_3376;
reg  signed [31:0] tmp_41_reg_3376_pp0_iter2_reg;
reg  signed [31:0] tmp_42_reg_3386;
reg  signed [31:0] tmp_42_reg_3386_pp0_iter2_reg;
reg  signed [31:0] tmp_43_reg_3396;
reg  signed [31:0] tmp_43_reg_3396_pp0_iter2_reg;
reg  signed [31:0] tmp_44_reg_3406;
reg  signed [31:0] tmp_44_reg_3406_pp0_iter2_reg;
reg  signed [31:0] tmp_45_reg_3416;
reg  signed [31:0] tmp_45_reg_3416_pp0_iter2_reg;
reg  signed [31:0] tmp_46_reg_3426;
reg  signed [31:0] tmp_46_reg_3426_pp0_iter2_reg;
reg  signed [31:0] tmp_47_reg_3436;
reg  signed [31:0] tmp_47_reg_3436_pp0_iter2_reg;
reg  signed [31:0] tmp_48_reg_3446;
reg  signed [31:0] tmp_48_reg_3446_pp0_iter2_reg;
reg  signed [31:0] tmp_49_reg_3456;
reg  signed [31:0] tmp_49_reg_3456_pp0_iter2_reg;
reg  signed [31:0] tmp_50_reg_3466;
reg  signed [31:0] tmp_50_reg_3466_pp0_iter2_reg;
reg  signed [31:0] tmp_51_reg_3476;
reg  signed [31:0] tmp_51_reg_3476_pp0_iter2_reg;
reg  signed [31:0] tmp_52_reg_3486;
reg  signed [31:0] tmp_52_reg_3486_pp0_iter2_reg;
reg  signed [31:0] tmp_53_reg_3496;
reg  signed [31:0] tmp_53_reg_3496_pp0_iter2_reg;
reg  signed [31:0] tmp_54_reg_3506;
reg  signed [31:0] tmp_54_reg_3506_pp0_iter2_reg;
reg  signed [31:0] tmp_55_reg_3516;
reg  signed [31:0] tmp_55_reg_3516_pp0_iter2_reg;
reg  signed [31:0] tmp_56_reg_3526;
reg  signed [31:0] tmp_56_reg_3526_pp0_iter2_reg;
reg  signed [31:0] tmp_57_reg_3536;
reg  signed [31:0] tmp_57_reg_3536_pp0_iter2_reg;
reg  signed [31:0] tmp_58_reg_3546;
reg  signed [31:0] tmp_58_reg_3546_pp0_iter2_reg;
reg  signed [31:0] tmp_59_reg_3556;
reg  signed [31:0] tmp_59_reg_3556_pp0_iter2_reg;
reg  signed [31:0] tmp_60_reg_3566;
reg  signed [31:0] tmp_60_reg_3566_pp0_iter2_reg;
reg  signed [31:0] tmp_61_reg_3576;
reg  signed [31:0] tmp_61_reg_3576_pp0_iter2_reg;
reg  signed [31:0] tmp_62_reg_3586;
reg  signed [31:0] tmp_62_reg_3586_pp0_iter2_reg;
reg  signed [31:0] tmp_63_reg_3596;
reg  signed [31:0] tmp_63_reg_3596_pp0_iter2_reg;
reg  signed [31:0] tmp_64_reg_3606;
reg  signed [31:0] tmp_64_reg_3606_pp0_iter2_reg;
reg  signed [31:0] tmp_65_reg_3616;
reg  signed [31:0] tmp_65_reg_3616_pp0_iter2_reg;
reg  signed [31:0] tmp_66_reg_3626;
reg  signed [31:0] tmp_66_reg_3626_pp0_iter2_reg;
reg  signed [31:0] tmp_67_reg_3636;
reg  signed [31:0] tmp_67_reg_3636_pp0_iter2_reg;
reg  signed [31:0] tmp_68_reg_3646;
reg  signed [31:0] tmp_68_reg_3646_pp0_iter2_reg;
reg  signed [31:0] tmp_69_reg_3656;
reg  signed [31:0] tmp_69_reg_3656_pp0_iter2_reg;
reg  signed [31:0] tmp_70_reg_3666;
reg  signed [31:0] tmp_70_reg_3666_pp0_iter2_reg;
reg  signed [31:0] tmp_71_reg_3676;
reg  signed [31:0] tmp_71_reg_3676_pp0_iter2_reg;
reg  signed [31:0] tmp_72_reg_3686;
reg  signed [31:0] tmp_72_reg_3686_pp0_iter2_reg;
reg  signed [31:0] tmp_73_reg_3696;
reg  signed [31:0] tmp_73_reg_3696_pp0_iter2_reg;
reg  signed [31:0] a_70_load_reg_3701;
reg  signed [31:0] tmp_74_reg_3706;
reg  signed [31:0] a_71_load_reg_3711;
reg  signed [31:0] tmp_75_reg_3716;
reg  signed [31:0] a_72_load_reg_3721;
reg  signed [31:0] tmp_76_reg_3726;
reg  signed [31:0] a_2_load_reg_3741;
reg  signed [31:0] a_3_load_reg_3746;
reg  signed [31:0] a_6_load_reg_3761;
reg  signed [31:0] a_7_load_reg_3766;
reg  signed [31:0] a_8_load_reg_3771;
reg  signed [31:0] a_9_load_reg_3776;
reg  signed [31:0] a_10_load_reg_3781;
reg  signed [31:0] a_11_load_reg_3786;
reg  signed [31:0] a_12_load_reg_3791;
reg  signed [31:0] a_13_load_reg_3796;
reg  signed [31:0] a_14_load_reg_3801;
reg  signed [31:0] a_15_load_reg_3806;
reg  signed [31:0] a_16_load_reg_3811;
reg  signed [31:0] a_17_load_reg_3816;
reg  signed [31:0] a_20_load_reg_3831;
reg  signed [31:0] a_21_load_reg_3836;
reg  signed [31:0] a_24_load_reg_3851;
reg  signed [31:0] a_25_load_reg_3856;
reg  signed [31:0] a_26_load_reg_3861;
reg  signed [31:0] a_27_load_reg_3866;
reg  signed [31:0] a_28_load_reg_3871;
reg  signed [31:0] a_29_load_reg_3876;
reg  signed [31:0] a_30_load_reg_3881;
reg  signed [31:0] a_31_load_reg_3886;
reg  signed [31:0] a_32_load_reg_3891;
reg  signed [31:0] a_33_load_reg_3896;
reg  signed [31:0] a_34_load_reg_3901;
reg  signed [31:0] a_35_load_reg_3906;
reg  signed [31:0] a_36_load_reg_3911;
reg  signed [31:0] a_37_load_reg_3916;
reg  signed [31:0] a_38_load_reg_3921;
reg  signed [31:0] a_39_load_reg_3926;
reg  signed [31:0] a_40_load_reg_3931;
reg  signed [31:0] a_41_load_reg_3936;
reg  signed [31:0] a_42_load_reg_3941;
reg  signed [31:0] a_43_load_reg_3946;
reg  signed [31:0] a_44_load_reg_3951;
reg  signed [31:0] a_45_load_reg_3956;
reg  signed [31:0] a_46_load_reg_3961;
reg  signed [31:0] a_47_load_reg_3966;
reg  signed [31:0] a_48_load_reg_3971;
reg  signed [31:0] a_49_load_reg_3976;
reg  signed [31:0] a_50_load_reg_3981;
reg  signed [31:0] a_51_load_reg_3986;
reg  signed [31:0] a_52_load_reg_3991;
reg  signed [31:0] a_53_load_reg_3996;
reg  signed [31:0] a_54_load_reg_4001;
reg  signed [31:0] a_55_load_reg_4006;
reg  signed [31:0] a_56_load_reg_4011;
reg  signed [31:0] a_57_load_reg_4016;
reg  signed [31:0] a_58_load_reg_4021;
reg  signed [31:0] a_59_load_reg_4026;
reg  signed [31:0] a_60_load_reg_4031;
reg  signed [31:0] a_61_load_reg_4036;
reg  signed [31:0] a_62_load_reg_4041;
reg  signed [31:0] a_63_load_reg_4046;
reg  signed [31:0] a_64_load_reg_4051;
reg  signed [31:0] a_65_load_reg_4056;
reg  signed [31:0] a_66_load_reg_4061;
reg  signed [31:0] a_67_load_reg_4066;
reg  signed [31:0] a_68_load_reg_4071;
reg  signed [31:0] a_69_load_reg_4076;
wire   [31:0] tmp_5_69_fu_2274_p2;
reg   [31:0] tmp_5_69_reg_4081;
wire   [31:0] tmp_5_70_fu_2278_p2;
reg   [31:0] tmp_5_70_reg_4086;
wire   [31:0] tmp_5_71_fu_2282_p2;
reg   [31:0] tmp_5_71_reg_4091;
reg  signed [31:0] a_0_load_reg_4096;
reg  signed [31:0] a_1_load_reg_4101;
wire   [31:0] tmp_5_2_fu_2286_p2;
reg   [31:0] tmp_5_2_reg_4106;
wire   [31:0] tmp_5_3_fu_2290_p2;
reg   [31:0] tmp_5_3_reg_4111;
reg  signed [31:0] a_4_load_reg_4116;
reg  signed [31:0] a_5_load_reg_4121;
wire   [31:0] tmp_5_6_fu_2294_p2;
reg   [31:0] tmp_5_6_reg_4126;
wire   [31:0] tmp_5_7_fu_2298_p2;
reg   [31:0] tmp_5_7_reg_4131;
wire   [31:0] tmp_5_8_fu_2302_p2;
reg   [31:0] tmp_5_8_reg_4136;
wire   [31:0] tmp_5_9_fu_2306_p2;
reg   [31:0] tmp_5_9_reg_4141;
wire   [31:0] tmp_5_s_fu_2310_p2;
reg   [31:0] tmp_5_s_reg_4146;
wire   [31:0] tmp_5_10_fu_2314_p2;
reg   [31:0] tmp_5_10_reg_4151;
wire   [31:0] tmp_5_11_fu_2318_p2;
reg   [31:0] tmp_5_11_reg_4156;
wire   [31:0] tmp_5_12_fu_2322_p2;
reg   [31:0] tmp_5_12_reg_4161;
wire   [31:0] tmp_5_13_fu_2326_p2;
reg   [31:0] tmp_5_13_reg_4166;
wire   [31:0] tmp_5_14_fu_2330_p2;
reg   [31:0] tmp_5_14_reg_4171;
wire   [31:0] tmp_5_15_fu_2334_p2;
reg   [31:0] tmp_5_15_reg_4176;
wire   [31:0] tmp_5_16_fu_2338_p2;
reg   [31:0] tmp_5_16_reg_4181;
reg  signed [31:0] a_18_load_reg_4186;
reg  signed [31:0] a_19_load_reg_4191;
wire   [31:0] tmp_5_19_fu_2342_p2;
reg   [31:0] tmp_5_19_reg_4196;
wire   [31:0] tmp_5_20_fu_2346_p2;
reg   [31:0] tmp_5_20_reg_4201;
reg  signed [31:0] a_22_load_reg_4206;
reg  signed [31:0] a_23_load_reg_4211;
wire   [31:0] tmp_5_23_fu_2350_p2;
reg   [31:0] tmp_5_23_reg_4216;
wire   [31:0] tmp_5_24_fu_2354_p2;
reg   [31:0] tmp_5_24_reg_4221;
wire   [31:0] tmp_5_25_fu_2358_p2;
reg   [31:0] tmp_5_25_reg_4226;
wire   [31:0] tmp_5_26_fu_2362_p2;
reg   [31:0] tmp_5_26_reg_4231;
wire   [31:0] tmp_5_27_fu_2366_p2;
reg   [31:0] tmp_5_27_reg_4236;
wire   [31:0] tmp_5_28_fu_2370_p2;
reg   [31:0] tmp_5_28_reg_4241;
wire   [31:0] tmp_5_29_fu_2374_p2;
reg   [31:0] tmp_5_29_reg_4246;
wire   [31:0] tmp_5_30_fu_2378_p2;
reg   [31:0] tmp_5_30_reg_4251;
wire   [31:0] tmp_5_31_fu_2382_p2;
reg   [31:0] tmp_5_31_reg_4256;
wire   [31:0] tmp_5_32_fu_2386_p2;
reg   [31:0] tmp_5_32_reg_4261;
wire   [31:0] tmp_5_33_fu_2390_p2;
reg   [31:0] tmp_5_33_reg_4266;
wire   [31:0] tmp_5_34_fu_2394_p2;
reg   [31:0] tmp_5_34_reg_4271;
wire   [31:0] tmp_5_35_fu_2398_p2;
reg   [31:0] tmp_5_35_reg_4276;
wire   [31:0] tmp_5_36_fu_2402_p2;
reg   [31:0] tmp_5_36_reg_4281;
wire   [31:0] tmp_5_37_fu_2406_p2;
reg   [31:0] tmp_5_37_reg_4286;
wire   [31:0] tmp_5_38_fu_2410_p2;
reg   [31:0] tmp_5_38_reg_4291;
wire   [31:0] tmp_5_39_fu_2414_p2;
reg   [31:0] tmp_5_39_reg_4296;
wire   [31:0] tmp_5_40_fu_2418_p2;
reg   [31:0] tmp_5_40_reg_4301;
wire   [31:0] tmp_5_41_fu_2422_p2;
reg   [31:0] tmp_5_41_reg_4306;
wire   [31:0] tmp_5_42_fu_2426_p2;
reg   [31:0] tmp_5_42_reg_4311;
wire   [31:0] tmp_5_43_fu_2430_p2;
reg   [31:0] tmp_5_43_reg_4316;
wire   [31:0] tmp_5_44_fu_2434_p2;
reg   [31:0] tmp_5_44_reg_4321;
wire   [31:0] tmp_5_45_fu_2438_p2;
reg   [31:0] tmp_5_45_reg_4326;
wire   [31:0] tmp_5_46_fu_2442_p2;
reg   [31:0] tmp_5_46_reg_4331;
wire   [31:0] tmp_5_47_fu_2446_p2;
reg   [31:0] tmp_5_47_reg_4336;
wire   [31:0] tmp_5_48_fu_2450_p2;
reg   [31:0] tmp_5_48_reg_4341;
wire   [31:0] tmp_5_49_fu_2454_p2;
reg   [31:0] tmp_5_49_reg_4346;
wire   [31:0] tmp_5_50_fu_2458_p2;
reg   [31:0] tmp_5_50_reg_4351;
wire   [31:0] tmp_5_51_fu_2462_p2;
reg   [31:0] tmp_5_51_reg_4356;
wire   [31:0] tmp_5_52_fu_2466_p2;
reg   [31:0] tmp_5_52_reg_4361;
wire   [31:0] tmp_5_53_fu_2470_p2;
reg   [31:0] tmp_5_53_reg_4366;
wire   [31:0] tmp_5_54_fu_2474_p2;
reg   [31:0] tmp_5_54_reg_4371;
wire   [31:0] tmp_5_55_fu_2478_p2;
reg   [31:0] tmp_5_55_reg_4376;
wire   [31:0] tmp_5_56_fu_2482_p2;
reg   [31:0] tmp_5_56_reg_4381;
wire   [31:0] tmp_5_57_fu_2486_p2;
reg   [31:0] tmp_5_57_reg_4386;
wire   [31:0] tmp_5_58_fu_2490_p2;
reg   [31:0] tmp_5_58_reg_4391;
wire   [31:0] tmp_5_59_fu_2494_p2;
reg   [31:0] tmp_5_59_reg_4396;
wire   [31:0] tmp_5_60_fu_2498_p2;
reg   [31:0] tmp_5_60_reg_4401;
wire   [31:0] tmp_5_61_fu_2502_p2;
reg   [31:0] tmp_5_61_reg_4406;
wire   [31:0] tmp_5_62_fu_2506_p2;
reg   [31:0] tmp_5_62_reg_4411;
wire   [31:0] tmp_5_63_fu_2510_p2;
reg   [31:0] tmp_5_63_reg_4416;
wire   [31:0] tmp_5_64_fu_2514_p2;
reg   [31:0] tmp_5_64_reg_4421;
wire   [31:0] tmp_5_65_fu_2518_p2;
reg   [31:0] tmp_5_65_reg_4426;
wire   [31:0] tmp_5_66_fu_2522_p2;
reg   [31:0] tmp_5_66_reg_4431;
wire   [31:0] tmp_5_67_fu_2526_p2;
reg   [31:0] tmp_5_67_reg_4436;
wire   [31:0] tmp_5_68_fu_2530_p2;
reg   [31:0] tmp_5_68_reg_4441;
wire   [31:0] tmp70_fu_2538_p2;
reg   [31:0] tmp70_reg_4446;
wire   [31:0] tmp_5_fu_2543_p2;
reg   [31:0] tmp_5_reg_4451;
wire   [31:0] tmp_5_1_fu_2547_p2;
reg   [31:0] tmp_5_1_reg_4456;
wire   [31:0] tmp_5_4_fu_2551_p2;
reg   [31:0] tmp_5_4_reg_4461;
wire   [31:0] tmp_5_5_fu_2555_p2;
reg   [31:0] tmp_5_5_reg_4466;
wire   [31:0] tmp_5_17_fu_2559_p2;
reg   [31:0] tmp_5_17_reg_4471;
wire   [31:0] tmp_5_18_fu_2563_p2;
reg   [31:0] tmp_5_18_reg_4476;
wire   [31:0] tmp_5_21_fu_2567_p2;
reg   [31:0] tmp_5_21_reg_4481;
wire   [31:0] tmp_5_22_fu_2571_p2;
reg   [31:0] tmp_5_22_reg_4486;
wire   [31:0] tmp6_fu_2575_p2;
reg   [31:0] tmp6_reg_4491;
wire   [31:0] tmp9_fu_2583_p2;
reg   [31:0] tmp9_reg_4496;
wire   [31:0] tmp13_fu_2588_p2;
reg   [31:0] tmp13_reg_4501;
wire   [31:0] tmp14_fu_2592_p2;
reg   [31:0] tmp14_reg_4506;
wire   [31:0] tmp15_fu_2609_p2;
reg   [31:0] tmp15_reg_4511;
wire   [31:0] tmp23_fu_2615_p2;
reg   [31:0] tmp23_reg_4516;
wire   [31:0] tmp26_fu_2623_p2;
reg   [31:0] tmp26_reg_4521;
wire   [31:0] tmp30_fu_2628_p2;
reg   [31:0] tmp30_reg_4526;
wire   [31:0] tmp31_fu_2632_p2;
reg   [31:0] tmp31_reg_4531;
wire   [31:0] tmp32_fu_2649_p2;
reg   [31:0] tmp32_reg_4536;
wire   [31:0] tmp40_fu_2655_p2;
reg   [31:0] tmp40_reg_4541;
wire   [31:0] tmp41_fu_2659_p2;
reg   [31:0] tmp41_reg_4546;
wire   [31:0] tmp42_fu_2676_p2;
reg   [31:0] tmp42_reg_4551;
wire   [31:0] tmp48_fu_2682_p2;
reg   [31:0] tmp48_reg_4556;
wire   [31:0] tmp49_fu_2686_p2;
reg   [31:0] tmp49_reg_4561;
wire   [31:0] tmp50_fu_2703_p2;
reg   [31:0] tmp50_reg_4566;
wire   [31:0] tmp56_fu_2717_p2;
reg   [31:0] tmp56_reg_4571;
wire   [31:0] tmp59_fu_2736_p2;
reg   [31:0] tmp59_reg_4576;
wire   [31:0] tmp63_fu_2770_p2;
reg   [31:0] tmp63_reg_4581;
wire   [31:0] tmp2_fu_2809_p2;
reg   [31:0] tmp2_reg_4586;
wire   [31:0] tmp19_fu_2848_p2;
reg   [31:0] tmp19_reg_4591;
wire   [31:0] tmp36_fu_2887_p2;
reg   [31:0] tmp36_reg_4596;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg   [6:0] ap_phi_mux_ia_phi_fu_1474_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_2_fu_1539_p1;
wire  signed [63:0] tmp_1_cast_fu_2899_p1;
wire   [0:0] exitcond_fu_1510_p2;
wire   [6:0] ia_1_fu_1504_p2;
wire   [31:0] tmp71_fu_2534_p2;
wire   [31:0] tmp10_fu_2579_p2;
wire   [31:0] tmp18_fu_2600_p2;
wire   [31:0] tmp17_fu_2604_p2;
wire   [31:0] tmp16_fu_2596_p2;
wire   [31:0] tmp27_fu_2619_p2;
wire   [31:0] tmp35_fu_2640_p2;
wire   [31:0] tmp34_fu_2644_p2;
wire   [31:0] tmp33_fu_2636_p2;
wire   [31:0] tmp45_fu_2667_p2;
wire   [31:0] tmp44_fu_2671_p2;
wire   [31:0] tmp43_fu_2663_p2;
wire   [31:0] tmp53_fu_2694_p2;
wire   [31:0] tmp52_fu_2698_p2;
wire   [31:0] tmp51_fu_2690_p2;
wire   [31:0] tmp58_fu_2713_p2;
wire   [31:0] tmp57_fu_2709_p2;
wire   [31:0] tmp62_fu_2727_p2;
wire   [31:0] tmp61_fu_2731_p2;
wire   [31:0] tmp60_fu_2723_p2;
wire   [31:0] tmp67_fu_2746_p2;
wire   [31:0] tmp66_fu_2750_p2;
wire   [31:0] tmp65_fu_2742_p2;
wire   [31:0] tmp69_fu_2761_p2;
wire   [31:0] tmp68_fu_2765_p2;
wire   [31:0] tmp64_fu_2755_p2;
wire   [31:0] tmp5_fu_2776_p2;
wire   [31:0] tmp8_fu_2785_p2;
wire   [31:0] tmp7_fu_2789_p2;
wire   [31:0] tmp4_fu_2780_p2;
wire   [31:0] tmp12_fu_2800_p2;
wire   [31:0] tmp11_fu_2804_p2;
wire   [31:0] tmp3_fu_2794_p2;
wire   [31:0] tmp22_fu_2815_p2;
wire   [31:0] tmp25_fu_2824_p2;
wire   [31:0] tmp24_fu_2828_p2;
wire   [31:0] tmp21_fu_2819_p2;
wire   [31:0] tmp29_fu_2839_p2;
wire   [31:0] tmp28_fu_2843_p2;
wire   [31:0] tmp20_fu_2833_p2;
wire   [31:0] tmp39_fu_2854_p2;
wire   [31:0] tmp47_fu_2863_p2;
wire   [31:0] tmp46_fu_2867_p2;
wire   [31:0] tmp38_fu_2858_p2;
wire   [31:0] tmp55_fu_2878_p2;
wire   [31:0] tmp54_fu_2882_p2;
wire   [31:0] tmp37_fu_2872_p2;
wire   [13:0] grp_fu_2913_p3;
wire   [31:0] tmp1_fu_2903_p2;
wire   [7:0] grp_fu_2913_p0;
wire   [6:0] grp_fu_2913_p1;
wire   [6:0] grp_fu_2913_p2;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [13:0] grp_fu_2913_p10;
wire   [13:0] grp_fu_2913_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

mmult_hw_mac_mulabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 14 ))
mmult_hw_mac_mulabkb_U1(
    .din0(grp_fu_2913_p0),
    .din1(grp_fu_2913_p1),
    .din2(grp_fu_2913_p2),
    .dout(grp_fu_2913_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2922 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ia_reg_1470 <= tmp_mid2_v_reg_2936;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ia_reg_1470 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_1492_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ib_reg_1481 <= ib_1_fu_1544_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ib_reg_1481 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_1492_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1459 <= indvar_flatten_next_fu_1498_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_1459 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2922_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_0_load_reg_4096 <= a_0_q0;
        a_18_load_reg_4186 <= a_18_q0;
        a_19_load_reg_4191 <= a_19_q0;
        a_1_load_reg_4101 <= a_1_q0;
        a_22_load_reg_4206 <= a_22_q0;
        a_23_load_reg_4211 <= a_23_q0;
        a_4_load_reg_4116 <= a_4_q0;
        a_5_load_reg_4121 <= a_5_q0;
        tmp70_reg_4446 <= tmp70_fu_2538_p2;
        tmp_5_10_reg_4151 <= tmp_5_10_fu_2314_p2;
        tmp_5_11_reg_4156 <= tmp_5_11_fu_2318_p2;
        tmp_5_12_reg_4161 <= tmp_5_12_fu_2322_p2;
        tmp_5_13_reg_4166 <= tmp_5_13_fu_2326_p2;
        tmp_5_14_reg_4171 <= tmp_5_14_fu_2330_p2;
        tmp_5_15_reg_4176 <= tmp_5_15_fu_2334_p2;
        tmp_5_16_reg_4181 <= tmp_5_16_fu_2338_p2;
        tmp_5_19_reg_4196 <= tmp_5_19_fu_2342_p2;
        tmp_5_20_reg_4201 <= tmp_5_20_fu_2346_p2;
        tmp_5_23_reg_4216 <= tmp_5_23_fu_2350_p2;
        tmp_5_24_reg_4221 <= tmp_5_24_fu_2354_p2;
        tmp_5_25_reg_4226 <= tmp_5_25_fu_2358_p2;
        tmp_5_26_reg_4231 <= tmp_5_26_fu_2362_p2;
        tmp_5_27_reg_4236 <= tmp_5_27_fu_2366_p2;
        tmp_5_28_reg_4241 <= tmp_5_28_fu_2370_p2;
        tmp_5_29_reg_4246 <= tmp_5_29_fu_2374_p2;
        tmp_5_2_reg_4106 <= tmp_5_2_fu_2286_p2;
        tmp_5_30_reg_4251 <= tmp_5_30_fu_2378_p2;
        tmp_5_31_reg_4256 <= tmp_5_31_fu_2382_p2;
        tmp_5_32_reg_4261 <= tmp_5_32_fu_2386_p2;
        tmp_5_33_reg_4266 <= tmp_5_33_fu_2390_p2;
        tmp_5_34_reg_4271 <= tmp_5_34_fu_2394_p2;
        tmp_5_35_reg_4276 <= tmp_5_35_fu_2398_p2;
        tmp_5_36_reg_4281 <= tmp_5_36_fu_2402_p2;
        tmp_5_37_reg_4286 <= tmp_5_37_fu_2406_p2;
        tmp_5_38_reg_4291 <= tmp_5_38_fu_2410_p2;
        tmp_5_39_reg_4296 <= tmp_5_39_fu_2414_p2;
        tmp_5_3_reg_4111 <= tmp_5_3_fu_2290_p2;
        tmp_5_40_reg_4301 <= tmp_5_40_fu_2418_p2;
        tmp_5_41_reg_4306 <= tmp_5_41_fu_2422_p2;
        tmp_5_42_reg_4311 <= tmp_5_42_fu_2426_p2;
        tmp_5_43_reg_4316 <= tmp_5_43_fu_2430_p2;
        tmp_5_44_reg_4321 <= tmp_5_44_fu_2434_p2;
        tmp_5_45_reg_4326 <= tmp_5_45_fu_2438_p2;
        tmp_5_46_reg_4331 <= tmp_5_46_fu_2442_p2;
        tmp_5_47_reg_4336 <= tmp_5_47_fu_2446_p2;
        tmp_5_48_reg_4341 <= tmp_5_48_fu_2450_p2;
        tmp_5_49_reg_4346 <= tmp_5_49_fu_2454_p2;
        tmp_5_50_reg_4351 <= tmp_5_50_fu_2458_p2;
        tmp_5_51_reg_4356 <= tmp_5_51_fu_2462_p2;
        tmp_5_52_reg_4361 <= tmp_5_52_fu_2466_p2;
        tmp_5_53_reg_4366 <= tmp_5_53_fu_2470_p2;
        tmp_5_54_reg_4371 <= tmp_5_54_fu_2474_p2;
        tmp_5_55_reg_4376 <= tmp_5_55_fu_2478_p2;
        tmp_5_56_reg_4381 <= tmp_5_56_fu_2482_p2;
        tmp_5_57_reg_4386 <= tmp_5_57_fu_2486_p2;
        tmp_5_58_reg_4391 <= tmp_5_58_fu_2490_p2;
        tmp_5_59_reg_4396 <= tmp_5_59_fu_2494_p2;
        tmp_5_60_reg_4401 <= tmp_5_60_fu_2498_p2;
        tmp_5_61_reg_4406 <= tmp_5_61_fu_2502_p2;
        tmp_5_62_reg_4411 <= tmp_5_62_fu_2506_p2;
        tmp_5_63_reg_4416 <= tmp_5_63_fu_2510_p2;
        tmp_5_64_reg_4421 <= tmp_5_64_fu_2514_p2;
        tmp_5_65_reg_4426 <= tmp_5_65_fu_2518_p2;
        tmp_5_66_reg_4431 <= tmp_5_66_fu_2522_p2;
        tmp_5_67_reg_4436 <= tmp_5_67_fu_2526_p2;
        tmp_5_68_reg_4441 <= tmp_5_68_fu_2530_p2;
        tmp_5_6_reg_4126 <= tmp_5_6_fu_2294_p2;
        tmp_5_7_reg_4131 <= tmp_5_7_fu_2298_p2;
        tmp_5_8_reg_4136 <= tmp_5_8_fu_2302_p2;
        tmp_5_9_reg_4141 <= tmp_5_9_fu_2306_p2;
        tmp_5_s_reg_4146 <= tmp_5_s_fu_2310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2922_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_10_load_reg_3781 <= a_10_q0;
        a_11_load_reg_3786 <= a_11_q0;
        a_12_load_reg_3791 <= a_12_q0;
        a_13_load_reg_3796 <= a_13_q0;
        a_14_load_reg_3801 <= a_14_q0;
        a_15_load_reg_3806 <= a_15_q0;
        a_16_load_reg_3811 <= a_16_q0;
        a_17_load_reg_3816 <= a_17_q0;
        a_20_load_reg_3831 <= a_20_q0;
        a_21_load_reg_3836 <= a_21_q0;
        a_24_load_reg_3851 <= a_24_q0;
        a_25_load_reg_3856 <= a_25_q0;
        a_26_load_reg_3861 <= a_26_q0;
        a_27_load_reg_3866 <= a_27_q0;
        a_28_load_reg_3871 <= a_28_q0;
        a_29_load_reg_3876 <= a_29_q0;
        a_2_load_reg_3741 <= a_2_q0;
        a_30_load_reg_3881 <= a_30_q0;
        a_31_load_reg_3886 <= a_31_q0;
        a_32_load_reg_3891 <= a_32_q0;
        a_33_load_reg_3896 <= a_33_q0;
        a_34_load_reg_3901 <= a_34_q0;
        a_35_load_reg_3906 <= a_35_q0;
        a_36_load_reg_3911 <= a_36_q0;
        a_37_load_reg_3916 <= a_37_q0;
        a_38_load_reg_3921 <= a_38_q0;
        a_39_load_reg_3926 <= a_39_q0;
        a_3_load_reg_3746 <= a_3_q0;
        a_40_load_reg_3931 <= a_40_q0;
        a_41_load_reg_3936 <= a_41_q0;
        a_42_load_reg_3941 <= a_42_q0;
        a_43_load_reg_3946 <= a_43_q0;
        a_44_load_reg_3951 <= a_44_q0;
        a_45_load_reg_3956 <= a_45_q0;
        a_46_load_reg_3961 <= a_46_q0;
        a_47_load_reg_3966 <= a_47_q0;
        a_48_load_reg_3971 <= a_48_q0;
        a_49_load_reg_3976 <= a_49_q0;
        a_50_load_reg_3981 <= a_50_q0;
        a_51_load_reg_3986 <= a_51_q0;
        a_52_load_reg_3991 <= a_52_q0;
        a_53_load_reg_3996 <= a_53_q0;
        a_54_load_reg_4001 <= a_54_q0;
        a_55_load_reg_4006 <= a_55_q0;
        a_56_load_reg_4011 <= a_56_q0;
        a_57_load_reg_4016 <= a_57_q0;
        a_58_load_reg_4021 <= a_58_q0;
        a_59_load_reg_4026 <= a_59_q0;
        a_60_load_reg_4031 <= a_60_q0;
        a_61_load_reg_4036 <= a_61_q0;
        a_62_load_reg_4041 <= a_62_q0;
        a_63_load_reg_4046 <= a_63_q0;
        a_64_load_reg_4051 <= a_64_q0;
        a_65_load_reg_4056 <= a_65_q0;
        a_66_load_reg_4061 <= a_66_q0;
        a_67_load_reg_4066 <= a_67_q0;
        a_68_load_reg_4071 <= a_68_q0;
        a_69_load_reg_4076 <= a_69_q0;
        a_6_load_reg_3761 <= a_6_q0;
        a_7_load_reg_3766 <= a_7_q0;
        a_8_load_reg_3771 <= a_8_q0;
        a_9_load_reg_3776 <= a_9_q0;
        tmp_5_69_reg_4081 <= tmp_5_69_fu_2274_p2;
        tmp_5_70_reg_4086 <= tmp_5_70_fu_2278_p2;
        tmp_5_71_reg_4091 <= tmp_5_71_fu_2282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2922 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_70_load_reg_3701 <= a_70_q0;
        a_71_load_reg_3711 <= a_71_q0;
        a_72_load_reg_3721 <= a_72_q0;
        tmp_10_reg_3086 <= {{b_q0[223:192]}};
        tmp_11_reg_3096 <= {{b_q0[255:224]}};
        tmp_12_reg_3106 <= {{b_q0[287:256]}};
        tmp_13_reg_3116 <= {{b_q0[319:288]}};
        tmp_14_reg_3126 <= {{b_q0[351:320]}};
        tmp_15_reg_3136 <= {{b_q0[383:352]}};
        tmp_16_reg_3146 <= {{b_q0[415:384]}};
        tmp_17_reg_3156 <= {{b_q0[447:416]}};
        tmp_18_reg_3166 <= {{b_q0[479:448]}};
        tmp_19_reg_3176 <= {{b_q0[511:480]}};
        tmp_20_reg_3186 <= {{b_q0[543:512]}};
        tmp_21_reg_3196 <= {{b_q0[575:544]}};
        tmp_22_reg_3201 <= {{b_q0[607:576]}};
        tmp_23_reg_3206 <= {{b_q0[639:608]}};
        tmp_24_reg_3216 <= {{b_q0[671:640]}};
        tmp_25_reg_3226 <= {{b_q0[703:672]}};
        tmp_26_reg_3231 <= {{b_q0[735:704]}};
        tmp_27_reg_3236 <= {{b_q0[767:736]}};
        tmp_28_reg_3246 <= {{b_q0[799:768]}};
        tmp_29_reg_3256 <= {{b_q0[831:800]}};
        tmp_30_reg_3266 <= {{b_q0[863:832]}};
        tmp_31_reg_3276 <= {{b_q0[895:864]}};
        tmp_32_reg_3286 <= {{b_q0[927:896]}};
        tmp_33_reg_3296 <= {{b_q0[959:928]}};
        tmp_34_reg_3306 <= {{b_q0[991:960]}};
        tmp_35_reg_3316 <= {{b_q0[1023:992]}};
        tmp_36_reg_3326 <= {{b_q0[1055:1024]}};
        tmp_37_reg_3336 <= {{b_q0[1087:1056]}};
        tmp_38_reg_3346 <= {{b_q0[1119:1088]}};
        tmp_39_reg_3356 <= {{b_q0[1151:1120]}};
        tmp_40_reg_3366 <= {{b_q0[1183:1152]}};
        tmp_41_reg_3376 <= {{b_q0[1215:1184]}};
        tmp_42_reg_3386 <= {{b_q0[1247:1216]}};
        tmp_43_reg_3396 <= {{b_q0[1279:1248]}};
        tmp_44_reg_3406 <= {{b_q0[1311:1280]}};
        tmp_45_reg_3416 <= {{b_q0[1343:1312]}};
        tmp_46_reg_3426 <= {{b_q0[1375:1344]}};
        tmp_47_reg_3436 <= {{b_q0[1407:1376]}};
        tmp_48_reg_3446 <= {{b_q0[1439:1408]}};
        tmp_49_reg_3456 <= {{b_q0[1471:1440]}};
        tmp_4_reg_3041 <= tmp_4_fu_1550_p1;
        tmp_50_reg_3466 <= {{b_q0[1503:1472]}};
        tmp_51_reg_3476 <= {{b_q0[1535:1504]}};
        tmp_52_reg_3486 <= {{b_q0[1567:1536]}};
        tmp_53_reg_3496 <= {{b_q0[1599:1568]}};
        tmp_54_reg_3506 <= {{b_q0[1631:1600]}};
        tmp_55_reg_3516 <= {{b_q0[1663:1632]}};
        tmp_56_reg_3526 <= {{b_q0[1695:1664]}};
        tmp_57_reg_3536 <= {{b_q0[1727:1696]}};
        tmp_58_reg_3546 <= {{b_q0[1759:1728]}};
        tmp_59_reg_3556 <= {{b_q0[1791:1760]}};
        tmp_60_reg_3566 <= {{b_q0[1823:1792]}};
        tmp_61_reg_3576 <= {{b_q0[1855:1824]}};
        tmp_62_reg_3586 <= {{b_q0[1887:1856]}};
        tmp_63_reg_3596 <= {{b_q0[1919:1888]}};
        tmp_64_reg_3606 <= {{b_q0[1951:1920]}};
        tmp_65_reg_3616 <= {{b_q0[1983:1952]}};
        tmp_66_reg_3626 <= {{b_q0[2015:1984]}};
        tmp_67_reg_3636 <= {{b_q0[2047:2016]}};
        tmp_68_reg_3646 <= {{b_q0[2079:2048]}};
        tmp_69_reg_3656 <= {{b_q0[2111:2080]}};
        tmp_6_reg_3046 <= {{b_q0[63:32]}};
        tmp_70_reg_3666 <= {{b_q0[2143:2112]}};
        tmp_71_reg_3676 <= {{b_q0[2175:2144]}};
        tmp_72_reg_3686 <= {{b_q0[2207:2176]}};
        tmp_73_reg_3696 <= {{b_q0[2239:2208]}};
        tmp_74_reg_3706 <= {{b_q0[2271:2240]}};
        tmp_75_reg_3716 <= {{b_q0[2303:2272]}};
        tmp_76_reg_3726 <= {{b_q0[2335:2304]}};
        tmp_7_reg_3056 <= {{b_q0[95:64]}};
        tmp_8_reg_3066 <= {{b_q0[127:96]}};
        tmp_9_reg_3071 <= {{b_q0[159:128]}};
        tmp_s_reg_3076 <= {{b_q0[191:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_2922 <= exitcond_flatten_fu_1492_p2;
        exitcond_flatten_reg_2922_pp0_iter1_reg <= exitcond_flatten_reg_2922;
        ib_mid2_reg_2931_pp0_iter1_reg <= ib_mid2_reg_2931;
        tmp_mid2_reg_2942_pp0_iter1_reg[6 : 0] <= tmp_mid2_reg_2942[6 : 0];
        tmp_mid2_v_reg_2936_pp0_iter1_reg <= tmp_mid2_v_reg_2936;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_2922_pp0_iter2_reg <= exitcond_flatten_reg_2922_pp0_iter1_reg;
        exitcond_flatten_reg_2922_pp0_iter3_reg <= exitcond_flatten_reg_2922_pp0_iter2_reg;
        exitcond_flatten_reg_2922_pp0_iter4_reg <= exitcond_flatten_reg_2922_pp0_iter3_reg;
        exitcond_flatten_reg_2922_pp0_iter5_reg <= exitcond_flatten_reg_2922_pp0_iter4_reg;
        ib_mid2_reg_2931_pp0_iter2_reg <= ib_mid2_reg_2931_pp0_iter1_reg;
        ib_mid2_reg_2931_pp0_iter3_reg <= ib_mid2_reg_2931_pp0_iter2_reg;
        ib_mid2_reg_2931_pp0_iter4_reg <= ib_mid2_reg_2931_pp0_iter3_reg;
        ib_mid2_reg_2931_pp0_iter5_reg <= ib_mid2_reg_2931_pp0_iter4_reg;
        tmp_10_reg_3086_pp0_iter2_reg <= tmp_10_reg_3086;
        tmp_11_reg_3096_pp0_iter2_reg <= tmp_11_reg_3096;
        tmp_12_reg_3106_pp0_iter2_reg <= tmp_12_reg_3106;
        tmp_13_reg_3116_pp0_iter2_reg <= tmp_13_reg_3116;
        tmp_14_reg_3126_pp0_iter2_reg <= tmp_14_reg_3126;
        tmp_15_reg_3136_pp0_iter2_reg <= tmp_15_reg_3136;
        tmp_16_reg_3146_pp0_iter2_reg <= tmp_16_reg_3146;
        tmp_17_reg_3156_pp0_iter2_reg <= tmp_17_reg_3156;
        tmp_18_reg_3166_pp0_iter2_reg <= tmp_18_reg_3166;
        tmp_19_reg_3176_pp0_iter2_reg <= tmp_19_reg_3176;
        tmp_20_reg_3186_pp0_iter2_reg <= tmp_20_reg_3186;
        tmp_21_reg_3196_pp0_iter2_reg <= tmp_21_reg_3196;
        tmp_22_reg_3201_pp0_iter2_reg <= tmp_22_reg_3201;
        tmp_22_reg_3201_pp0_iter3_reg <= tmp_22_reg_3201_pp0_iter2_reg;
        tmp_23_reg_3206_pp0_iter2_reg <= tmp_23_reg_3206;
        tmp_23_reg_3206_pp0_iter3_reg <= tmp_23_reg_3206_pp0_iter2_reg;
        tmp_24_reg_3216_pp0_iter2_reg <= tmp_24_reg_3216;
        tmp_25_reg_3226_pp0_iter2_reg <= tmp_25_reg_3226;
        tmp_26_reg_3231_pp0_iter2_reg <= tmp_26_reg_3231;
        tmp_26_reg_3231_pp0_iter3_reg <= tmp_26_reg_3231_pp0_iter2_reg;
        tmp_27_reg_3236_pp0_iter2_reg <= tmp_27_reg_3236;
        tmp_27_reg_3236_pp0_iter3_reg <= tmp_27_reg_3236_pp0_iter2_reg;
        tmp_28_reg_3246_pp0_iter2_reg <= tmp_28_reg_3246;
        tmp_29_reg_3256_pp0_iter2_reg <= tmp_29_reg_3256;
        tmp_30_reg_3266_pp0_iter2_reg <= tmp_30_reg_3266;
        tmp_31_reg_3276_pp0_iter2_reg <= tmp_31_reg_3276;
        tmp_32_reg_3286_pp0_iter2_reg <= tmp_32_reg_3286;
        tmp_33_reg_3296_pp0_iter2_reg <= tmp_33_reg_3296;
        tmp_34_reg_3306_pp0_iter2_reg <= tmp_34_reg_3306;
        tmp_35_reg_3316_pp0_iter2_reg <= tmp_35_reg_3316;
        tmp_36_reg_3326_pp0_iter2_reg <= tmp_36_reg_3326;
        tmp_37_reg_3336_pp0_iter2_reg <= tmp_37_reg_3336;
        tmp_38_reg_3346_pp0_iter2_reg <= tmp_38_reg_3346;
        tmp_39_reg_3356_pp0_iter2_reg <= tmp_39_reg_3356;
        tmp_40_reg_3366_pp0_iter2_reg <= tmp_40_reg_3366;
        tmp_41_reg_3376_pp0_iter2_reg <= tmp_41_reg_3376;
        tmp_42_reg_3386_pp0_iter2_reg <= tmp_42_reg_3386;
        tmp_43_reg_3396_pp0_iter2_reg <= tmp_43_reg_3396;
        tmp_44_reg_3406_pp0_iter2_reg <= tmp_44_reg_3406;
        tmp_45_reg_3416_pp0_iter2_reg <= tmp_45_reg_3416;
        tmp_46_reg_3426_pp0_iter2_reg <= tmp_46_reg_3426;
        tmp_47_reg_3436_pp0_iter2_reg <= tmp_47_reg_3436;
        tmp_48_reg_3446_pp0_iter2_reg <= tmp_48_reg_3446;
        tmp_49_reg_3456_pp0_iter2_reg <= tmp_49_reg_3456;
        tmp_4_reg_3041_pp0_iter2_reg <= tmp_4_reg_3041;
        tmp_4_reg_3041_pp0_iter3_reg <= tmp_4_reg_3041_pp0_iter2_reg;
        tmp_50_reg_3466_pp0_iter2_reg <= tmp_50_reg_3466;
        tmp_51_reg_3476_pp0_iter2_reg <= tmp_51_reg_3476;
        tmp_52_reg_3486_pp0_iter2_reg <= tmp_52_reg_3486;
        tmp_53_reg_3496_pp0_iter2_reg <= tmp_53_reg_3496;
        tmp_54_reg_3506_pp0_iter2_reg <= tmp_54_reg_3506;
        tmp_55_reg_3516_pp0_iter2_reg <= tmp_55_reg_3516;
        tmp_56_reg_3526_pp0_iter2_reg <= tmp_56_reg_3526;
        tmp_57_reg_3536_pp0_iter2_reg <= tmp_57_reg_3536;
        tmp_58_reg_3546_pp0_iter2_reg <= tmp_58_reg_3546;
        tmp_59_reg_3556_pp0_iter2_reg <= tmp_59_reg_3556;
        tmp_60_reg_3566_pp0_iter2_reg <= tmp_60_reg_3566;
        tmp_61_reg_3576_pp0_iter2_reg <= tmp_61_reg_3576;
        tmp_62_reg_3586_pp0_iter2_reg <= tmp_62_reg_3586;
        tmp_63_reg_3596_pp0_iter2_reg <= tmp_63_reg_3596;
        tmp_64_reg_3606_pp0_iter2_reg <= tmp_64_reg_3606;
        tmp_65_reg_3616_pp0_iter2_reg <= tmp_65_reg_3616;
        tmp_66_reg_3626_pp0_iter2_reg <= tmp_66_reg_3626;
        tmp_67_reg_3636_pp0_iter2_reg <= tmp_67_reg_3636;
        tmp_68_reg_3646_pp0_iter2_reg <= tmp_68_reg_3646;
        tmp_69_reg_3656_pp0_iter2_reg <= tmp_69_reg_3656;
        tmp_6_reg_3046_pp0_iter2_reg <= tmp_6_reg_3046;
        tmp_6_reg_3046_pp0_iter3_reg <= tmp_6_reg_3046_pp0_iter2_reg;
        tmp_70_reg_3666_pp0_iter2_reg <= tmp_70_reg_3666;
        tmp_71_reg_3676_pp0_iter2_reg <= tmp_71_reg_3676;
        tmp_72_reg_3686_pp0_iter2_reg <= tmp_72_reg_3686;
        tmp_73_reg_3696_pp0_iter2_reg <= tmp_73_reg_3696;
        tmp_7_reg_3056_pp0_iter2_reg <= tmp_7_reg_3056;
        tmp_8_reg_3066_pp0_iter2_reg <= tmp_8_reg_3066;
        tmp_9_reg_3071_pp0_iter2_reg <= tmp_9_reg_3071;
        tmp_9_reg_3071_pp0_iter3_reg <= tmp_9_reg_3071_pp0_iter2_reg;
        tmp_mid2_v_reg_2936_pp0_iter2_reg <= tmp_mid2_v_reg_2936_pp0_iter1_reg;
        tmp_mid2_v_reg_2936_pp0_iter3_reg <= tmp_mid2_v_reg_2936_pp0_iter2_reg;
        tmp_mid2_v_reg_2936_pp0_iter4_reg <= tmp_mid2_v_reg_2936_pp0_iter3_reg;
        tmp_mid2_v_reg_2936_pp0_iter5_reg <= tmp_mid2_v_reg_2936_pp0_iter4_reg;
        tmp_s_reg_3076_pp0_iter2_reg <= tmp_s_reg_3076;
        tmp_s_reg_3076_pp0_iter3_reg <= tmp_s_reg_3076_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_1492_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ib_mid2_reg_2931 <= ib_mid2_fu_1516_p3;
        tmp_mid2_reg_2942[6 : 0] <= tmp_mid2_fu_1532_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2922_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp13_reg_4501 <= tmp13_fu_2588_p2;
        tmp14_reg_4506 <= tmp14_fu_2592_p2;
        tmp15_reg_4511 <= tmp15_fu_2609_p2;
        tmp23_reg_4516 <= tmp23_fu_2615_p2;
        tmp26_reg_4521 <= tmp26_fu_2623_p2;
        tmp30_reg_4526 <= tmp30_fu_2628_p2;
        tmp31_reg_4531 <= tmp31_fu_2632_p2;
        tmp32_reg_4536 <= tmp32_fu_2649_p2;
        tmp40_reg_4541 <= tmp40_fu_2655_p2;
        tmp41_reg_4546 <= tmp41_fu_2659_p2;
        tmp42_reg_4551 <= tmp42_fu_2676_p2;
        tmp48_reg_4556 <= tmp48_fu_2682_p2;
        tmp49_reg_4561 <= tmp49_fu_2686_p2;
        tmp50_reg_4566 <= tmp50_fu_2703_p2;
        tmp56_reg_4571 <= tmp56_fu_2717_p2;
        tmp59_reg_4576 <= tmp59_fu_2736_p2;
        tmp63_reg_4581 <= tmp63_fu_2770_p2;
        tmp6_reg_4491 <= tmp6_fu_2575_p2;
        tmp9_reg_4496 <= tmp9_fu_2583_p2;
        tmp_5_17_reg_4471 <= tmp_5_17_fu_2559_p2;
        tmp_5_18_reg_4476 <= tmp_5_18_fu_2563_p2;
        tmp_5_1_reg_4456 <= tmp_5_1_fu_2547_p2;
        tmp_5_21_reg_4481 <= tmp_5_21_fu_2567_p2;
        tmp_5_22_reg_4486 <= tmp_5_22_fu_2571_p2;
        tmp_5_4_reg_4461 <= tmp_5_4_fu_2551_p2;
        tmp_5_5_reg_4466 <= tmp_5_5_fu_2555_p2;
        tmp_5_reg_4451 <= tmp_5_fu_2543_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2922_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp19_reg_4591 <= tmp19_fu_2848_p2;
        tmp2_reg_4586 <= tmp2_fu_2809_p2;
        tmp36_reg_4596 <= tmp36_fu_2887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_1492_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid2_v_reg_2936 <= tmp_mid2_v_fu_1524_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_0_ce0 = 1'b1;
    end else begin
        a_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_10_ce0 = 1'b1;
    end else begin
        a_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_11_ce0 = 1'b1;
    end else begin
        a_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_12_ce0 = 1'b1;
    end else begin
        a_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_13_ce0 = 1'b1;
    end else begin
        a_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_14_ce0 = 1'b1;
    end else begin
        a_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_15_ce0 = 1'b1;
    end else begin
        a_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_16_ce0 = 1'b1;
    end else begin
        a_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_17_ce0 = 1'b1;
    end else begin
        a_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_18_ce0 = 1'b1;
    end else begin
        a_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_19_ce0 = 1'b1;
    end else begin
        a_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_1_ce0 = 1'b1;
    end else begin
        a_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_20_ce0 = 1'b1;
    end else begin
        a_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_21_ce0 = 1'b1;
    end else begin
        a_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_22_ce0 = 1'b1;
    end else begin
        a_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_23_ce0 = 1'b1;
    end else begin
        a_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_24_ce0 = 1'b1;
    end else begin
        a_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_25_ce0 = 1'b1;
    end else begin
        a_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_26_ce0 = 1'b1;
    end else begin
        a_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_27_ce0 = 1'b1;
    end else begin
        a_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_28_ce0 = 1'b1;
    end else begin
        a_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_29_ce0 = 1'b1;
    end else begin
        a_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_2_ce0 = 1'b1;
    end else begin
        a_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_30_ce0 = 1'b1;
    end else begin
        a_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_31_ce0 = 1'b1;
    end else begin
        a_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_32_ce0 = 1'b1;
    end else begin
        a_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_33_ce0 = 1'b1;
    end else begin
        a_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_34_ce0 = 1'b1;
    end else begin
        a_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_35_ce0 = 1'b1;
    end else begin
        a_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_36_ce0 = 1'b1;
    end else begin
        a_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_37_ce0 = 1'b1;
    end else begin
        a_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_38_ce0 = 1'b1;
    end else begin
        a_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_39_ce0 = 1'b1;
    end else begin
        a_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_3_ce0 = 1'b1;
    end else begin
        a_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_40_ce0 = 1'b1;
    end else begin
        a_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_41_ce0 = 1'b1;
    end else begin
        a_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_42_ce0 = 1'b1;
    end else begin
        a_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_43_ce0 = 1'b1;
    end else begin
        a_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_44_ce0 = 1'b1;
    end else begin
        a_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_45_ce0 = 1'b1;
    end else begin
        a_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_46_ce0 = 1'b1;
    end else begin
        a_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_47_ce0 = 1'b1;
    end else begin
        a_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_48_ce0 = 1'b1;
    end else begin
        a_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_49_ce0 = 1'b1;
    end else begin
        a_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_4_ce0 = 1'b1;
    end else begin
        a_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_50_ce0 = 1'b1;
    end else begin
        a_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_51_ce0 = 1'b1;
    end else begin
        a_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_52_ce0 = 1'b1;
    end else begin
        a_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_53_ce0 = 1'b1;
    end else begin
        a_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_54_ce0 = 1'b1;
    end else begin
        a_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_55_ce0 = 1'b1;
    end else begin
        a_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_56_ce0 = 1'b1;
    end else begin
        a_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_57_ce0 = 1'b1;
    end else begin
        a_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_58_ce0 = 1'b1;
    end else begin
        a_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_59_ce0 = 1'b1;
    end else begin
        a_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_5_ce0 = 1'b1;
    end else begin
        a_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_60_ce0 = 1'b1;
    end else begin
        a_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_61_ce0 = 1'b1;
    end else begin
        a_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_62_ce0 = 1'b1;
    end else begin
        a_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_63_ce0 = 1'b1;
    end else begin
        a_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_64_ce0 = 1'b1;
    end else begin
        a_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_65_ce0 = 1'b1;
    end else begin
        a_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_66_ce0 = 1'b1;
    end else begin
        a_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_67_ce0 = 1'b1;
    end else begin
        a_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_68_ce0 = 1'b1;
    end else begin
        a_68_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_69_ce0 = 1'b1;
    end else begin
        a_69_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_6_ce0 = 1'b1;
    end else begin
        a_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_70_ce0 = 1'b1;
    end else begin
        a_70_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_71_ce0 = 1'b1;
    end else begin
        a_71_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_72_ce0 = 1'b1;
    end else begin
        a_72_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_7_ce0 = 1'b1;
    end else begin
        a_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_8_ce0 = 1'b1;
    end else begin
        a_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_9_ce0 = 1'b1;
    end else begin
        a_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1492_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2922 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_ia_phi_fu_1474_p4 = tmp_mid2_v_reg_2936;
    end else begin
        ap_phi_mux_ia_phi_fu_1474_p4 = ia_reg_1470;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_ce0 = 1'b1;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2922_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_1492_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((exitcond_flatten_fu_1492_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_address0 = tmp_mid2_reg_2942_pp0_iter1_reg;

assign a_10_address0 = tmp_mid2_reg_2942;

assign a_11_address0 = tmp_mid2_reg_2942;

assign a_12_address0 = tmp_mid2_reg_2942;

assign a_13_address0 = tmp_mid2_reg_2942;

assign a_14_address0 = tmp_mid2_reg_2942;

assign a_15_address0 = tmp_mid2_reg_2942;

assign a_16_address0 = tmp_mid2_reg_2942;

assign a_17_address0 = tmp_mid2_reg_2942;

assign a_18_address0 = tmp_mid2_reg_2942_pp0_iter1_reg;

assign a_19_address0 = tmp_mid2_reg_2942_pp0_iter1_reg;

assign a_1_address0 = tmp_mid2_reg_2942_pp0_iter1_reg;

assign a_20_address0 = tmp_mid2_reg_2942;

assign a_21_address0 = tmp_mid2_reg_2942;

assign a_22_address0 = tmp_mid2_reg_2942_pp0_iter1_reg;

assign a_23_address0 = tmp_mid2_reg_2942_pp0_iter1_reg;

assign a_24_address0 = tmp_mid2_reg_2942;

assign a_25_address0 = tmp_mid2_reg_2942;

assign a_26_address0 = tmp_mid2_reg_2942;

assign a_27_address0 = tmp_mid2_reg_2942;

assign a_28_address0 = tmp_mid2_reg_2942;

assign a_29_address0 = tmp_mid2_reg_2942;

assign a_2_address0 = tmp_mid2_reg_2942;

assign a_30_address0 = tmp_mid2_reg_2942;

assign a_31_address0 = tmp_mid2_reg_2942;

assign a_32_address0 = tmp_mid2_reg_2942;

assign a_33_address0 = tmp_mid2_reg_2942;

assign a_34_address0 = tmp_mid2_reg_2942;

assign a_35_address0 = tmp_mid2_reg_2942;

assign a_36_address0 = tmp_mid2_reg_2942;

assign a_37_address0 = tmp_mid2_reg_2942;

assign a_38_address0 = tmp_mid2_reg_2942;

assign a_39_address0 = tmp_mid2_reg_2942;

assign a_3_address0 = tmp_mid2_reg_2942;

assign a_40_address0 = tmp_mid2_reg_2942;

assign a_41_address0 = tmp_mid2_reg_2942;

assign a_42_address0 = tmp_mid2_reg_2942;

assign a_43_address0 = tmp_mid2_reg_2942;

assign a_44_address0 = tmp_mid2_reg_2942;

assign a_45_address0 = tmp_mid2_reg_2942;

assign a_46_address0 = tmp_mid2_reg_2942;

assign a_47_address0 = tmp_mid2_reg_2942;

assign a_48_address0 = tmp_mid2_reg_2942;

assign a_49_address0 = tmp_mid2_reg_2942;

assign a_4_address0 = tmp_mid2_reg_2942_pp0_iter1_reg;

assign a_50_address0 = tmp_mid2_reg_2942;

assign a_51_address0 = tmp_mid2_reg_2942;

assign a_52_address0 = tmp_mid2_reg_2942;

assign a_53_address0 = tmp_mid2_reg_2942;

assign a_54_address0 = tmp_mid2_reg_2942;

assign a_55_address0 = tmp_mid2_reg_2942;

assign a_56_address0 = tmp_mid2_reg_2942;

assign a_57_address0 = tmp_mid2_reg_2942;

assign a_58_address0 = tmp_mid2_reg_2942;

assign a_59_address0 = tmp_mid2_reg_2942;

assign a_5_address0 = tmp_mid2_reg_2942_pp0_iter1_reg;

assign a_60_address0 = tmp_mid2_reg_2942;

assign a_61_address0 = tmp_mid2_reg_2942;

assign a_62_address0 = tmp_mid2_reg_2942;

assign a_63_address0 = tmp_mid2_reg_2942;

assign a_64_address0 = tmp_mid2_reg_2942;

assign a_65_address0 = tmp_mid2_reg_2942;

assign a_66_address0 = tmp_mid2_reg_2942;

assign a_67_address0 = tmp_mid2_reg_2942;

assign a_68_address0 = tmp_mid2_reg_2942;

assign a_69_address0 = tmp_mid2_reg_2942;

assign a_6_address0 = tmp_mid2_reg_2942;

assign a_70_address0 = tmp_mid2_fu_1532_p1;

assign a_71_address0 = tmp_mid2_fu_1532_p1;

assign a_72_address0 = tmp_mid2_fu_1532_p1;

assign a_7_address0 = tmp_mid2_reg_2942;

assign a_8_address0 = tmp_mid2_reg_2942;

assign a_9_address0 = tmp_mid2_reg_2942;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign b_address0 = tmp_2_fu_1539_p1;

assign exitcond_flatten_fu_1492_p2 = ((indvar_flatten_reg_1459 == 13'd5329) ? 1'b1 : 1'b0);

assign exitcond_fu_1510_p2 = ((ib_reg_1481 == 7'd73) ? 1'b1 : 1'b0);

assign grp_fu_2913_p0 = 14'd73;

assign grp_fu_2913_p1 = grp_fu_2913_p10;

assign grp_fu_2913_p10 = tmp_mid2_v_reg_2936_pp0_iter5_reg;

assign grp_fu_2913_p2 = grp_fu_2913_p20;

assign grp_fu_2913_p20 = ib_mid2_reg_2931_pp0_iter5_reg;

assign ia_1_fu_1504_p2 = (7'd1 + ap_phi_mux_ia_phi_fu_1474_p4);

assign ib_1_fu_1544_p2 = (7'd1 + ib_mid2_fu_1516_p3);

assign ib_mid2_fu_1516_p3 = ((exitcond_fu_1510_p2[0:0] === 1'b1) ? 7'd0 : ib_reg_1481);

assign indvar_flatten_next_fu_1498_p2 = (indvar_flatten_reg_1459 + 13'd1);

assign out_r_address0 = tmp_1_cast_fu_2899_p1;

assign out_r_d0 = (tmp36_reg_4596 + tmp1_fu_2903_p2);

assign tmp10_fu_2579_p2 = (tmp_5_7_reg_4131 + tmp_5_8_reg_4136);

assign tmp11_fu_2804_p2 = (tmp15_reg_4511 + tmp12_fu_2800_p2);

assign tmp12_fu_2800_p2 = (tmp14_reg_4506 + tmp13_reg_4501);

assign tmp13_fu_2588_p2 = (tmp_5_9_reg_4141 + tmp_5_s_reg_4146);

assign tmp14_fu_2592_p2 = (tmp_5_10_reg_4151 + tmp_5_11_reg_4156);

assign tmp15_fu_2609_p2 = (tmp17_fu_2604_p2 + tmp16_fu_2596_p2);

assign tmp16_fu_2596_p2 = (tmp_5_12_reg_4161 + tmp_5_13_reg_4166);

assign tmp17_fu_2604_p2 = (tmp18_fu_2600_p2 + tmp_5_14_reg_4171);

assign tmp18_fu_2600_p2 = (tmp_5_15_reg_4176 + tmp_5_16_reg_4181);

assign tmp19_fu_2848_p2 = (tmp28_fu_2843_p2 + tmp20_fu_2833_p2);

assign tmp1_fu_2903_p2 = (tmp19_reg_4591 + tmp2_reg_4586);

assign tmp20_fu_2833_p2 = (tmp24_fu_2828_p2 + tmp21_fu_2819_p2);

assign tmp21_fu_2819_p2 = (tmp23_reg_4516 + tmp22_fu_2815_p2);

assign tmp22_fu_2815_p2 = (tmp_5_17_reg_4471 + tmp_5_18_reg_4476);

assign tmp23_fu_2615_p2 = (tmp_5_19_reg_4196 + tmp_5_20_reg_4201);

assign tmp24_fu_2828_p2 = (tmp26_reg_4521 + tmp25_fu_2824_p2);

assign tmp25_fu_2824_p2 = (tmp_5_21_reg_4481 + tmp_5_22_reg_4486);

assign tmp26_fu_2623_p2 = (tmp27_fu_2619_p2 + tmp_5_23_reg_4216);

assign tmp27_fu_2619_p2 = (tmp_5_24_reg_4221 + tmp_5_25_reg_4226);

assign tmp28_fu_2843_p2 = (tmp32_reg_4536 + tmp29_fu_2839_p2);

assign tmp29_fu_2839_p2 = (tmp31_reg_4531 + tmp30_reg_4526);

assign tmp2_fu_2809_p2 = (tmp11_fu_2804_p2 + tmp3_fu_2794_p2);

assign tmp30_fu_2628_p2 = (tmp_5_26_reg_4231 + tmp_5_27_reg_4236);

assign tmp31_fu_2632_p2 = (tmp_5_28_reg_4241 + tmp_5_29_reg_4246);

assign tmp32_fu_2649_p2 = (tmp34_fu_2644_p2 + tmp33_fu_2636_p2);

assign tmp33_fu_2636_p2 = (tmp_5_30_reg_4251 + tmp_5_31_reg_4256);

assign tmp34_fu_2644_p2 = (tmp35_fu_2640_p2 + tmp_5_32_reg_4261);

assign tmp35_fu_2640_p2 = (tmp_5_33_reg_4266 + tmp_5_34_reg_4271);

assign tmp36_fu_2887_p2 = (tmp54_fu_2882_p2 + tmp37_fu_2872_p2);

assign tmp37_fu_2872_p2 = (tmp46_fu_2867_p2 + tmp38_fu_2858_p2);

assign tmp38_fu_2858_p2 = (tmp42_reg_4551 + tmp39_fu_2854_p2);

assign tmp39_fu_2854_p2 = (tmp41_reg_4546 + tmp40_reg_4541);

assign tmp3_fu_2794_p2 = (tmp7_fu_2789_p2 + tmp4_fu_2780_p2);

assign tmp40_fu_2655_p2 = (tmp_5_35_reg_4276 + tmp_5_36_reg_4281);

assign tmp41_fu_2659_p2 = (tmp_5_37_reg_4286 + tmp_5_38_reg_4291);

assign tmp42_fu_2676_p2 = (tmp44_fu_2671_p2 + tmp43_fu_2663_p2);

assign tmp43_fu_2663_p2 = (tmp_5_39_reg_4296 + tmp_5_40_reg_4301);

assign tmp44_fu_2671_p2 = (tmp45_fu_2667_p2 + tmp_5_41_reg_4306);

assign tmp45_fu_2667_p2 = (tmp_5_42_reg_4311 + tmp_5_43_reg_4316);

assign tmp46_fu_2867_p2 = (tmp50_reg_4566 + tmp47_fu_2863_p2);

assign tmp47_fu_2863_p2 = (tmp49_reg_4561 + tmp48_reg_4556);

assign tmp48_fu_2682_p2 = (tmp_5_44_reg_4321 + tmp_5_45_reg_4326);

assign tmp49_fu_2686_p2 = (tmp_5_46_reg_4331 + tmp_5_47_reg_4336);

assign tmp4_fu_2780_p2 = (tmp6_reg_4491 + tmp5_fu_2776_p2);

assign tmp50_fu_2703_p2 = (tmp52_fu_2698_p2 + tmp51_fu_2690_p2);

assign tmp51_fu_2690_p2 = (tmp_5_48_reg_4341 + tmp_5_49_reg_4346);

assign tmp52_fu_2698_p2 = (tmp53_fu_2694_p2 + tmp_5_50_reg_4351);

assign tmp53_fu_2694_p2 = (tmp_5_51_reg_4356 + tmp_5_52_reg_4361);

assign tmp54_fu_2882_p2 = (tmp63_reg_4581 + tmp55_fu_2878_p2);

assign tmp55_fu_2878_p2 = (tmp59_reg_4576 + tmp56_reg_4571);

assign tmp56_fu_2717_p2 = (tmp58_fu_2713_p2 + tmp57_fu_2709_p2);

assign tmp57_fu_2709_p2 = (tmp_5_53_reg_4366 + tmp_5_54_reg_4371);

assign tmp58_fu_2713_p2 = (tmp_5_55_reg_4376 + tmp_5_56_reg_4381);

assign tmp59_fu_2736_p2 = (tmp61_fu_2731_p2 + tmp60_fu_2723_p2);

assign tmp5_fu_2776_p2 = (tmp_5_reg_4451 + tmp_5_1_reg_4456);

assign tmp60_fu_2723_p2 = (tmp_5_57_reg_4386 + tmp_5_58_reg_4391);

assign tmp61_fu_2731_p2 = (tmp62_fu_2727_p2 + tmp_5_59_reg_4396);

assign tmp62_fu_2727_p2 = (tmp_5_60_reg_4401 + tmp_5_61_reg_4406);

assign tmp63_fu_2770_p2 = (tmp68_fu_2765_p2 + tmp64_fu_2755_p2);

assign tmp64_fu_2755_p2 = (tmp66_fu_2750_p2 + tmp65_fu_2742_p2);

assign tmp65_fu_2742_p2 = (tmp_5_62_reg_4411 + tmp_5_63_reg_4416);

assign tmp66_fu_2750_p2 = (tmp67_fu_2746_p2 + tmp_5_64_reg_4421);

assign tmp67_fu_2746_p2 = (tmp_5_65_reg_4426 + tmp_5_66_reg_4431);

assign tmp68_fu_2765_p2 = (tmp70_reg_4446 + tmp69_fu_2761_p2);

assign tmp69_fu_2761_p2 = (tmp_5_67_reg_4436 + tmp_5_68_reg_4441);

assign tmp6_fu_2575_p2 = (tmp_5_2_reg_4106 + tmp_5_3_reg_4111);

assign tmp70_fu_2538_p2 = (tmp71_fu_2534_p2 + tmp_5_69_reg_4081);

assign tmp71_fu_2534_p2 = (tmp_5_70_reg_4086 + tmp_5_71_reg_4091);

assign tmp7_fu_2789_p2 = (tmp9_reg_4496 + tmp8_fu_2785_p2);

assign tmp8_fu_2785_p2 = (tmp_5_4_reg_4461 + tmp_5_5_reg_4466);

assign tmp9_fu_2583_p2 = (tmp10_fu_2579_p2 + tmp_5_6_reg_4126);

assign tmp_1_cast_fu_2899_p1 = $signed(grp_fu_2913_p3);

assign tmp_2_fu_1539_p1 = ib_mid2_fu_1516_p3;

assign tmp_4_fu_1550_p1 = b_q0[31:0];

assign tmp_5_10_fu_2314_p2 = ($signed(a_11_load_reg_3786) * $signed(tmp_15_reg_3136_pp0_iter2_reg));

assign tmp_5_11_fu_2318_p2 = ($signed(a_12_load_reg_3791) * $signed(tmp_16_reg_3146_pp0_iter2_reg));

assign tmp_5_12_fu_2322_p2 = ($signed(a_13_load_reg_3796) * $signed(tmp_17_reg_3156_pp0_iter2_reg));

assign tmp_5_13_fu_2326_p2 = ($signed(a_14_load_reg_3801) * $signed(tmp_18_reg_3166_pp0_iter2_reg));

assign tmp_5_14_fu_2330_p2 = ($signed(a_15_load_reg_3806) * $signed(tmp_19_reg_3176_pp0_iter2_reg));

assign tmp_5_15_fu_2334_p2 = ($signed(a_16_load_reg_3811) * $signed(tmp_20_reg_3186_pp0_iter2_reg));

assign tmp_5_16_fu_2338_p2 = ($signed(a_17_load_reg_3816) * $signed(tmp_21_reg_3196_pp0_iter2_reg));

assign tmp_5_17_fu_2559_p2 = ($signed(a_18_load_reg_4186) * $signed(tmp_22_reg_3201_pp0_iter3_reg));

assign tmp_5_18_fu_2563_p2 = ($signed(a_19_load_reg_4191) * $signed(tmp_23_reg_3206_pp0_iter3_reg));

assign tmp_5_19_fu_2342_p2 = ($signed(a_20_load_reg_3831) * $signed(tmp_24_reg_3216_pp0_iter2_reg));

assign tmp_5_1_fu_2547_p2 = ($signed(a_1_load_reg_4101) * $signed(tmp_6_reg_3046_pp0_iter3_reg));

assign tmp_5_20_fu_2346_p2 = ($signed(a_21_load_reg_3836) * $signed(tmp_25_reg_3226_pp0_iter2_reg));

assign tmp_5_21_fu_2567_p2 = ($signed(a_22_load_reg_4206) * $signed(tmp_26_reg_3231_pp0_iter3_reg));

assign tmp_5_22_fu_2571_p2 = ($signed(a_23_load_reg_4211) * $signed(tmp_27_reg_3236_pp0_iter3_reg));

assign tmp_5_23_fu_2350_p2 = ($signed(a_24_load_reg_3851) * $signed(tmp_28_reg_3246_pp0_iter2_reg));

assign tmp_5_24_fu_2354_p2 = ($signed(a_25_load_reg_3856) * $signed(tmp_29_reg_3256_pp0_iter2_reg));

assign tmp_5_25_fu_2358_p2 = ($signed(a_26_load_reg_3861) * $signed(tmp_30_reg_3266_pp0_iter2_reg));

assign tmp_5_26_fu_2362_p2 = ($signed(a_27_load_reg_3866) * $signed(tmp_31_reg_3276_pp0_iter2_reg));

assign tmp_5_27_fu_2366_p2 = ($signed(a_28_load_reg_3871) * $signed(tmp_32_reg_3286_pp0_iter2_reg));

assign tmp_5_28_fu_2370_p2 = ($signed(a_29_load_reg_3876) * $signed(tmp_33_reg_3296_pp0_iter2_reg));

assign tmp_5_29_fu_2374_p2 = ($signed(a_30_load_reg_3881) * $signed(tmp_34_reg_3306_pp0_iter2_reg));

assign tmp_5_2_fu_2286_p2 = ($signed(a_2_load_reg_3741) * $signed(tmp_7_reg_3056_pp0_iter2_reg));

assign tmp_5_30_fu_2378_p2 = ($signed(a_31_load_reg_3886) * $signed(tmp_35_reg_3316_pp0_iter2_reg));

assign tmp_5_31_fu_2382_p2 = ($signed(a_32_load_reg_3891) * $signed(tmp_36_reg_3326_pp0_iter2_reg));

assign tmp_5_32_fu_2386_p2 = ($signed(a_33_load_reg_3896) * $signed(tmp_37_reg_3336_pp0_iter2_reg));

assign tmp_5_33_fu_2390_p2 = ($signed(a_34_load_reg_3901) * $signed(tmp_38_reg_3346_pp0_iter2_reg));

assign tmp_5_34_fu_2394_p2 = ($signed(a_35_load_reg_3906) * $signed(tmp_39_reg_3356_pp0_iter2_reg));

assign tmp_5_35_fu_2398_p2 = ($signed(a_36_load_reg_3911) * $signed(tmp_40_reg_3366_pp0_iter2_reg));

assign tmp_5_36_fu_2402_p2 = ($signed(a_37_load_reg_3916) * $signed(tmp_41_reg_3376_pp0_iter2_reg));

assign tmp_5_37_fu_2406_p2 = ($signed(a_38_load_reg_3921) * $signed(tmp_42_reg_3386_pp0_iter2_reg));

assign tmp_5_38_fu_2410_p2 = ($signed(a_39_load_reg_3926) * $signed(tmp_43_reg_3396_pp0_iter2_reg));

assign tmp_5_39_fu_2414_p2 = ($signed(a_40_load_reg_3931) * $signed(tmp_44_reg_3406_pp0_iter2_reg));

assign tmp_5_3_fu_2290_p2 = ($signed(a_3_load_reg_3746) * $signed(tmp_8_reg_3066_pp0_iter2_reg));

assign tmp_5_40_fu_2418_p2 = ($signed(a_41_load_reg_3936) * $signed(tmp_45_reg_3416_pp0_iter2_reg));

assign tmp_5_41_fu_2422_p2 = ($signed(a_42_load_reg_3941) * $signed(tmp_46_reg_3426_pp0_iter2_reg));

assign tmp_5_42_fu_2426_p2 = ($signed(a_43_load_reg_3946) * $signed(tmp_47_reg_3436_pp0_iter2_reg));

assign tmp_5_43_fu_2430_p2 = ($signed(a_44_load_reg_3951) * $signed(tmp_48_reg_3446_pp0_iter2_reg));

assign tmp_5_44_fu_2434_p2 = ($signed(a_45_load_reg_3956) * $signed(tmp_49_reg_3456_pp0_iter2_reg));

assign tmp_5_45_fu_2438_p2 = ($signed(a_46_load_reg_3961) * $signed(tmp_50_reg_3466_pp0_iter2_reg));

assign tmp_5_46_fu_2442_p2 = ($signed(a_47_load_reg_3966) * $signed(tmp_51_reg_3476_pp0_iter2_reg));

assign tmp_5_47_fu_2446_p2 = ($signed(a_48_load_reg_3971) * $signed(tmp_52_reg_3486_pp0_iter2_reg));

assign tmp_5_48_fu_2450_p2 = ($signed(a_49_load_reg_3976) * $signed(tmp_53_reg_3496_pp0_iter2_reg));

assign tmp_5_49_fu_2454_p2 = ($signed(a_50_load_reg_3981) * $signed(tmp_54_reg_3506_pp0_iter2_reg));

assign tmp_5_4_fu_2551_p2 = ($signed(a_4_load_reg_4116) * $signed(tmp_9_reg_3071_pp0_iter3_reg));

assign tmp_5_50_fu_2458_p2 = ($signed(a_51_load_reg_3986) * $signed(tmp_55_reg_3516_pp0_iter2_reg));

assign tmp_5_51_fu_2462_p2 = ($signed(a_52_load_reg_3991) * $signed(tmp_56_reg_3526_pp0_iter2_reg));

assign tmp_5_52_fu_2466_p2 = ($signed(a_53_load_reg_3996) * $signed(tmp_57_reg_3536_pp0_iter2_reg));

assign tmp_5_53_fu_2470_p2 = ($signed(a_54_load_reg_4001) * $signed(tmp_58_reg_3546_pp0_iter2_reg));

assign tmp_5_54_fu_2474_p2 = ($signed(a_55_load_reg_4006) * $signed(tmp_59_reg_3556_pp0_iter2_reg));

assign tmp_5_55_fu_2478_p2 = ($signed(a_56_load_reg_4011) * $signed(tmp_60_reg_3566_pp0_iter2_reg));

assign tmp_5_56_fu_2482_p2 = ($signed(a_57_load_reg_4016) * $signed(tmp_61_reg_3576_pp0_iter2_reg));

assign tmp_5_57_fu_2486_p2 = ($signed(a_58_load_reg_4021) * $signed(tmp_62_reg_3586_pp0_iter2_reg));

assign tmp_5_58_fu_2490_p2 = ($signed(a_59_load_reg_4026) * $signed(tmp_63_reg_3596_pp0_iter2_reg));

assign tmp_5_59_fu_2494_p2 = ($signed(a_60_load_reg_4031) * $signed(tmp_64_reg_3606_pp0_iter2_reg));

assign tmp_5_5_fu_2555_p2 = ($signed(a_5_load_reg_4121) * $signed(tmp_s_reg_3076_pp0_iter3_reg));

assign tmp_5_60_fu_2498_p2 = ($signed(a_61_load_reg_4036) * $signed(tmp_65_reg_3616_pp0_iter2_reg));

assign tmp_5_61_fu_2502_p2 = ($signed(a_62_load_reg_4041) * $signed(tmp_66_reg_3626_pp0_iter2_reg));

assign tmp_5_62_fu_2506_p2 = ($signed(a_63_load_reg_4046) * $signed(tmp_67_reg_3636_pp0_iter2_reg));

assign tmp_5_63_fu_2510_p2 = ($signed(a_64_load_reg_4051) * $signed(tmp_68_reg_3646_pp0_iter2_reg));

assign tmp_5_64_fu_2514_p2 = ($signed(a_65_load_reg_4056) * $signed(tmp_69_reg_3656_pp0_iter2_reg));

assign tmp_5_65_fu_2518_p2 = ($signed(a_66_load_reg_4061) * $signed(tmp_70_reg_3666_pp0_iter2_reg));

assign tmp_5_66_fu_2522_p2 = ($signed(a_67_load_reg_4066) * $signed(tmp_71_reg_3676_pp0_iter2_reg));

assign tmp_5_67_fu_2526_p2 = ($signed(a_68_load_reg_4071) * $signed(tmp_72_reg_3686_pp0_iter2_reg));

assign tmp_5_68_fu_2530_p2 = ($signed(a_69_load_reg_4076) * $signed(tmp_73_reg_3696_pp0_iter2_reg));

assign tmp_5_69_fu_2274_p2 = ($signed(a_70_load_reg_3701) * $signed(tmp_74_reg_3706));

assign tmp_5_6_fu_2294_p2 = ($signed(a_6_load_reg_3761) * $signed(tmp_10_reg_3086_pp0_iter2_reg));

assign tmp_5_70_fu_2278_p2 = ($signed(a_71_load_reg_3711) * $signed(tmp_75_reg_3716));

assign tmp_5_71_fu_2282_p2 = ($signed(a_72_load_reg_3721) * $signed(tmp_76_reg_3726));

assign tmp_5_7_fu_2298_p2 = ($signed(a_7_load_reg_3766) * $signed(tmp_11_reg_3096_pp0_iter2_reg));

assign tmp_5_8_fu_2302_p2 = ($signed(a_8_load_reg_3771) * $signed(tmp_12_reg_3106_pp0_iter2_reg));

assign tmp_5_9_fu_2306_p2 = ($signed(a_9_load_reg_3776) * $signed(tmp_13_reg_3116_pp0_iter2_reg));

assign tmp_5_fu_2543_p2 = ($signed(a_0_load_reg_4096) * $signed(tmp_4_reg_3041_pp0_iter3_reg));

assign tmp_5_s_fu_2310_p2 = ($signed(a_10_load_reg_3781) * $signed(tmp_14_reg_3126_pp0_iter2_reg));

assign tmp_mid2_fu_1532_p1 = tmp_mid2_v_fu_1524_p3;

assign tmp_mid2_v_fu_1524_p3 = ((exitcond_fu_1510_p2[0:0] === 1'b1) ? ia_1_fu_1504_p2 : ap_phi_mux_ia_phi_fu_1474_p4);

always @ (posedge ap_clk) begin
    tmp_mid2_reg_2942[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_mid2_reg_2942_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //mmult_hw
