// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mmult_hw,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.634000,HLS_SYN_LAT=5336,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=220,HLS_SYN_FF=8112,HLS_SYN_LUT=4164,HLS_VERSION=2018_3}" *)

module mmult_hw (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_0_address0,
        a_0_ce0,
        a_0_q0,
        a_1_address0,
        a_1_ce0,
        a_1_q0,
        a_2_address0,
        a_2_ce0,
        a_2_q0,
        a_3_address0,
        a_3_ce0,
        a_3_q0,
        a_4_address0,
        a_4_ce0,
        a_4_q0,
        a_5_address0,
        a_5_ce0,
        a_5_q0,
        a_6_address0,
        a_6_ce0,
        a_6_q0,
        a_7_address0,
        a_7_ce0,
        a_7_q0,
        a_8_address0,
        a_8_ce0,
        a_8_q0,
        a_9_address0,
        a_9_ce0,
        a_9_q0,
        a_10_address0,
        a_10_ce0,
        a_10_q0,
        a_11_address0,
        a_11_ce0,
        a_11_q0,
        a_12_address0,
        a_12_ce0,
        a_12_q0,
        a_13_address0,
        a_13_ce0,
        a_13_q0,
        a_14_address0,
        a_14_ce0,
        a_14_q0,
        a_15_address0,
        a_15_ce0,
        a_15_q0,
        a_16_address0,
        a_16_ce0,
        a_16_q0,
        a_17_address0,
        a_17_ce0,
        a_17_q0,
        a_18_address0,
        a_18_ce0,
        a_18_q0,
        a_19_address0,
        a_19_ce0,
        a_19_q0,
        a_20_address0,
        a_20_ce0,
        a_20_q0,
        a_21_address0,
        a_21_ce0,
        a_21_q0,
        a_22_address0,
        a_22_ce0,
        a_22_q0,
        a_23_address0,
        a_23_ce0,
        a_23_q0,
        a_24_address0,
        a_24_ce0,
        a_24_q0,
        a_25_address0,
        a_25_ce0,
        a_25_q0,
        a_26_address0,
        a_26_ce0,
        a_26_q0,
        a_27_address0,
        a_27_ce0,
        a_27_q0,
        a_28_address0,
        a_28_ce0,
        a_28_q0,
        a_29_address0,
        a_29_ce0,
        a_29_q0,
        a_30_address0,
        a_30_ce0,
        a_30_q0,
        a_31_address0,
        a_31_ce0,
        a_31_q0,
        a_32_address0,
        a_32_ce0,
        a_32_q0,
        a_33_address0,
        a_33_ce0,
        a_33_q0,
        a_34_address0,
        a_34_ce0,
        a_34_q0,
        a_35_address0,
        a_35_ce0,
        a_35_q0,
        a_36_address0,
        a_36_ce0,
        a_36_q0,
        a_37_address0,
        a_37_ce0,
        a_37_q0,
        a_38_address0,
        a_38_ce0,
        a_38_q0,
        a_39_address0,
        a_39_ce0,
        a_39_q0,
        a_40_address0,
        a_40_ce0,
        a_40_q0,
        a_41_address0,
        a_41_ce0,
        a_41_q0,
        a_42_address0,
        a_42_ce0,
        a_42_q0,
        a_43_address0,
        a_43_ce0,
        a_43_q0,
        a_44_address0,
        a_44_ce0,
        a_44_q0,
        a_45_address0,
        a_45_ce0,
        a_45_q0,
        a_46_address0,
        a_46_ce0,
        a_46_q0,
        a_47_address0,
        a_47_ce0,
        a_47_q0,
        a_48_address0,
        a_48_ce0,
        a_48_q0,
        a_49_address0,
        a_49_ce0,
        a_49_q0,
        a_50_address0,
        a_50_ce0,
        a_50_q0,
        a_51_address0,
        a_51_ce0,
        a_51_q0,
        a_52_address0,
        a_52_ce0,
        a_52_q0,
        a_53_address0,
        a_53_ce0,
        a_53_q0,
        a_54_address0,
        a_54_ce0,
        a_54_q0,
        a_55_address0,
        a_55_ce0,
        a_55_q0,
        a_56_address0,
        a_56_ce0,
        a_56_q0,
        a_57_address0,
        a_57_ce0,
        a_57_q0,
        a_58_address0,
        a_58_ce0,
        a_58_q0,
        a_59_address0,
        a_59_ce0,
        a_59_q0,
        a_60_address0,
        a_60_ce0,
        a_60_q0,
        a_61_address0,
        a_61_ce0,
        a_61_q0,
        a_62_address0,
        a_62_ce0,
        a_62_q0,
        a_63_address0,
        a_63_ce0,
        a_63_q0,
        a_64_address0,
        a_64_ce0,
        a_64_q0,
        a_65_address0,
        a_65_ce0,
        a_65_q0,
        a_66_address0,
        a_66_ce0,
        a_66_q0,
        a_67_address0,
        a_67_ce0,
        a_67_q0,
        a_68_address0,
        a_68_ce0,
        a_68_q0,
        a_69_address0,
        a_69_ce0,
        a_69_q0,
        a_70_address0,
        a_70_ce0,
        a_70_q0,
        a_71_address0,
        a_71_ce0,
        a_71_q0,
        a_72_address0,
        a_72_ce0,
        a_72_q0,
        b_0_address0,
        b_0_ce0,
        b_0_q0,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_2_address0,
        b_2_ce0,
        b_2_q0,
        b_3_address0,
        b_3_ce0,
        b_3_q0,
        b_4_address0,
        b_4_ce0,
        b_4_q0,
        b_5_address0,
        b_5_ce0,
        b_5_q0,
        b_6_address0,
        b_6_ce0,
        b_6_q0,
        b_7_address0,
        b_7_ce0,
        b_7_q0,
        b_8_address0,
        b_8_ce0,
        b_8_q0,
        b_9_address0,
        b_9_ce0,
        b_9_q0,
        b_10_address0,
        b_10_ce0,
        b_10_q0,
        b_11_address0,
        b_11_ce0,
        b_11_q0,
        b_12_address0,
        b_12_ce0,
        b_12_q0,
        b_13_address0,
        b_13_ce0,
        b_13_q0,
        b_14_address0,
        b_14_ce0,
        b_14_q0,
        b_15_address0,
        b_15_ce0,
        b_15_q0,
        b_16_address0,
        b_16_ce0,
        b_16_q0,
        b_17_address0,
        b_17_ce0,
        b_17_q0,
        b_18_address0,
        b_18_ce0,
        b_18_q0,
        b_19_address0,
        b_19_ce0,
        b_19_q0,
        b_20_address0,
        b_20_ce0,
        b_20_q0,
        b_21_address0,
        b_21_ce0,
        b_21_q0,
        b_22_address0,
        b_22_ce0,
        b_22_q0,
        b_23_address0,
        b_23_ce0,
        b_23_q0,
        b_24_address0,
        b_24_ce0,
        b_24_q0,
        b_25_address0,
        b_25_ce0,
        b_25_q0,
        b_26_address0,
        b_26_ce0,
        b_26_q0,
        b_27_address0,
        b_27_ce0,
        b_27_q0,
        b_28_address0,
        b_28_ce0,
        b_28_q0,
        b_29_address0,
        b_29_ce0,
        b_29_q0,
        b_30_address0,
        b_30_ce0,
        b_30_q0,
        b_31_address0,
        b_31_ce0,
        b_31_q0,
        b_32_address0,
        b_32_ce0,
        b_32_q0,
        b_33_address0,
        b_33_ce0,
        b_33_q0,
        b_34_address0,
        b_34_ce0,
        b_34_q0,
        b_35_address0,
        b_35_ce0,
        b_35_q0,
        b_36_address0,
        b_36_ce0,
        b_36_q0,
        b_37_address0,
        b_37_ce0,
        b_37_q0,
        b_38_address0,
        b_38_ce0,
        b_38_q0,
        b_39_address0,
        b_39_ce0,
        b_39_q0,
        b_40_address0,
        b_40_ce0,
        b_40_q0,
        b_41_address0,
        b_41_ce0,
        b_41_q0,
        b_42_address0,
        b_42_ce0,
        b_42_q0,
        b_43_address0,
        b_43_ce0,
        b_43_q0,
        b_44_address0,
        b_44_ce0,
        b_44_q0,
        b_45_address0,
        b_45_ce0,
        b_45_q0,
        b_46_address0,
        b_46_ce0,
        b_46_q0,
        b_47_address0,
        b_47_ce0,
        b_47_q0,
        b_48_address0,
        b_48_ce0,
        b_48_q0,
        b_49_address0,
        b_49_ce0,
        b_49_q0,
        b_50_address0,
        b_50_ce0,
        b_50_q0,
        b_51_address0,
        b_51_ce0,
        b_51_q0,
        b_52_address0,
        b_52_ce0,
        b_52_q0,
        b_53_address0,
        b_53_ce0,
        b_53_q0,
        b_54_address0,
        b_54_ce0,
        b_54_q0,
        b_55_address0,
        b_55_ce0,
        b_55_q0,
        b_56_address0,
        b_56_ce0,
        b_56_q0,
        b_57_address0,
        b_57_ce0,
        b_57_q0,
        b_58_address0,
        b_58_ce0,
        b_58_q0,
        b_59_address0,
        b_59_ce0,
        b_59_q0,
        b_60_address0,
        b_60_ce0,
        b_60_q0,
        b_61_address0,
        b_61_ce0,
        b_61_q0,
        b_62_address0,
        b_62_ce0,
        b_62_q0,
        b_63_address0,
        b_63_ce0,
        b_63_q0,
        b_64_address0,
        b_64_ce0,
        b_64_q0,
        b_65_address0,
        b_65_ce0,
        b_65_q0,
        b_66_address0,
        b_66_ce0,
        b_66_q0,
        b_67_address0,
        b_67_ce0,
        b_67_q0,
        b_68_address0,
        b_68_ce0,
        b_68_q0,
        b_69_address0,
        b_69_ce0,
        b_69_q0,
        b_70_address0,
        b_70_ce0,
        b_70_q0,
        b_71_address0,
        b_71_ce0,
        b_71_q0,
        b_72_address0,
        b_72_ce0,
        b_72_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state9 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] a_0_address0;
output   a_0_ce0;
input  [31:0] a_0_q0;
output  [6:0] a_1_address0;
output   a_1_ce0;
input  [31:0] a_1_q0;
output  [6:0] a_2_address0;
output   a_2_ce0;
input  [31:0] a_2_q0;
output  [6:0] a_3_address0;
output   a_3_ce0;
input  [31:0] a_3_q0;
output  [6:0] a_4_address0;
output   a_4_ce0;
input  [31:0] a_4_q0;
output  [6:0] a_5_address0;
output   a_5_ce0;
input  [31:0] a_5_q0;
output  [6:0] a_6_address0;
output   a_6_ce0;
input  [31:0] a_6_q0;
output  [6:0] a_7_address0;
output   a_7_ce0;
input  [31:0] a_7_q0;
output  [6:0] a_8_address0;
output   a_8_ce0;
input  [31:0] a_8_q0;
output  [6:0] a_9_address0;
output   a_9_ce0;
input  [31:0] a_9_q0;
output  [6:0] a_10_address0;
output   a_10_ce0;
input  [31:0] a_10_q0;
output  [6:0] a_11_address0;
output   a_11_ce0;
input  [31:0] a_11_q0;
output  [6:0] a_12_address0;
output   a_12_ce0;
input  [31:0] a_12_q0;
output  [6:0] a_13_address0;
output   a_13_ce0;
input  [31:0] a_13_q0;
output  [6:0] a_14_address0;
output   a_14_ce0;
input  [31:0] a_14_q0;
output  [6:0] a_15_address0;
output   a_15_ce0;
input  [31:0] a_15_q0;
output  [6:0] a_16_address0;
output   a_16_ce0;
input  [31:0] a_16_q0;
output  [6:0] a_17_address0;
output   a_17_ce0;
input  [31:0] a_17_q0;
output  [6:0] a_18_address0;
output   a_18_ce0;
input  [31:0] a_18_q0;
output  [6:0] a_19_address0;
output   a_19_ce0;
input  [31:0] a_19_q0;
output  [6:0] a_20_address0;
output   a_20_ce0;
input  [31:0] a_20_q0;
output  [6:0] a_21_address0;
output   a_21_ce0;
input  [31:0] a_21_q0;
output  [6:0] a_22_address0;
output   a_22_ce0;
input  [31:0] a_22_q0;
output  [6:0] a_23_address0;
output   a_23_ce0;
input  [31:0] a_23_q0;
output  [6:0] a_24_address0;
output   a_24_ce0;
input  [31:0] a_24_q0;
output  [6:0] a_25_address0;
output   a_25_ce0;
input  [31:0] a_25_q0;
output  [6:0] a_26_address0;
output   a_26_ce0;
input  [31:0] a_26_q0;
output  [6:0] a_27_address0;
output   a_27_ce0;
input  [31:0] a_27_q0;
output  [6:0] a_28_address0;
output   a_28_ce0;
input  [31:0] a_28_q0;
output  [6:0] a_29_address0;
output   a_29_ce0;
input  [31:0] a_29_q0;
output  [6:0] a_30_address0;
output   a_30_ce0;
input  [31:0] a_30_q0;
output  [6:0] a_31_address0;
output   a_31_ce0;
input  [31:0] a_31_q0;
output  [6:0] a_32_address0;
output   a_32_ce0;
input  [31:0] a_32_q0;
output  [6:0] a_33_address0;
output   a_33_ce0;
input  [31:0] a_33_q0;
output  [6:0] a_34_address0;
output   a_34_ce0;
input  [31:0] a_34_q0;
output  [6:0] a_35_address0;
output   a_35_ce0;
input  [31:0] a_35_q0;
output  [6:0] a_36_address0;
output   a_36_ce0;
input  [31:0] a_36_q0;
output  [6:0] a_37_address0;
output   a_37_ce0;
input  [31:0] a_37_q0;
output  [6:0] a_38_address0;
output   a_38_ce0;
input  [31:0] a_38_q0;
output  [6:0] a_39_address0;
output   a_39_ce0;
input  [31:0] a_39_q0;
output  [6:0] a_40_address0;
output   a_40_ce0;
input  [31:0] a_40_q0;
output  [6:0] a_41_address0;
output   a_41_ce0;
input  [31:0] a_41_q0;
output  [6:0] a_42_address0;
output   a_42_ce0;
input  [31:0] a_42_q0;
output  [6:0] a_43_address0;
output   a_43_ce0;
input  [31:0] a_43_q0;
output  [6:0] a_44_address0;
output   a_44_ce0;
input  [31:0] a_44_q0;
output  [6:0] a_45_address0;
output   a_45_ce0;
input  [31:0] a_45_q0;
output  [6:0] a_46_address0;
output   a_46_ce0;
input  [31:0] a_46_q0;
output  [6:0] a_47_address0;
output   a_47_ce0;
input  [31:0] a_47_q0;
output  [6:0] a_48_address0;
output   a_48_ce0;
input  [31:0] a_48_q0;
output  [6:0] a_49_address0;
output   a_49_ce0;
input  [31:0] a_49_q0;
output  [6:0] a_50_address0;
output   a_50_ce0;
input  [31:0] a_50_q0;
output  [6:0] a_51_address0;
output   a_51_ce0;
input  [31:0] a_51_q0;
output  [6:0] a_52_address0;
output   a_52_ce0;
input  [31:0] a_52_q0;
output  [6:0] a_53_address0;
output   a_53_ce0;
input  [31:0] a_53_q0;
output  [6:0] a_54_address0;
output   a_54_ce0;
input  [31:0] a_54_q0;
output  [6:0] a_55_address0;
output   a_55_ce0;
input  [31:0] a_55_q0;
output  [6:0] a_56_address0;
output   a_56_ce0;
input  [31:0] a_56_q0;
output  [6:0] a_57_address0;
output   a_57_ce0;
input  [31:0] a_57_q0;
output  [6:0] a_58_address0;
output   a_58_ce0;
input  [31:0] a_58_q0;
output  [6:0] a_59_address0;
output   a_59_ce0;
input  [31:0] a_59_q0;
output  [6:0] a_60_address0;
output   a_60_ce0;
input  [31:0] a_60_q0;
output  [6:0] a_61_address0;
output   a_61_ce0;
input  [31:0] a_61_q0;
output  [6:0] a_62_address0;
output   a_62_ce0;
input  [31:0] a_62_q0;
output  [6:0] a_63_address0;
output   a_63_ce0;
input  [31:0] a_63_q0;
output  [6:0] a_64_address0;
output   a_64_ce0;
input  [31:0] a_64_q0;
output  [6:0] a_65_address0;
output   a_65_ce0;
input  [31:0] a_65_q0;
output  [6:0] a_66_address0;
output   a_66_ce0;
input  [31:0] a_66_q0;
output  [6:0] a_67_address0;
output   a_67_ce0;
input  [31:0] a_67_q0;
output  [6:0] a_68_address0;
output   a_68_ce0;
input  [31:0] a_68_q0;
output  [6:0] a_69_address0;
output   a_69_ce0;
input  [31:0] a_69_q0;
output  [6:0] a_70_address0;
output   a_70_ce0;
input  [31:0] a_70_q0;
output  [6:0] a_71_address0;
output   a_71_ce0;
input  [31:0] a_71_q0;
output  [6:0] a_72_address0;
output   a_72_ce0;
input  [31:0] a_72_q0;
output  [6:0] b_0_address0;
output   b_0_ce0;
input  [31:0] b_0_q0;
output  [6:0] b_1_address0;
output   b_1_ce0;
input  [31:0] b_1_q0;
output  [6:0] b_2_address0;
output   b_2_ce0;
input  [31:0] b_2_q0;
output  [6:0] b_3_address0;
output   b_3_ce0;
input  [31:0] b_3_q0;
output  [6:0] b_4_address0;
output   b_4_ce0;
input  [31:0] b_4_q0;
output  [6:0] b_5_address0;
output   b_5_ce0;
input  [31:0] b_5_q0;
output  [6:0] b_6_address0;
output   b_6_ce0;
input  [31:0] b_6_q0;
output  [6:0] b_7_address0;
output   b_7_ce0;
input  [31:0] b_7_q0;
output  [6:0] b_8_address0;
output   b_8_ce0;
input  [31:0] b_8_q0;
output  [6:0] b_9_address0;
output   b_9_ce0;
input  [31:0] b_9_q0;
output  [6:0] b_10_address0;
output   b_10_ce0;
input  [31:0] b_10_q0;
output  [6:0] b_11_address0;
output   b_11_ce0;
input  [31:0] b_11_q0;
output  [6:0] b_12_address0;
output   b_12_ce0;
input  [31:0] b_12_q0;
output  [6:0] b_13_address0;
output   b_13_ce0;
input  [31:0] b_13_q0;
output  [6:0] b_14_address0;
output   b_14_ce0;
input  [31:0] b_14_q0;
output  [6:0] b_15_address0;
output   b_15_ce0;
input  [31:0] b_15_q0;
output  [6:0] b_16_address0;
output   b_16_ce0;
input  [31:0] b_16_q0;
output  [6:0] b_17_address0;
output   b_17_ce0;
input  [31:0] b_17_q0;
output  [6:0] b_18_address0;
output   b_18_ce0;
input  [31:0] b_18_q0;
output  [6:0] b_19_address0;
output   b_19_ce0;
input  [31:0] b_19_q0;
output  [6:0] b_20_address0;
output   b_20_ce0;
input  [31:0] b_20_q0;
output  [6:0] b_21_address0;
output   b_21_ce0;
input  [31:0] b_21_q0;
output  [6:0] b_22_address0;
output   b_22_ce0;
input  [31:0] b_22_q0;
output  [6:0] b_23_address0;
output   b_23_ce0;
input  [31:0] b_23_q0;
output  [6:0] b_24_address0;
output   b_24_ce0;
input  [31:0] b_24_q0;
output  [6:0] b_25_address0;
output   b_25_ce0;
input  [31:0] b_25_q0;
output  [6:0] b_26_address0;
output   b_26_ce0;
input  [31:0] b_26_q0;
output  [6:0] b_27_address0;
output   b_27_ce0;
input  [31:0] b_27_q0;
output  [6:0] b_28_address0;
output   b_28_ce0;
input  [31:0] b_28_q0;
output  [6:0] b_29_address0;
output   b_29_ce0;
input  [31:0] b_29_q0;
output  [6:0] b_30_address0;
output   b_30_ce0;
input  [31:0] b_30_q0;
output  [6:0] b_31_address0;
output   b_31_ce0;
input  [31:0] b_31_q0;
output  [6:0] b_32_address0;
output   b_32_ce0;
input  [31:0] b_32_q0;
output  [6:0] b_33_address0;
output   b_33_ce0;
input  [31:0] b_33_q0;
output  [6:0] b_34_address0;
output   b_34_ce0;
input  [31:0] b_34_q0;
output  [6:0] b_35_address0;
output   b_35_ce0;
input  [31:0] b_35_q0;
output  [6:0] b_36_address0;
output   b_36_ce0;
input  [31:0] b_36_q0;
output  [6:0] b_37_address0;
output   b_37_ce0;
input  [31:0] b_37_q0;
output  [6:0] b_38_address0;
output   b_38_ce0;
input  [31:0] b_38_q0;
output  [6:0] b_39_address0;
output   b_39_ce0;
input  [31:0] b_39_q0;
output  [6:0] b_40_address0;
output   b_40_ce0;
input  [31:0] b_40_q0;
output  [6:0] b_41_address0;
output   b_41_ce0;
input  [31:0] b_41_q0;
output  [6:0] b_42_address0;
output   b_42_ce0;
input  [31:0] b_42_q0;
output  [6:0] b_43_address0;
output   b_43_ce0;
input  [31:0] b_43_q0;
output  [6:0] b_44_address0;
output   b_44_ce0;
input  [31:0] b_44_q0;
output  [6:0] b_45_address0;
output   b_45_ce0;
input  [31:0] b_45_q0;
output  [6:0] b_46_address0;
output   b_46_ce0;
input  [31:0] b_46_q0;
output  [6:0] b_47_address0;
output   b_47_ce0;
input  [31:0] b_47_q0;
output  [6:0] b_48_address0;
output   b_48_ce0;
input  [31:0] b_48_q0;
output  [6:0] b_49_address0;
output   b_49_ce0;
input  [31:0] b_49_q0;
output  [6:0] b_50_address0;
output   b_50_ce0;
input  [31:0] b_50_q0;
output  [6:0] b_51_address0;
output   b_51_ce0;
input  [31:0] b_51_q0;
output  [6:0] b_52_address0;
output   b_52_ce0;
input  [31:0] b_52_q0;
output  [6:0] b_53_address0;
output   b_53_ce0;
input  [31:0] b_53_q0;
output  [6:0] b_54_address0;
output   b_54_ce0;
input  [31:0] b_54_q0;
output  [6:0] b_55_address0;
output   b_55_ce0;
input  [31:0] b_55_q0;
output  [6:0] b_56_address0;
output   b_56_ce0;
input  [31:0] b_56_q0;
output  [6:0] b_57_address0;
output   b_57_ce0;
input  [31:0] b_57_q0;
output  [6:0] b_58_address0;
output   b_58_ce0;
input  [31:0] b_58_q0;
output  [6:0] b_59_address0;
output   b_59_ce0;
input  [31:0] b_59_q0;
output  [6:0] b_60_address0;
output   b_60_ce0;
input  [31:0] b_60_q0;
output  [6:0] b_61_address0;
output   b_61_ce0;
input  [31:0] b_61_q0;
output  [6:0] b_62_address0;
output   b_62_ce0;
input  [31:0] b_62_q0;
output  [6:0] b_63_address0;
output   b_63_ce0;
input  [31:0] b_63_q0;
output  [6:0] b_64_address0;
output   b_64_ce0;
input  [31:0] b_64_q0;
output  [6:0] b_65_address0;
output   b_65_ce0;
input  [31:0] b_65_q0;
output  [6:0] b_66_address0;
output   b_66_ce0;
input  [31:0] b_66_q0;
output  [6:0] b_67_address0;
output   b_67_ce0;
input  [31:0] b_67_q0;
output  [6:0] b_68_address0;
output   b_68_ce0;
input  [31:0] b_68_q0;
output  [6:0] b_69_address0;
output   b_69_ce0;
input  [31:0] b_69_q0;
output  [6:0] b_70_address0;
output   b_70_ce0;
input  [31:0] b_70_q0;
output  [6:0] b_71_address0;
output   b_71_ce0;
input  [31:0] b_71_q0;
output  [6:0] b_72_address0;
output   b_72_ce0;
input  [31:0] b_72_q0;
output  [12:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg a_0_ce0;
reg a_1_ce0;
reg a_2_ce0;
reg a_3_ce0;
reg a_4_ce0;
reg a_5_ce0;
reg a_6_ce0;
reg a_7_ce0;
reg a_8_ce0;
reg a_9_ce0;
reg a_10_ce0;
reg a_11_ce0;
reg a_12_ce0;
reg a_13_ce0;
reg a_14_ce0;
reg a_15_ce0;
reg a_16_ce0;
reg a_17_ce0;
reg a_18_ce0;
reg a_19_ce0;
reg a_20_ce0;
reg a_21_ce0;
reg a_22_ce0;
reg a_23_ce0;
reg a_24_ce0;
reg a_25_ce0;
reg a_26_ce0;
reg a_27_ce0;
reg a_28_ce0;
reg a_29_ce0;
reg a_30_ce0;
reg a_31_ce0;
reg a_32_ce0;
reg a_33_ce0;
reg a_34_ce0;
reg a_35_ce0;
reg a_36_ce0;
reg a_37_ce0;
reg a_38_ce0;
reg a_39_ce0;
reg a_40_ce0;
reg a_41_ce0;
reg a_42_ce0;
reg a_43_ce0;
reg a_44_ce0;
reg a_45_ce0;
reg a_46_ce0;
reg a_47_ce0;
reg a_48_ce0;
reg a_49_ce0;
reg a_50_ce0;
reg a_51_ce0;
reg a_52_ce0;
reg a_53_ce0;
reg a_54_ce0;
reg a_55_ce0;
reg a_56_ce0;
reg a_57_ce0;
reg a_58_ce0;
reg a_59_ce0;
reg a_60_ce0;
reg a_61_ce0;
reg a_62_ce0;
reg a_63_ce0;
reg a_64_ce0;
reg a_65_ce0;
reg a_66_ce0;
reg a_67_ce0;
reg a_68_ce0;
reg a_69_ce0;
reg a_70_ce0;
reg a_71_ce0;
reg a_72_ce0;
reg b_0_ce0;
reg b_1_ce0;
reg b_2_ce0;
reg b_3_ce0;
reg b_4_ce0;
reg b_5_ce0;
reg b_6_ce0;
reg b_7_ce0;
reg b_8_ce0;
reg b_9_ce0;
reg b_10_ce0;
reg b_11_ce0;
reg b_12_ce0;
reg b_13_ce0;
reg b_14_ce0;
reg b_15_ce0;
reg b_16_ce0;
reg b_17_ce0;
reg b_18_ce0;
reg b_19_ce0;
reg b_20_ce0;
reg b_21_ce0;
reg b_22_ce0;
reg b_23_ce0;
reg b_24_ce0;
reg b_25_ce0;
reg b_26_ce0;
reg b_27_ce0;
reg b_28_ce0;
reg b_29_ce0;
reg b_30_ce0;
reg b_31_ce0;
reg b_32_ce0;
reg b_33_ce0;
reg b_34_ce0;
reg b_35_ce0;
reg b_36_ce0;
reg b_37_ce0;
reg b_38_ce0;
reg b_39_ce0;
reg b_40_ce0;
reg b_41_ce0;
reg b_42_ce0;
reg b_43_ce0;
reg b_44_ce0;
reg b_45_ce0;
reg b_46_ce0;
reg b_47_ce0;
reg b_48_ce0;
reg b_49_ce0;
reg b_50_ce0;
reg b_51_ce0;
reg b_52_ce0;
reg b_53_ce0;
reg b_54_ce0;
reg b_55_ce0;
reg b_56_ce0;
reg b_57_ce0;
reg b_58_ce0;
reg b_59_ce0;
reg b_60_ce0;
reg b_61_ce0;
reg b_62_ce0;
reg b_63_ce0;
reg b_64_ce0;
reg b_65_ce0;
reg b_66_ce0;
reg b_67_ce0;
reg b_68_ce0;
reg b_69_ce0;
reg b_70_ce0;
reg b_71_ce0;
reg b_72_ce0;
reg out_r_ce0;
reg out_r_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] indvar_flatten_reg_2249;
reg   [6:0] ia_reg_2260;
reg   [6:0] ib_reg_2271;
wire   [0:0] exitcond_flatten_fu_2282_p2;
reg   [0:0] exitcond_flatten_reg_2985;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_flatten_reg_2985_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_2985_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_2985_pp0_iter3_reg;
reg   [0:0] exitcond_flatten_reg_2985_pp0_iter4_reg;
reg   [0:0] exitcond_flatten_reg_2985_pp0_iter5_reg;
wire   [12:0] indvar_flatten_next_fu_2288_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [6:0] ib_mid2_fu_2306_p3;
reg   [6:0] ib_mid2_reg_2994;
reg   [6:0] ib_mid2_reg_2994_pp0_iter1_reg;
reg   [6:0] ib_mid2_reg_2994_pp0_iter2_reg;
reg   [6:0] ib_mid2_reg_2994_pp0_iter3_reg;
reg   [6:0] ib_mid2_reg_2994_pp0_iter4_reg;
reg   [6:0] ib_mid2_reg_2994_pp0_iter5_reg;
wire   [6:0] tmp_mid2_v_fu_2314_p3;
reg   [6:0] tmp_mid2_v_reg_2999;
reg   [6:0] tmp_mid2_v_reg_2999_pp0_iter1_reg;
reg   [6:0] tmp_mid2_v_reg_2999_pp0_iter2_reg;
reg   [6:0] tmp_mid2_v_reg_2999_pp0_iter3_reg;
reg   [6:0] tmp_mid2_v_reg_2999_pp0_iter4_reg;
reg   [6:0] tmp_mid2_v_reg_2999_pp0_iter5_reg;
wire   [63:0] tmp_mid2_fu_2322_p1;
reg   [63:0] tmp_mid2_reg_3005;
reg   [63:0] tmp_mid2_reg_3005_pp0_iter1_reg;
wire   [63:0] tmp_2_fu_2328_p1;
reg   [63:0] tmp_2_reg_3080;
reg   [63:0] tmp_2_reg_3080_pp0_iter1_reg;
wire   [6:0] ib_1_fu_2334_p2;
reg  signed [31:0] a_0_load_reg_3180;
reg  signed [31:0] b_0_load_reg_3185;
reg  signed [31:0] a_1_load_reg_3190;
reg  signed [31:0] b_1_load_reg_3195;
wire   [31:0] tmp_5_fu_2340_p2;
reg   [31:0] tmp_5_reg_3860;
wire   [31:0] tmp_5_1_fu_2344_p2;
reg   [31:0] tmp_5_1_reg_3865;
reg  signed [31:0] a_2_load_reg_3870;
reg  signed [31:0] b_2_load_reg_3875;
reg  signed [31:0] a_3_load_reg_3880;
reg  signed [31:0] b_3_load_reg_3885;
reg  signed [31:0] a_4_load_reg_3890;
reg  signed [31:0] b_4_load_reg_3895;
reg  signed [31:0] a_5_load_reg_3900;
reg  signed [31:0] b_5_load_reg_3905;
reg  signed [31:0] a_6_load_reg_3910;
reg  signed [31:0] b_6_load_reg_3915;
reg  signed [31:0] a_7_load_reg_3920;
reg  signed [31:0] b_7_load_reg_3925;
reg  signed [31:0] a_8_load_reg_3930;
reg  signed [31:0] b_8_load_reg_3935;
reg  signed [31:0] a_9_load_reg_3940;
reg  signed [31:0] b_9_load_reg_3945;
reg  signed [31:0] a_10_load_reg_3950;
reg  signed [31:0] b_10_load_reg_3955;
reg  signed [31:0] a_11_load_reg_3960;
reg  signed [31:0] b_11_load_reg_3965;
reg  signed [31:0] a_12_load_reg_3970;
reg  signed [31:0] b_12_load_reg_3975;
reg  signed [31:0] a_13_load_reg_3980;
reg  signed [31:0] b_13_load_reg_3985;
reg  signed [31:0] a_14_load_reg_3990;
reg  signed [31:0] b_14_load_reg_3995;
reg  signed [31:0] a_15_load_reg_4000;
reg  signed [31:0] b_15_load_reg_4005;
reg  signed [31:0] a_16_load_reg_4010;
reg  signed [31:0] b_16_load_reg_4015;
reg  signed [31:0] a_17_load_reg_4020;
reg  signed [31:0] b_17_load_reg_4025;
reg  signed [31:0] a_18_load_reg_4030;
reg  signed [31:0] b_18_load_reg_4035;
reg  signed [31:0] a_19_load_reg_4040;
reg  signed [31:0] b_19_load_reg_4045;
reg  signed [31:0] a_20_load_reg_4050;
reg  signed [31:0] b_20_load_reg_4055;
reg  signed [31:0] a_21_load_reg_4060;
reg  signed [31:0] b_21_load_reg_4065;
reg  signed [31:0] a_22_load_reg_4070;
reg  signed [31:0] b_22_load_reg_4075;
reg  signed [31:0] a_23_load_reg_4080;
reg  signed [31:0] b_23_load_reg_4085;
reg  signed [31:0] a_24_load_reg_4090;
reg  signed [31:0] b_24_load_reg_4095;
reg  signed [31:0] a_25_load_reg_4100;
reg  signed [31:0] b_25_load_reg_4105;
reg  signed [31:0] a_26_load_reg_4110;
reg  signed [31:0] b_26_load_reg_4115;
reg  signed [31:0] a_27_load_reg_4120;
reg  signed [31:0] b_27_load_reg_4125;
reg  signed [31:0] a_28_load_reg_4130;
reg  signed [31:0] b_28_load_reg_4135;
reg  signed [31:0] a_29_load_reg_4140;
reg  signed [31:0] b_29_load_reg_4145;
reg  signed [31:0] a_30_load_reg_4150;
reg  signed [31:0] b_30_load_reg_4155;
reg  signed [31:0] a_31_load_reg_4160;
reg  signed [31:0] b_31_load_reg_4165;
reg  signed [31:0] a_32_load_reg_4170;
reg  signed [31:0] b_32_load_reg_4175;
reg  signed [31:0] a_33_load_reg_4180;
reg  signed [31:0] b_33_load_reg_4185;
reg  signed [31:0] a_34_load_reg_4190;
reg  signed [31:0] b_34_load_reg_4195;
reg  signed [31:0] a_35_load_reg_4200;
reg  signed [31:0] b_35_load_reg_4205;
reg  signed [31:0] a_36_load_reg_4210;
reg  signed [31:0] b_36_load_reg_4215;
reg  signed [31:0] a_37_load_reg_4220;
reg  signed [31:0] b_37_load_reg_4225;
reg  signed [31:0] a_38_load_reg_4230;
reg  signed [31:0] b_38_load_reg_4235;
reg  signed [31:0] a_39_load_reg_4240;
reg  signed [31:0] b_39_load_reg_4245;
reg  signed [31:0] a_40_load_reg_4250;
reg  signed [31:0] b_40_load_reg_4255;
reg  signed [31:0] a_41_load_reg_4260;
reg  signed [31:0] b_41_load_reg_4265;
reg  signed [31:0] a_42_load_reg_4270;
reg  signed [31:0] b_42_load_reg_4275;
reg  signed [31:0] a_43_load_reg_4280;
reg  signed [31:0] b_43_load_reg_4285;
reg  signed [31:0] a_44_load_reg_4290;
reg  signed [31:0] b_44_load_reg_4295;
reg  signed [31:0] a_45_load_reg_4300;
reg  signed [31:0] b_45_load_reg_4305;
reg  signed [31:0] a_46_load_reg_4310;
reg  signed [31:0] b_46_load_reg_4315;
reg  signed [31:0] a_49_load_reg_4340;
reg  signed [31:0] b_49_load_reg_4345;
reg  signed [31:0] a_50_load_reg_4350;
reg  signed [31:0] b_50_load_reg_4355;
reg  signed [31:0] a_52_load_reg_4370;
reg  signed [31:0] b_52_load_reg_4375;
reg  signed [31:0] a_53_load_reg_4380;
reg  signed [31:0] b_53_load_reg_4385;
reg  signed [31:0] a_54_load_reg_4390;
reg  signed [31:0] b_54_load_reg_4395;
reg  signed [31:0] a_55_load_reg_4400;
reg  signed [31:0] b_55_load_reg_4405;
reg  signed [31:0] a_56_load_reg_4410;
reg  signed [31:0] b_56_load_reg_4415;
reg  signed [31:0] a_57_load_reg_4420;
reg  signed [31:0] b_57_load_reg_4425;
reg  signed [31:0] a_58_load_reg_4430;
reg  signed [31:0] b_58_load_reg_4435;
reg  signed [31:0] a_59_load_reg_4440;
reg  signed [31:0] b_59_load_reg_4445;
reg  signed [31:0] a_60_load_reg_4450;
reg  signed [31:0] b_60_load_reg_4455;
reg  signed [31:0] a_61_load_reg_4460;
reg  signed [31:0] b_61_load_reg_4465;
reg  signed [31:0] a_62_load_reg_4470;
reg  signed [31:0] b_62_load_reg_4475;
reg  signed [31:0] a_63_load_reg_4480;
reg  signed [31:0] b_63_load_reg_4485;
reg  signed [31:0] a_64_load_reg_4490;
reg  signed [31:0] b_64_load_reg_4495;
reg  signed [31:0] a_66_load_reg_4510;
reg  signed [31:0] b_66_load_reg_4515;
reg  signed [31:0] a_67_load_reg_4520;
reg  signed [31:0] b_67_load_reg_4525;
reg  signed [31:0] a_68_load_reg_4530;
reg  signed [31:0] b_68_load_reg_4535;
reg  signed [31:0] a_69_load_reg_4540;
reg  signed [31:0] b_69_load_reg_4545;
reg  signed [31:0] a_71_load_reg_4560;
reg  signed [31:0] b_71_load_reg_4565;
reg  signed [31:0] a_72_load_reg_4570;
reg  signed [31:0] b_72_load_reg_4575;
wire   [31:0] tmp_5_2_fu_2348_p2;
reg   [31:0] tmp_5_2_reg_4580;
wire   [31:0] tmp_5_3_fu_2352_p2;
reg   [31:0] tmp_5_3_reg_4585;
wire   [31:0] tmp_5_4_fu_2356_p2;
reg   [31:0] tmp_5_4_reg_4590;
wire   [31:0] tmp_5_5_fu_2360_p2;
reg   [31:0] tmp_5_5_reg_4595;
wire   [31:0] tmp_5_6_fu_2364_p2;
reg   [31:0] tmp_5_6_reg_4600;
wire   [31:0] tmp_5_7_fu_2368_p2;
reg   [31:0] tmp_5_7_reg_4605;
wire   [31:0] tmp_5_8_fu_2372_p2;
reg   [31:0] tmp_5_8_reg_4610;
wire   [31:0] tmp_5_9_fu_2376_p2;
reg   [31:0] tmp_5_9_reg_4615;
wire   [31:0] tmp_5_s_fu_2380_p2;
reg   [31:0] tmp_5_s_reg_4620;
wire   [31:0] tmp_5_10_fu_2384_p2;
reg   [31:0] tmp_5_10_reg_4625;
wire   [31:0] tmp_5_11_fu_2388_p2;
reg   [31:0] tmp_5_11_reg_4630;
wire   [31:0] tmp_5_12_fu_2392_p2;
reg   [31:0] tmp_5_12_reg_4635;
wire   [31:0] tmp_5_13_fu_2396_p2;
reg   [31:0] tmp_5_13_reg_4640;
wire   [31:0] tmp_5_14_fu_2400_p2;
reg   [31:0] tmp_5_14_reg_4645;
wire   [31:0] tmp_5_15_fu_2404_p2;
reg   [31:0] tmp_5_15_reg_4650;
wire   [31:0] tmp_5_16_fu_2408_p2;
reg   [31:0] tmp_5_16_reg_4655;
wire   [31:0] tmp_5_17_fu_2412_p2;
reg   [31:0] tmp_5_17_reg_4660;
wire   [31:0] tmp_5_18_fu_2416_p2;
reg   [31:0] tmp_5_18_reg_4665;
wire   [31:0] tmp_5_19_fu_2420_p2;
reg   [31:0] tmp_5_19_reg_4670;
wire   [31:0] tmp_5_20_fu_2424_p2;
reg   [31:0] tmp_5_20_reg_4675;
wire   [31:0] tmp_5_21_fu_2428_p2;
reg   [31:0] tmp_5_21_reg_4680;
wire   [31:0] tmp_5_22_fu_2432_p2;
reg   [31:0] tmp_5_22_reg_4685;
wire   [31:0] tmp_5_23_fu_2436_p2;
reg   [31:0] tmp_5_23_reg_4690;
wire   [31:0] tmp_5_24_fu_2440_p2;
reg   [31:0] tmp_5_24_reg_4695;
wire   [31:0] tmp_5_25_fu_2444_p2;
reg   [31:0] tmp_5_25_reg_4700;
wire   [31:0] tmp_5_26_fu_2448_p2;
reg   [31:0] tmp_5_26_reg_4705;
wire   [31:0] tmp_5_27_fu_2452_p2;
reg   [31:0] tmp_5_27_reg_4710;
wire   [31:0] tmp_5_28_fu_2456_p2;
reg   [31:0] tmp_5_28_reg_4715;
wire   [31:0] tmp_5_29_fu_2460_p2;
reg   [31:0] tmp_5_29_reg_4720;
wire   [31:0] tmp_5_30_fu_2464_p2;
reg   [31:0] tmp_5_30_reg_4725;
wire   [31:0] tmp_5_31_fu_2468_p2;
reg   [31:0] tmp_5_31_reg_4730;
wire   [31:0] tmp_5_32_fu_2472_p2;
reg   [31:0] tmp_5_32_reg_4735;
wire   [31:0] tmp_5_33_fu_2476_p2;
reg   [31:0] tmp_5_33_reg_4740;
wire   [31:0] tmp_5_34_fu_2480_p2;
reg   [31:0] tmp_5_34_reg_4745;
wire   [31:0] tmp_5_35_fu_2484_p2;
reg   [31:0] tmp_5_35_reg_4750;
wire   [31:0] tmp_5_36_fu_2488_p2;
reg   [31:0] tmp_5_36_reg_4755;
wire   [31:0] tmp_5_37_fu_2492_p2;
reg   [31:0] tmp_5_37_reg_4760;
wire   [31:0] tmp_5_38_fu_2496_p2;
reg   [31:0] tmp_5_38_reg_4765;
wire   [31:0] tmp_5_39_fu_2500_p2;
reg   [31:0] tmp_5_39_reg_4770;
wire   [31:0] tmp_5_40_fu_2504_p2;
reg   [31:0] tmp_5_40_reg_4775;
wire   [31:0] tmp_5_41_fu_2508_p2;
reg   [31:0] tmp_5_41_reg_4780;
wire   [31:0] tmp_5_42_fu_2512_p2;
reg   [31:0] tmp_5_42_reg_4785;
wire   [31:0] tmp_5_43_fu_2516_p2;
reg   [31:0] tmp_5_43_reg_4790;
wire   [31:0] tmp_5_44_fu_2520_p2;
reg   [31:0] tmp_5_44_reg_4795;
wire   [31:0] tmp_5_45_fu_2524_p2;
reg   [31:0] tmp_5_45_reg_4800;
reg  signed [31:0] a_47_load_reg_4805;
reg  signed [31:0] b_47_load_reg_4810;
reg  signed [31:0] a_48_load_reg_4815;
reg  signed [31:0] b_48_load_reg_4820;
wire   [31:0] tmp_5_48_fu_2528_p2;
reg   [31:0] tmp_5_48_reg_4825;
wire   [31:0] tmp_5_49_fu_2532_p2;
reg   [31:0] tmp_5_49_reg_4830;
reg  signed [31:0] a_51_load_reg_4835;
reg  signed [31:0] b_51_load_reg_4840;
wire   [31:0] tmp_5_51_fu_2536_p2;
reg   [31:0] tmp_5_51_reg_4845;
wire   [31:0] tmp_5_52_fu_2540_p2;
reg   [31:0] tmp_5_52_reg_4850;
wire   [31:0] tmp_5_53_fu_2544_p2;
reg   [31:0] tmp_5_53_reg_4855;
wire   [31:0] tmp_5_54_fu_2548_p2;
reg   [31:0] tmp_5_54_reg_4860;
wire   [31:0] tmp_5_55_fu_2552_p2;
reg   [31:0] tmp_5_55_reg_4865;
wire   [31:0] tmp_5_56_fu_2556_p2;
reg   [31:0] tmp_5_56_reg_4870;
wire   [31:0] tmp_5_57_fu_2560_p2;
reg   [31:0] tmp_5_57_reg_4875;
wire   [31:0] tmp_5_58_fu_2564_p2;
reg   [31:0] tmp_5_58_reg_4880;
wire   [31:0] tmp_5_59_fu_2568_p2;
reg   [31:0] tmp_5_59_reg_4885;
wire   [31:0] tmp_5_60_fu_2572_p2;
reg   [31:0] tmp_5_60_reg_4890;
wire   [31:0] tmp_5_61_fu_2576_p2;
reg   [31:0] tmp_5_61_reg_4895;
wire   [31:0] tmp_5_62_fu_2580_p2;
reg   [31:0] tmp_5_62_reg_4900;
wire   [31:0] tmp_5_63_fu_2584_p2;
reg   [31:0] tmp_5_63_reg_4905;
reg  signed [31:0] a_65_load_reg_4910;
reg  signed [31:0] b_65_load_reg_4915;
wire   [31:0] tmp_5_65_fu_2588_p2;
reg   [31:0] tmp_5_65_reg_4920;
wire   [31:0] tmp_5_66_fu_2592_p2;
reg   [31:0] tmp_5_66_reg_4925;
wire   [31:0] tmp_5_67_fu_2596_p2;
reg   [31:0] tmp_5_67_reg_4930;
wire   [31:0] tmp_5_68_fu_2600_p2;
reg   [31:0] tmp_5_68_reg_4935;
reg  signed [31:0] a_70_load_reg_4940;
reg  signed [31:0] b_70_load_reg_4945;
wire   [31:0] tmp_5_70_fu_2604_p2;
reg   [31:0] tmp_5_70_reg_4950;
wire   [31:0] tmp_5_71_fu_2608_p2;
reg   [31:0] tmp_5_71_reg_4955;
wire   [31:0] tmp5_fu_2612_p2;
reg   [31:0] tmp5_reg_4960;
wire   [31:0] tmp_5_46_fu_2616_p2;
reg   [31:0] tmp_5_46_reg_4965;
wire   [31:0] tmp_5_47_fu_2620_p2;
reg   [31:0] tmp_5_47_reg_4970;
wire   [31:0] tmp_5_50_fu_2624_p2;
reg   [31:0] tmp_5_50_reg_4975;
wire   [31:0] tmp_5_64_fu_2628_p2;
reg   [31:0] tmp_5_64_reg_4980;
wire   [31:0] tmp_5_69_fu_2632_p2;
reg   [31:0] tmp_5_69_reg_4985;
wire   [31:0] tmp3_fu_2664_p2;
reg   [31:0] tmp3_reg_4990;
wire   [31:0] tmp12_fu_2678_p2;
reg   [31:0] tmp12_reg_4995;
wire   [31:0] tmp15_fu_2697_p2;
reg   [31:0] tmp15_reg_5000;
wire   [31:0] tmp21_fu_2711_p2;
reg   [31:0] tmp21_reg_5005;
wire   [31:0] tmp25_fu_2717_p2;
reg   [31:0] tmp25_reg_5010;
wire   [31:0] tmp26_fu_2725_p2;
reg   [31:0] tmp26_reg_5015;
wire   [31:0] tmp29_fu_2738_p2;
reg   [31:0] tmp29_reg_5020;
wire   [31:0] tmp33_fu_2744_p2;
reg   [31:0] tmp33_reg_5025;
wire   [31:0] tmp34_fu_2752_p2;
reg   [31:0] tmp34_reg_5030;
wire   [31:0] tmp39_fu_2765_p2;
reg   [31:0] tmp39_reg_5035;
wire   [31:0] tmp43_fu_2771_p2;
reg   [31:0] tmp43_reg_5040;
wire   [31:0] tmp44_fu_2779_p2;
reg   [31:0] tmp44_reg_5045;
wire   [31:0] tmp48_fu_2784_p2;
reg   [31:0] tmp48_reg_5050;
wire   [31:0] tmp51_fu_2788_p2;
reg   [31:0] tmp51_reg_5055;
wire   [31:0] tmp53_fu_2792_p2;
reg   [31:0] tmp53_reg_5060;
wire   [31:0] tmp56_fu_2804_p2;
reg   [31:0] tmp56_reg_5065;
wire   [31:0] tmp60_fu_2810_p2;
reg   [31:0] tmp60_reg_5070;
wire   [31:0] tmp61_fu_2818_p2;
reg   [31:0] tmp61_reg_5075;
wire   [31:0] tmp65_fu_2823_p2;
reg   [31:0] tmp65_reg_5080;
wire   [31:0] tmp67_fu_2827_p2;
reg   [31:0] tmp67_reg_5085;
wire   [31:0] tmp69_fu_2831_p2;
reg   [31:0] tmp69_reg_5090;
wire   [31:0] tmp71_fu_2835_p2;
reg   [31:0] tmp71_reg_5095;
wire   [31:0] tmp1_fu_2872_p2;
reg   [31:0] tmp1_reg_5100;
wire   [31:0] tmp37_fu_2911_p2;
reg   [31:0] tmp37_reg_5105;
wire   [31:0] tmp54_fu_2950_p2;
reg   [31:0] tmp54_reg_5110;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg   [6:0] ap_phi_mux_ia_phi_fu_2264_p4;
wire    ap_block_pp0_stage0;
wire  signed [63:0] tmp_1_cast_fu_2962_p1;
wire   [0:0] exitcond_fu_2300_p2;
wire   [6:0] ia_1_fu_2294_p2;
wire   [31:0] tmp6_fu_2636_p2;
wire   [31:0] tmp10_fu_2649_p2;
wire   [31:0] tmp8_fu_2645_p2;
wire   [31:0] tmp9_fu_2653_p2;
wire   [31:0] tmp4_fu_2640_p2;
wire   [31:0] tmp7_fu_2658_p2;
wire   [31:0] tmp13_fu_2670_p2;
wire   [31:0] tmp14_fu_2674_p2;
wire   [31:0] tmp18_fu_2688_p2;
wire   [31:0] tmp16_fu_2684_p2;
wire   [31:0] tmp17_fu_2692_p2;
wire   [31:0] tmp22_fu_2703_p2;
wire   [31:0] tmp23_fu_2707_p2;
wire   [31:0] tmp27_fu_2721_p2;
wire   [31:0] tmp30_fu_2730_p2;
wire   [31:0] tmp31_fu_2734_p2;
wire   [31:0] tmp35_fu_2748_p2;
wire   [31:0] tmp40_fu_2757_p2;
wire   [31:0] tmp41_fu_2761_p2;
wire   [31:0] tmp45_fu_2775_p2;
wire   [31:0] tmp57_fu_2796_p2;
wire   [31:0] tmp58_fu_2800_p2;
wire   [31:0] tmp62_fu_2814_p2;
wire   [31:0] tmp11_fu_2839_p2;
wire   [31:0] tmp24_fu_2848_p2;
wire   [31:0] tmp32_fu_2857_p2;
wire   [31:0] tmp20_fu_2852_p2;
wire   [31:0] tmp28_fu_2861_p2;
wire   [31:0] tmp2_fu_2843_p2;
wire   [31:0] tmp19_fu_2866_p2;
wire   [31:0] tmp42_fu_2878_p2;
wire   [31:0] tmp49_fu_2887_p2;
wire   [31:0] tmp52_fu_2896_p2;
wire   [31:0] tmp47_fu_2891_p2;
wire   [31:0] tmp50_fu_2900_p2;
wire   [31:0] tmp38_fu_2882_p2;
wire   [31:0] tmp46_fu_2905_p2;
wire   [31:0] tmp59_fu_2917_p2;
wire   [31:0] tmp66_fu_2926_p2;
wire   [31:0] tmp70_fu_2935_p2;
wire   [31:0] tmp64_fu_2930_p2;
wire   [31:0] tmp68_fu_2939_p2;
wire   [31:0] tmp55_fu_2921_p2;
wire   [31:0] tmp63_fu_2944_p2;
wire   [13:0] grp_fu_2976_p3;
wire   [31:0] tmp36_fu_2966_p2;
wire   [6:0] grp_fu_2976_p0;
wire   [7:0] grp_fu_2976_p1;
wire   [6:0] grp_fu_2976_p2;
wire    ap_CS_fsm_state9;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [13:0] grp_fu_2976_p00;
wire   [13:0] grp_fu_2976_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

mmult_hw_mac_mulabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 14 ))
mmult_hw_mac_mulabkb_U1(
    .din0(grp_fu_2976_p0),
    .din1(grp_fu_2976_p1),
    .din2(grp_fu_2976_p2),
    .dout(grp_fu_2976_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2985 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ia_reg_2260 <= tmp_mid2_v_reg_2999;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ia_reg_2260 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_2282_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ib_reg_2271 <= ib_1_fu_2334_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ib_reg_2271 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_2282_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_2249 <= indvar_flatten_next_fu_2288_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_2249 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_reg_2985 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_load_reg_3180 <= a_0_q0;
        a_1_load_reg_3190 <= a_1_q0;
        b_0_load_reg_3185 <= b_0_q0;
        b_1_load_reg_3195 <= b_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2985_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_10_load_reg_3950 <= a_10_q0;
        a_11_load_reg_3960 <= a_11_q0;
        a_12_load_reg_3970 <= a_12_q0;
        a_13_load_reg_3980 <= a_13_q0;
        a_14_load_reg_3990 <= a_14_q0;
        a_15_load_reg_4000 <= a_15_q0;
        a_16_load_reg_4010 <= a_16_q0;
        a_17_load_reg_4020 <= a_17_q0;
        a_18_load_reg_4030 <= a_18_q0;
        a_19_load_reg_4040 <= a_19_q0;
        a_20_load_reg_4050 <= a_20_q0;
        a_21_load_reg_4060 <= a_21_q0;
        a_22_load_reg_4070 <= a_22_q0;
        a_23_load_reg_4080 <= a_23_q0;
        a_24_load_reg_4090 <= a_24_q0;
        a_25_load_reg_4100 <= a_25_q0;
        a_26_load_reg_4110 <= a_26_q0;
        a_27_load_reg_4120 <= a_27_q0;
        a_28_load_reg_4130 <= a_28_q0;
        a_29_load_reg_4140 <= a_29_q0;
        a_2_load_reg_3870 <= a_2_q0;
        a_30_load_reg_4150 <= a_30_q0;
        a_31_load_reg_4160 <= a_31_q0;
        a_32_load_reg_4170 <= a_32_q0;
        a_33_load_reg_4180 <= a_33_q0;
        a_34_load_reg_4190 <= a_34_q0;
        a_35_load_reg_4200 <= a_35_q0;
        a_36_load_reg_4210 <= a_36_q0;
        a_37_load_reg_4220 <= a_37_q0;
        a_38_load_reg_4230 <= a_38_q0;
        a_39_load_reg_4240 <= a_39_q0;
        a_3_load_reg_3880 <= a_3_q0;
        a_40_load_reg_4250 <= a_40_q0;
        a_41_load_reg_4260 <= a_41_q0;
        a_42_load_reg_4270 <= a_42_q0;
        a_43_load_reg_4280 <= a_43_q0;
        a_44_load_reg_4290 <= a_44_q0;
        a_45_load_reg_4300 <= a_45_q0;
        a_46_load_reg_4310 <= a_46_q0;
        a_49_load_reg_4340 <= a_49_q0;
        a_4_load_reg_3890 <= a_4_q0;
        a_50_load_reg_4350 <= a_50_q0;
        a_52_load_reg_4370 <= a_52_q0;
        a_53_load_reg_4380 <= a_53_q0;
        a_54_load_reg_4390 <= a_54_q0;
        a_55_load_reg_4400 <= a_55_q0;
        a_56_load_reg_4410 <= a_56_q0;
        a_57_load_reg_4420 <= a_57_q0;
        a_58_load_reg_4430 <= a_58_q0;
        a_59_load_reg_4440 <= a_59_q0;
        a_5_load_reg_3900 <= a_5_q0;
        a_60_load_reg_4450 <= a_60_q0;
        a_61_load_reg_4460 <= a_61_q0;
        a_62_load_reg_4470 <= a_62_q0;
        a_63_load_reg_4480 <= a_63_q0;
        a_64_load_reg_4490 <= a_64_q0;
        a_66_load_reg_4510 <= a_66_q0;
        a_67_load_reg_4520 <= a_67_q0;
        a_68_load_reg_4530 <= a_68_q0;
        a_69_load_reg_4540 <= a_69_q0;
        a_6_load_reg_3910 <= a_6_q0;
        a_71_load_reg_4560 <= a_71_q0;
        a_72_load_reg_4570 <= a_72_q0;
        a_7_load_reg_3920 <= a_7_q0;
        a_8_load_reg_3930 <= a_8_q0;
        a_9_load_reg_3940 <= a_9_q0;
        b_10_load_reg_3955 <= b_10_q0;
        b_11_load_reg_3965 <= b_11_q0;
        b_12_load_reg_3975 <= b_12_q0;
        b_13_load_reg_3985 <= b_13_q0;
        b_14_load_reg_3995 <= b_14_q0;
        b_15_load_reg_4005 <= b_15_q0;
        b_16_load_reg_4015 <= b_16_q0;
        b_17_load_reg_4025 <= b_17_q0;
        b_18_load_reg_4035 <= b_18_q0;
        b_19_load_reg_4045 <= b_19_q0;
        b_20_load_reg_4055 <= b_20_q0;
        b_21_load_reg_4065 <= b_21_q0;
        b_22_load_reg_4075 <= b_22_q0;
        b_23_load_reg_4085 <= b_23_q0;
        b_24_load_reg_4095 <= b_24_q0;
        b_25_load_reg_4105 <= b_25_q0;
        b_26_load_reg_4115 <= b_26_q0;
        b_27_load_reg_4125 <= b_27_q0;
        b_28_load_reg_4135 <= b_28_q0;
        b_29_load_reg_4145 <= b_29_q0;
        b_2_load_reg_3875 <= b_2_q0;
        b_30_load_reg_4155 <= b_30_q0;
        b_31_load_reg_4165 <= b_31_q0;
        b_32_load_reg_4175 <= b_32_q0;
        b_33_load_reg_4185 <= b_33_q0;
        b_34_load_reg_4195 <= b_34_q0;
        b_35_load_reg_4205 <= b_35_q0;
        b_36_load_reg_4215 <= b_36_q0;
        b_37_load_reg_4225 <= b_37_q0;
        b_38_load_reg_4235 <= b_38_q0;
        b_39_load_reg_4245 <= b_39_q0;
        b_3_load_reg_3885 <= b_3_q0;
        b_40_load_reg_4255 <= b_40_q0;
        b_41_load_reg_4265 <= b_41_q0;
        b_42_load_reg_4275 <= b_42_q0;
        b_43_load_reg_4285 <= b_43_q0;
        b_44_load_reg_4295 <= b_44_q0;
        b_45_load_reg_4305 <= b_45_q0;
        b_46_load_reg_4315 <= b_46_q0;
        b_49_load_reg_4345 <= b_49_q0;
        b_4_load_reg_3895 <= b_4_q0;
        b_50_load_reg_4355 <= b_50_q0;
        b_52_load_reg_4375 <= b_52_q0;
        b_53_load_reg_4385 <= b_53_q0;
        b_54_load_reg_4395 <= b_54_q0;
        b_55_load_reg_4405 <= b_55_q0;
        b_56_load_reg_4415 <= b_56_q0;
        b_57_load_reg_4425 <= b_57_q0;
        b_58_load_reg_4435 <= b_58_q0;
        b_59_load_reg_4445 <= b_59_q0;
        b_5_load_reg_3905 <= b_5_q0;
        b_60_load_reg_4455 <= b_60_q0;
        b_61_load_reg_4465 <= b_61_q0;
        b_62_load_reg_4475 <= b_62_q0;
        b_63_load_reg_4485 <= b_63_q0;
        b_64_load_reg_4495 <= b_64_q0;
        b_66_load_reg_4515 <= b_66_q0;
        b_67_load_reg_4525 <= b_67_q0;
        b_68_load_reg_4535 <= b_68_q0;
        b_69_load_reg_4545 <= b_69_q0;
        b_6_load_reg_3915 <= b_6_q0;
        b_71_load_reg_4565 <= b_71_q0;
        b_72_load_reg_4575 <= b_72_q0;
        b_7_load_reg_3925 <= b_7_q0;
        b_8_load_reg_3935 <= b_8_q0;
        b_9_load_reg_3945 <= b_9_q0;
        tmp_5_1_reg_3865 <= tmp_5_1_fu_2344_p2;
        tmp_5_reg_3860 <= tmp_5_fu_2340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2985_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        a_47_load_reg_4805 <= a_47_q0;
        a_48_load_reg_4815 <= a_48_q0;
        a_51_load_reg_4835 <= a_51_q0;
        a_65_load_reg_4910 <= a_65_q0;
        a_70_load_reg_4940 <= a_70_q0;
        b_47_load_reg_4810 <= b_47_q0;
        b_48_load_reg_4820 <= b_48_q0;
        b_51_load_reg_4840 <= b_51_q0;
        b_65_load_reg_4915 <= b_65_q0;
        b_70_load_reg_4945 <= b_70_q0;
        tmp5_reg_4960 <= tmp5_fu_2612_p2;
        tmp_5_10_reg_4625 <= tmp_5_10_fu_2384_p2;
        tmp_5_11_reg_4630 <= tmp_5_11_fu_2388_p2;
        tmp_5_12_reg_4635 <= tmp_5_12_fu_2392_p2;
        tmp_5_13_reg_4640 <= tmp_5_13_fu_2396_p2;
        tmp_5_14_reg_4645 <= tmp_5_14_fu_2400_p2;
        tmp_5_15_reg_4650 <= tmp_5_15_fu_2404_p2;
        tmp_5_16_reg_4655 <= tmp_5_16_fu_2408_p2;
        tmp_5_17_reg_4660 <= tmp_5_17_fu_2412_p2;
        tmp_5_18_reg_4665 <= tmp_5_18_fu_2416_p2;
        tmp_5_19_reg_4670 <= tmp_5_19_fu_2420_p2;
        tmp_5_20_reg_4675 <= tmp_5_20_fu_2424_p2;
        tmp_5_21_reg_4680 <= tmp_5_21_fu_2428_p2;
        tmp_5_22_reg_4685 <= tmp_5_22_fu_2432_p2;
        tmp_5_23_reg_4690 <= tmp_5_23_fu_2436_p2;
        tmp_5_24_reg_4695 <= tmp_5_24_fu_2440_p2;
        tmp_5_25_reg_4700 <= tmp_5_25_fu_2444_p2;
        tmp_5_26_reg_4705 <= tmp_5_26_fu_2448_p2;
        tmp_5_27_reg_4710 <= tmp_5_27_fu_2452_p2;
        tmp_5_28_reg_4715 <= tmp_5_28_fu_2456_p2;
        tmp_5_29_reg_4720 <= tmp_5_29_fu_2460_p2;
        tmp_5_2_reg_4580 <= tmp_5_2_fu_2348_p2;
        tmp_5_30_reg_4725 <= tmp_5_30_fu_2464_p2;
        tmp_5_31_reg_4730 <= tmp_5_31_fu_2468_p2;
        tmp_5_32_reg_4735 <= tmp_5_32_fu_2472_p2;
        tmp_5_33_reg_4740 <= tmp_5_33_fu_2476_p2;
        tmp_5_34_reg_4745 <= tmp_5_34_fu_2480_p2;
        tmp_5_35_reg_4750 <= tmp_5_35_fu_2484_p2;
        tmp_5_36_reg_4755 <= tmp_5_36_fu_2488_p2;
        tmp_5_37_reg_4760 <= tmp_5_37_fu_2492_p2;
        tmp_5_38_reg_4765 <= tmp_5_38_fu_2496_p2;
        tmp_5_39_reg_4770 <= tmp_5_39_fu_2500_p2;
        tmp_5_3_reg_4585 <= tmp_5_3_fu_2352_p2;
        tmp_5_40_reg_4775 <= tmp_5_40_fu_2504_p2;
        tmp_5_41_reg_4780 <= tmp_5_41_fu_2508_p2;
        tmp_5_42_reg_4785 <= tmp_5_42_fu_2512_p2;
        tmp_5_43_reg_4790 <= tmp_5_43_fu_2516_p2;
        tmp_5_44_reg_4795 <= tmp_5_44_fu_2520_p2;
        tmp_5_45_reg_4800 <= tmp_5_45_fu_2524_p2;
        tmp_5_48_reg_4825 <= tmp_5_48_fu_2528_p2;
        tmp_5_49_reg_4830 <= tmp_5_49_fu_2532_p2;
        tmp_5_4_reg_4590 <= tmp_5_4_fu_2356_p2;
        tmp_5_51_reg_4845 <= tmp_5_51_fu_2536_p2;
        tmp_5_52_reg_4850 <= tmp_5_52_fu_2540_p2;
        tmp_5_53_reg_4855 <= tmp_5_53_fu_2544_p2;
        tmp_5_54_reg_4860 <= tmp_5_54_fu_2548_p2;
        tmp_5_55_reg_4865 <= tmp_5_55_fu_2552_p2;
        tmp_5_56_reg_4870 <= tmp_5_56_fu_2556_p2;
        tmp_5_57_reg_4875 <= tmp_5_57_fu_2560_p2;
        tmp_5_58_reg_4880 <= tmp_5_58_fu_2564_p2;
        tmp_5_59_reg_4885 <= tmp_5_59_fu_2568_p2;
        tmp_5_5_reg_4595 <= tmp_5_5_fu_2360_p2;
        tmp_5_60_reg_4890 <= tmp_5_60_fu_2572_p2;
        tmp_5_61_reg_4895 <= tmp_5_61_fu_2576_p2;
        tmp_5_62_reg_4900 <= tmp_5_62_fu_2580_p2;
        tmp_5_63_reg_4905 <= tmp_5_63_fu_2584_p2;
        tmp_5_65_reg_4920 <= tmp_5_65_fu_2588_p2;
        tmp_5_66_reg_4925 <= tmp_5_66_fu_2592_p2;
        tmp_5_67_reg_4930 <= tmp_5_67_fu_2596_p2;
        tmp_5_68_reg_4935 <= tmp_5_68_fu_2600_p2;
        tmp_5_6_reg_4600 <= tmp_5_6_fu_2364_p2;
        tmp_5_70_reg_4950 <= tmp_5_70_fu_2604_p2;
        tmp_5_71_reg_4955 <= tmp_5_71_fu_2608_p2;
        tmp_5_7_reg_4605 <= tmp_5_7_fu_2368_p2;
        tmp_5_8_reg_4610 <= tmp_5_8_fu_2372_p2;
        tmp_5_9_reg_4615 <= tmp_5_9_fu_2376_p2;
        tmp_5_s_reg_4620 <= tmp_5_s_fu_2380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_2985 <= exitcond_flatten_fu_2282_p2;
        exitcond_flatten_reg_2985_pp0_iter1_reg <= exitcond_flatten_reg_2985;
        ib_mid2_reg_2994_pp0_iter1_reg <= ib_mid2_reg_2994;
        tmp_2_reg_3080_pp0_iter1_reg[6 : 0] <= tmp_2_reg_3080[6 : 0];
        tmp_mid2_reg_3005_pp0_iter1_reg[6 : 0] <= tmp_mid2_reg_3005[6 : 0];
        tmp_mid2_v_reg_2999_pp0_iter1_reg <= tmp_mid2_v_reg_2999;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond_flatten_reg_2985_pp0_iter2_reg <= exitcond_flatten_reg_2985_pp0_iter1_reg;
        exitcond_flatten_reg_2985_pp0_iter3_reg <= exitcond_flatten_reg_2985_pp0_iter2_reg;
        exitcond_flatten_reg_2985_pp0_iter4_reg <= exitcond_flatten_reg_2985_pp0_iter3_reg;
        exitcond_flatten_reg_2985_pp0_iter5_reg <= exitcond_flatten_reg_2985_pp0_iter4_reg;
        ib_mid2_reg_2994_pp0_iter2_reg <= ib_mid2_reg_2994_pp0_iter1_reg;
        ib_mid2_reg_2994_pp0_iter3_reg <= ib_mid2_reg_2994_pp0_iter2_reg;
        ib_mid2_reg_2994_pp0_iter4_reg <= ib_mid2_reg_2994_pp0_iter3_reg;
        ib_mid2_reg_2994_pp0_iter5_reg <= ib_mid2_reg_2994_pp0_iter4_reg;
        tmp_mid2_v_reg_2999_pp0_iter2_reg <= tmp_mid2_v_reg_2999_pp0_iter1_reg;
        tmp_mid2_v_reg_2999_pp0_iter3_reg <= tmp_mid2_v_reg_2999_pp0_iter2_reg;
        tmp_mid2_v_reg_2999_pp0_iter4_reg <= tmp_mid2_v_reg_2999_pp0_iter3_reg;
        tmp_mid2_v_reg_2999_pp0_iter5_reg <= tmp_mid2_v_reg_2999_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_2282_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ib_mid2_reg_2994 <= ib_mid2_fu_2306_p3;
        tmp_2_reg_3080[6 : 0] <= tmp_2_fu_2328_p1[6 : 0];
        tmp_mid2_reg_3005[6 : 0] <= tmp_mid2_fu_2322_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2985_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp12_reg_4995 <= tmp12_fu_2678_p2;
        tmp15_reg_5000 <= tmp15_fu_2697_p2;
        tmp21_reg_5005 <= tmp21_fu_2711_p2;
        tmp25_reg_5010 <= tmp25_fu_2717_p2;
        tmp26_reg_5015 <= tmp26_fu_2725_p2;
        tmp29_reg_5020 <= tmp29_fu_2738_p2;
        tmp33_reg_5025 <= tmp33_fu_2744_p2;
        tmp34_reg_5030 <= tmp34_fu_2752_p2;
        tmp39_reg_5035 <= tmp39_fu_2765_p2;
        tmp3_reg_4990 <= tmp3_fu_2664_p2;
        tmp43_reg_5040 <= tmp43_fu_2771_p2;
        tmp44_reg_5045 <= tmp44_fu_2779_p2;
        tmp48_reg_5050 <= tmp48_fu_2784_p2;
        tmp51_reg_5055 <= tmp51_fu_2788_p2;
        tmp53_reg_5060 <= tmp53_fu_2792_p2;
        tmp56_reg_5065 <= tmp56_fu_2804_p2;
        tmp60_reg_5070 <= tmp60_fu_2810_p2;
        tmp61_reg_5075 <= tmp61_fu_2818_p2;
        tmp65_reg_5080 <= tmp65_fu_2823_p2;
        tmp67_reg_5085 <= tmp67_fu_2827_p2;
        tmp69_reg_5090 <= tmp69_fu_2831_p2;
        tmp71_reg_5095 <= tmp71_fu_2835_p2;
        tmp_5_46_reg_4965 <= tmp_5_46_fu_2616_p2;
        tmp_5_47_reg_4970 <= tmp_5_47_fu_2620_p2;
        tmp_5_50_reg_4975 <= tmp_5_50_fu_2624_p2;
        tmp_5_64_reg_4980 <= tmp_5_64_fu_2628_p2;
        tmp_5_69_reg_4985 <= tmp_5_69_fu_2632_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_2985_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp1_reg_5100 <= tmp1_fu_2872_p2;
        tmp37_reg_5105 <= tmp37_fu_2911_p2;
        tmp54_reg_5110 <= tmp54_fu_2950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten_fu_2282_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_mid2_v_reg_2999 <= tmp_mid2_v_fu_2314_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_ce0 = 1'b1;
    end else begin
        a_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_10_ce0 = 1'b1;
    end else begin
        a_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_11_ce0 = 1'b1;
    end else begin
        a_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_12_ce0 = 1'b1;
    end else begin
        a_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_13_ce0 = 1'b1;
    end else begin
        a_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_14_ce0 = 1'b1;
    end else begin
        a_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_15_ce0 = 1'b1;
    end else begin
        a_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_16_ce0 = 1'b1;
    end else begin
        a_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_17_ce0 = 1'b1;
    end else begin
        a_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_18_ce0 = 1'b1;
    end else begin
        a_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_19_ce0 = 1'b1;
    end else begin
        a_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_ce0 = 1'b1;
    end else begin
        a_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_20_ce0 = 1'b1;
    end else begin
        a_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_21_ce0 = 1'b1;
    end else begin
        a_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_22_ce0 = 1'b1;
    end else begin
        a_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_23_ce0 = 1'b1;
    end else begin
        a_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_24_ce0 = 1'b1;
    end else begin
        a_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_25_ce0 = 1'b1;
    end else begin
        a_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_26_ce0 = 1'b1;
    end else begin
        a_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_27_ce0 = 1'b1;
    end else begin
        a_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_28_ce0 = 1'b1;
    end else begin
        a_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_29_ce0 = 1'b1;
    end else begin
        a_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_2_ce0 = 1'b1;
    end else begin
        a_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_30_ce0 = 1'b1;
    end else begin
        a_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_31_ce0 = 1'b1;
    end else begin
        a_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_32_ce0 = 1'b1;
    end else begin
        a_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_33_ce0 = 1'b1;
    end else begin
        a_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_34_ce0 = 1'b1;
    end else begin
        a_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_35_ce0 = 1'b1;
    end else begin
        a_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_36_ce0 = 1'b1;
    end else begin
        a_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_37_ce0 = 1'b1;
    end else begin
        a_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_38_ce0 = 1'b1;
    end else begin
        a_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_39_ce0 = 1'b1;
    end else begin
        a_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_3_ce0 = 1'b1;
    end else begin
        a_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_40_ce0 = 1'b1;
    end else begin
        a_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_41_ce0 = 1'b1;
    end else begin
        a_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_42_ce0 = 1'b1;
    end else begin
        a_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_43_ce0 = 1'b1;
    end else begin
        a_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_44_ce0 = 1'b1;
    end else begin
        a_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_45_ce0 = 1'b1;
    end else begin
        a_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_46_ce0 = 1'b1;
    end else begin
        a_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_47_ce0 = 1'b1;
    end else begin
        a_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_48_ce0 = 1'b1;
    end else begin
        a_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_49_ce0 = 1'b1;
    end else begin
        a_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_4_ce0 = 1'b1;
    end else begin
        a_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_50_ce0 = 1'b1;
    end else begin
        a_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_51_ce0 = 1'b1;
    end else begin
        a_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_52_ce0 = 1'b1;
    end else begin
        a_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_53_ce0 = 1'b1;
    end else begin
        a_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_54_ce0 = 1'b1;
    end else begin
        a_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_55_ce0 = 1'b1;
    end else begin
        a_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_56_ce0 = 1'b1;
    end else begin
        a_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_57_ce0 = 1'b1;
    end else begin
        a_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_58_ce0 = 1'b1;
    end else begin
        a_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_59_ce0 = 1'b1;
    end else begin
        a_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_5_ce0 = 1'b1;
    end else begin
        a_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_60_ce0 = 1'b1;
    end else begin
        a_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_61_ce0 = 1'b1;
    end else begin
        a_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_62_ce0 = 1'b1;
    end else begin
        a_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_63_ce0 = 1'b1;
    end else begin
        a_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_64_ce0 = 1'b1;
    end else begin
        a_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_65_ce0 = 1'b1;
    end else begin
        a_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_66_ce0 = 1'b1;
    end else begin
        a_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_67_ce0 = 1'b1;
    end else begin
        a_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_68_ce0 = 1'b1;
    end else begin
        a_68_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_69_ce0 = 1'b1;
    end else begin
        a_69_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_6_ce0 = 1'b1;
    end else begin
        a_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        a_70_ce0 = 1'b1;
    end else begin
        a_70_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_71_ce0 = 1'b1;
    end else begin
        a_71_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_72_ce0 = 1'b1;
    end else begin
        a_72_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_7_ce0 = 1'b1;
    end else begin
        a_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_8_ce0 = 1'b1;
    end else begin
        a_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        a_9_ce0 = 1'b1;
    end else begin
        a_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_2282_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2985 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_ia_phi_fu_2264_p4 = tmp_mid2_v_reg_2999;
    end else begin
        ap_phi_mux_ia_phi_fu_2264_p4 = ia_reg_2260;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_0_ce0 = 1'b1;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_10_ce0 = 1'b1;
    end else begin
        b_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_11_ce0 = 1'b1;
    end else begin
        b_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_12_ce0 = 1'b1;
    end else begin
        b_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_13_ce0 = 1'b1;
    end else begin
        b_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_14_ce0 = 1'b1;
    end else begin
        b_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_15_ce0 = 1'b1;
    end else begin
        b_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_16_ce0 = 1'b1;
    end else begin
        b_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_17_ce0 = 1'b1;
    end else begin
        b_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_18_ce0 = 1'b1;
    end else begin
        b_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_19_ce0 = 1'b1;
    end else begin
        b_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_20_ce0 = 1'b1;
    end else begin
        b_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_21_ce0 = 1'b1;
    end else begin
        b_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_22_ce0 = 1'b1;
    end else begin
        b_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_23_ce0 = 1'b1;
    end else begin
        b_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_24_ce0 = 1'b1;
    end else begin
        b_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_25_ce0 = 1'b1;
    end else begin
        b_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_26_ce0 = 1'b1;
    end else begin
        b_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_27_ce0 = 1'b1;
    end else begin
        b_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_28_ce0 = 1'b1;
    end else begin
        b_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_29_ce0 = 1'b1;
    end else begin
        b_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_2_ce0 = 1'b1;
    end else begin
        b_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_30_ce0 = 1'b1;
    end else begin
        b_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_31_ce0 = 1'b1;
    end else begin
        b_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_32_ce0 = 1'b1;
    end else begin
        b_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_33_ce0 = 1'b1;
    end else begin
        b_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_34_ce0 = 1'b1;
    end else begin
        b_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_35_ce0 = 1'b1;
    end else begin
        b_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_36_ce0 = 1'b1;
    end else begin
        b_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_37_ce0 = 1'b1;
    end else begin
        b_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_38_ce0 = 1'b1;
    end else begin
        b_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_39_ce0 = 1'b1;
    end else begin
        b_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_3_ce0 = 1'b1;
    end else begin
        b_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_40_ce0 = 1'b1;
    end else begin
        b_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_41_ce0 = 1'b1;
    end else begin
        b_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_42_ce0 = 1'b1;
    end else begin
        b_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_43_ce0 = 1'b1;
    end else begin
        b_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_44_ce0 = 1'b1;
    end else begin
        b_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_45_ce0 = 1'b1;
    end else begin
        b_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_46_ce0 = 1'b1;
    end else begin
        b_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        b_47_ce0 = 1'b1;
    end else begin
        b_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        b_48_ce0 = 1'b1;
    end else begin
        b_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_49_ce0 = 1'b1;
    end else begin
        b_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_4_ce0 = 1'b1;
    end else begin
        b_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_50_ce0 = 1'b1;
    end else begin
        b_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        b_51_ce0 = 1'b1;
    end else begin
        b_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_52_ce0 = 1'b1;
    end else begin
        b_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_53_ce0 = 1'b1;
    end else begin
        b_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_54_ce0 = 1'b1;
    end else begin
        b_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_55_ce0 = 1'b1;
    end else begin
        b_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_56_ce0 = 1'b1;
    end else begin
        b_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_57_ce0 = 1'b1;
    end else begin
        b_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_58_ce0 = 1'b1;
    end else begin
        b_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_59_ce0 = 1'b1;
    end else begin
        b_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_5_ce0 = 1'b1;
    end else begin
        b_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_60_ce0 = 1'b1;
    end else begin
        b_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_61_ce0 = 1'b1;
    end else begin
        b_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_62_ce0 = 1'b1;
    end else begin
        b_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_63_ce0 = 1'b1;
    end else begin
        b_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_64_ce0 = 1'b1;
    end else begin
        b_64_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        b_65_ce0 = 1'b1;
    end else begin
        b_65_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_66_ce0 = 1'b1;
    end else begin
        b_66_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_67_ce0 = 1'b1;
    end else begin
        b_67_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_68_ce0 = 1'b1;
    end else begin
        b_68_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_69_ce0 = 1'b1;
    end else begin
        b_69_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_6_ce0 = 1'b1;
    end else begin
        b_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        b_70_ce0 = 1'b1;
    end else begin
        b_70_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_71_ce0 = 1'b1;
    end else begin
        b_71_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_72_ce0 = 1'b1;
    end else begin
        b_72_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_7_ce0 = 1'b1;
    end else begin
        b_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_8_ce0 = 1'b1;
    end else begin
        b_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        b_9_ce0 = 1'b1;
    end else begin
        b_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2985_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond_flatten_fu_2282_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((exitcond_flatten_fu_2282_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_address0 = tmp_mid2_fu_2322_p1;

assign a_10_address0 = tmp_mid2_reg_3005;

assign a_11_address0 = tmp_mid2_reg_3005;

assign a_12_address0 = tmp_mid2_reg_3005;

assign a_13_address0 = tmp_mid2_reg_3005;

assign a_14_address0 = tmp_mid2_reg_3005;

assign a_15_address0 = tmp_mid2_reg_3005;

assign a_16_address0 = tmp_mid2_reg_3005;

assign a_17_address0 = tmp_mid2_reg_3005;

assign a_18_address0 = tmp_mid2_reg_3005;

assign a_19_address0 = tmp_mid2_reg_3005;

assign a_1_address0 = tmp_mid2_fu_2322_p1;

assign a_20_address0 = tmp_mid2_reg_3005;

assign a_21_address0 = tmp_mid2_reg_3005;

assign a_22_address0 = tmp_mid2_reg_3005;

assign a_23_address0 = tmp_mid2_reg_3005;

assign a_24_address0 = tmp_mid2_reg_3005;

assign a_25_address0 = tmp_mid2_reg_3005;

assign a_26_address0 = tmp_mid2_reg_3005;

assign a_27_address0 = tmp_mid2_reg_3005;

assign a_28_address0 = tmp_mid2_reg_3005;

assign a_29_address0 = tmp_mid2_reg_3005;

assign a_2_address0 = tmp_mid2_reg_3005;

assign a_30_address0 = tmp_mid2_reg_3005;

assign a_31_address0 = tmp_mid2_reg_3005;

assign a_32_address0 = tmp_mid2_reg_3005;

assign a_33_address0 = tmp_mid2_reg_3005;

assign a_34_address0 = tmp_mid2_reg_3005;

assign a_35_address0 = tmp_mid2_reg_3005;

assign a_36_address0 = tmp_mid2_reg_3005;

assign a_37_address0 = tmp_mid2_reg_3005;

assign a_38_address0 = tmp_mid2_reg_3005;

assign a_39_address0 = tmp_mid2_reg_3005;

assign a_3_address0 = tmp_mid2_reg_3005;

assign a_40_address0 = tmp_mid2_reg_3005;

assign a_41_address0 = tmp_mid2_reg_3005;

assign a_42_address0 = tmp_mid2_reg_3005;

assign a_43_address0 = tmp_mid2_reg_3005;

assign a_44_address0 = tmp_mid2_reg_3005;

assign a_45_address0 = tmp_mid2_reg_3005;

assign a_46_address0 = tmp_mid2_reg_3005;

assign a_47_address0 = tmp_mid2_reg_3005_pp0_iter1_reg;

assign a_48_address0 = tmp_mid2_reg_3005_pp0_iter1_reg;

assign a_49_address0 = tmp_mid2_reg_3005;

assign a_4_address0 = tmp_mid2_reg_3005;

assign a_50_address0 = tmp_mid2_reg_3005;

assign a_51_address0 = tmp_mid2_reg_3005_pp0_iter1_reg;

assign a_52_address0 = tmp_mid2_reg_3005;

assign a_53_address0 = tmp_mid2_reg_3005;

assign a_54_address0 = tmp_mid2_reg_3005;

assign a_55_address0 = tmp_mid2_reg_3005;

assign a_56_address0 = tmp_mid2_reg_3005;

assign a_57_address0 = tmp_mid2_reg_3005;

assign a_58_address0 = tmp_mid2_reg_3005;

assign a_59_address0 = tmp_mid2_reg_3005;

assign a_5_address0 = tmp_mid2_reg_3005;

assign a_60_address0 = tmp_mid2_reg_3005;

assign a_61_address0 = tmp_mid2_reg_3005;

assign a_62_address0 = tmp_mid2_reg_3005;

assign a_63_address0 = tmp_mid2_reg_3005;

assign a_64_address0 = tmp_mid2_reg_3005;

assign a_65_address0 = tmp_mid2_reg_3005_pp0_iter1_reg;

assign a_66_address0 = tmp_mid2_reg_3005;

assign a_67_address0 = tmp_mid2_reg_3005;

assign a_68_address0 = tmp_mid2_reg_3005;

assign a_69_address0 = tmp_mid2_reg_3005;

assign a_6_address0 = tmp_mid2_reg_3005;

assign a_70_address0 = tmp_mid2_reg_3005_pp0_iter1_reg;

assign a_71_address0 = tmp_mid2_reg_3005;

assign a_72_address0 = tmp_mid2_reg_3005;

assign a_7_address0 = tmp_mid2_reg_3005;

assign a_8_address0 = tmp_mid2_reg_3005;

assign a_9_address0 = tmp_mid2_reg_3005;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign b_0_address0 = tmp_2_fu_2328_p1;

assign b_10_address0 = tmp_2_reg_3080;

assign b_11_address0 = tmp_2_reg_3080;

assign b_12_address0 = tmp_2_reg_3080;

assign b_13_address0 = tmp_2_reg_3080;

assign b_14_address0 = tmp_2_reg_3080;

assign b_15_address0 = tmp_2_reg_3080;

assign b_16_address0 = tmp_2_reg_3080;

assign b_17_address0 = tmp_2_reg_3080;

assign b_18_address0 = tmp_2_reg_3080;

assign b_19_address0 = tmp_2_reg_3080;

assign b_1_address0 = tmp_2_fu_2328_p1;

assign b_20_address0 = tmp_2_reg_3080;

assign b_21_address0 = tmp_2_reg_3080;

assign b_22_address0 = tmp_2_reg_3080;

assign b_23_address0 = tmp_2_reg_3080;

assign b_24_address0 = tmp_2_reg_3080;

assign b_25_address0 = tmp_2_reg_3080;

assign b_26_address0 = tmp_2_reg_3080;

assign b_27_address0 = tmp_2_reg_3080;

assign b_28_address0 = tmp_2_reg_3080;

assign b_29_address0 = tmp_2_reg_3080;

assign b_2_address0 = tmp_2_reg_3080;

assign b_30_address0 = tmp_2_reg_3080;

assign b_31_address0 = tmp_2_reg_3080;

assign b_32_address0 = tmp_2_reg_3080;

assign b_33_address0 = tmp_2_reg_3080;

assign b_34_address0 = tmp_2_reg_3080;

assign b_35_address0 = tmp_2_reg_3080;

assign b_36_address0 = tmp_2_reg_3080;

assign b_37_address0 = tmp_2_reg_3080;

assign b_38_address0 = tmp_2_reg_3080;

assign b_39_address0 = tmp_2_reg_3080;

assign b_3_address0 = tmp_2_reg_3080;

assign b_40_address0 = tmp_2_reg_3080;

assign b_41_address0 = tmp_2_reg_3080;

assign b_42_address0 = tmp_2_reg_3080;

assign b_43_address0 = tmp_2_reg_3080;

assign b_44_address0 = tmp_2_reg_3080;

assign b_45_address0 = tmp_2_reg_3080;

assign b_46_address0 = tmp_2_reg_3080;

assign b_47_address0 = tmp_2_reg_3080_pp0_iter1_reg;

assign b_48_address0 = tmp_2_reg_3080_pp0_iter1_reg;

assign b_49_address0 = tmp_2_reg_3080;

assign b_4_address0 = tmp_2_reg_3080;

assign b_50_address0 = tmp_2_reg_3080;

assign b_51_address0 = tmp_2_reg_3080_pp0_iter1_reg;

assign b_52_address0 = tmp_2_reg_3080;

assign b_53_address0 = tmp_2_reg_3080;

assign b_54_address0 = tmp_2_reg_3080;

assign b_55_address0 = tmp_2_reg_3080;

assign b_56_address0 = tmp_2_reg_3080;

assign b_57_address0 = tmp_2_reg_3080;

assign b_58_address0 = tmp_2_reg_3080;

assign b_59_address0 = tmp_2_reg_3080;

assign b_5_address0 = tmp_2_reg_3080;

assign b_60_address0 = tmp_2_reg_3080;

assign b_61_address0 = tmp_2_reg_3080;

assign b_62_address0 = tmp_2_reg_3080;

assign b_63_address0 = tmp_2_reg_3080;

assign b_64_address0 = tmp_2_reg_3080;

assign b_65_address0 = tmp_2_reg_3080_pp0_iter1_reg;

assign b_66_address0 = tmp_2_reg_3080;

assign b_67_address0 = tmp_2_reg_3080;

assign b_68_address0 = tmp_2_reg_3080;

assign b_69_address0 = tmp_2_reg_3080;

assign b_6_address0 = tmp_2_reg_3080;

assign b_70_address0 = tmp_2_reg_3080_pp0_iter1_reg;

assign b_71_address0 = tmp_2_reg_3080;

assign b_72_address0 = tmp_2_reg_3080;

assign b_7_address0 = tmp_2_reg_3080;

assign b_8_address0 = tmp_2_reg_3080;

assign b_9_address0 = tmp_2_reg_3080;

assign exitcond_flatten_fu_2282_p2 = ((indvar_flatten_reg_2249 == 13'd5329) ? 1'b1 : 1'b0);

assign exitcond_fu_2300_p2 = ((ib_reg_2271 == 7'd73) ? 1'b1 : 1'b0);

assign grp_fu_2976_p0 = grp_fu_2976_p00;

assign grp_fu_2976_p00 = tmp_mid2_v_reg_2999_pp0_iter5_reg;

assign grp_fu_2976_p1 = 14'd73;

assign grp_fu_2976_p2 = grp_fu_2976_p20;

assign grp_fu_2976_p20 = ib_mid2_reg_2994_pp0_iter5_reg;

assign ia_1_fu_2294_p2 = (ap_phi_mux_ia_phi_fu_2264_p4 + 7'd1);

assign ib_1_fu_2334_p2 = (ib_mid2_fu_2306_p3 + 7'd1);

assign ib_mid2_fu_2306_p3 = ((exitcond_fu_2300_p2[0:0] === 1'b1) ? 7'd0 : ib_reg_2271);

assign indvar_flatten_next_fu_2288_p2 = (indvar_flatten_reg_2249 + 13'd1);

assign out_r_address0 = tmp_1_cast_fu_2962_p1;

assign out_r_d0 = (tmp1_reg_5100 + tmp36_fu_2966_p2);

assign tmp10_fu_2649_p2 = (tmp_5_8_reg_4610 + tmp_5_7_reg_4605);

assign tmp11_fu_2839_p2 = (tmp12_reg_4995 + tmp15_reg_5000);

assign tmp12_fu_2678_p2 = (tmp13_fu_2670_p2 + tmp14_fu_2674_p2);

assign tmp13_fu_2670_p2 = (tmp_5_s_reg_4620 + tmp_5_9_reg_4615);

assign tmp14_fu_2674_p2 = (tmp_5_11_reg_4630 + tmp_5_10_reg_4625);

assign tmp15_fu_2697_p2 = (tmp16_fu_2684_p2 + tmp17_fu_2692_p2);

assign tmp16_fu_2684_p2 = (tmp_5_13_reg_4640 + tmp_5_12_reg_4635);

assign tmp17_fu_2692_p2 = (tmp_5_14_reg_4645 + tmp18_fu_2688_p2);

assign tmp18_fu_2688_p2 = (tmp_5_16_reg_4655 + tmp_5_15_reg_4650);

assign tmp19_fu_2866_p2 = (tmp20_fu_2852_p2 + tmp28_fu_2861_p2);

assign tmp1_fu_2872_p2 = (tmp2_fu_2843_p2 + tmp19_fu_2866_p2);

assign tmp20_fu_2852_p2 = (tmp21_reg_5005 + tmp24_fu_2848_p2);

assign tmp21_fu_2711_p2 = (tmp22_fu_2703_p2 + tmp23_fu_2707_p2);

assign tmp22_fu_2703_p2 = (tmp_5_18_reg_4665 + tmp_5_17_reg_4660);

assign tmp23_fu_2707_p2 = (tmp_5_20_reg_4675 + tmp_5_19_reg_4670);

assign tmp24_fu_2848_p2 = (tmp25_reg_5010 + tmp26_reg_5015);

assign tmp25_fu_2717_p2 = (tmp_5_22_reg_4685 + tmp_5_21_reg_4680);

assign tmp26_fu_2725_p2 = (tmp_5_23_reg_4690 + tmp27_fu_2721_p2);

assign tmp27_fu_2721_p2 = (tmp_5_25_reg_4700 + tmp_5_24_reg_4695);

assign tmp28_fu_2861_p2 = (tmp29_reg_5020 + tmp32_fu_2857_p2);

assign tmp29_fu_2738_p2 = (tmp30_fu_2730_p2 + tmp31_fu_2734_p2);

assign tmp2_fu_2843_p2 = (tmp3_reg_4990 + tmp11_fu_2839_p2);

assign tmp30_fu_2730_p2 = (tmp_5_27_reg_4710 + tmp_5_26_reg_4705);

assign tmp31_fu_2734_p2 = (tmp_5_29_reg_4720 + tmp_5_28_reg_4715);

assign tmp32_fu_2857_p2 = (tmp33_reg_5025 + tmp34_reg_5030);

assign tmp33_fu_2744_p2 = (tmp_5_31_reg_4730 + tmp_5_30_reg_4725);

assign tmp34_fu_2752_p2 = (tmp_5_32_reg_4735 + tmp35_fu_2748_p2);

assign tmp35_fu_2748_p2 = (tmp_5_34_reg_4745 + tmp_5_33_reg_4740);

assign tmp36_fu_2966_p2 = (tmp37_reg_5105 + tmp54_reg_5110);

assign tmp37_fu_2911_p2 = (tmp38_fu_2882_p2 + tmp46_fu_2905_p2);

assign tmp38_fu_2882_p2 = (tmp39_reg_5035 + tmp42_fu_2878_p2);

assign tmp39_fu_2765_p2 = (tmp40_fu_2757_p2 + tmp41_fu_2761_p2);

assign tmp3_fu_2664_p2 = (tmp4_fu_2640_p2 + tmp7_fu_2658_p2);

assign tmp40_fu_2757_p2 = (tmp_5_36_reg_4755 + tmp_5_35_reg_4750);

assign tmp41_fu_2761_p2 = (tmp_5_38_reg_4765 + tmp_5_37_reg_4760);

assign tmp42_fu_2878_p2 = (tmp43_reg_5040 + tmp44_reg_5045);

assign tmp43_fu_2771_p2 = (tmp_5_40_reg_4775 + tmp_5_39_reg_4770);

assign tmp44_fu_2779_p2 = (tmp_5_41_reg_4780 + tmp45_fu_2775_p2);

assign tmp45_fu_2775_p2 = (tmp_5_43_reg_4790 + tmp_5_42_reg_4785);

assign tmp46_fu_2905_p2 = (tmp47_fu_2891_p2 + tmp50_fu_2900_p2);

assign tmp47_fu_2891_p2 = (tmp48_reg_5050 + tmp49_fu_2887_p2);

assign tmp48_fu_2784_p2 = (tmp_5_45_reg_4800 + tmp_5_44_reg_4795);

assign tmp49_fu_2887_p2 = (tmp_5_47_reg_4970 + tmp_5_46_reg_4965);

assign tmp4_fu_2640_p2 = (tmp5_reg_4960 + tmp6_fu_2636_p2);

assign tmp50_fu_2900_p2 = (tmp51_reg_5055 + tmp52_fu_2896_p2);

assign tmp51_fu_2788_p2 = (tmp_5_49_reg_4830 + tmp_5_48_reg_4825);

assign tmp52_fu_2896_p2 = (tmp_5_50_reg_4975 + tmp53_reg_5060);

assign tmp53_fu_2792_p2 = (tmp_5_52_reg_4850 + tmp_5_51_reg_4845);

assign tmp54_fu_2950_p2 = (tmp55_fu_2921_p2 + tmp63_fu_2944_p2);

assign tmp55_fu_2921_p2 = (tmp56_reg_5065 + tmp59_fu_2917_p2);

assign tmp56_fu_2804_p2 = (tmp57_fu_2796_p2 + tmp58_fu_2800_p2);

assign tmp57_fu_2796_p2 = (tmp_5_54_reg_4860 + tmp_5_53_reg_4855);

assign tmp58_fu_2800_p2 = (tmp_5_56_reg_4870 + tmp_5_55_reg_4865);

assign tmp59_fu_2917_p2 = (tmp60_reg_5070 + tmp61_reg_5075);

assign tmp5_fu_2612_p2 = (tmp_5_1_reg_3865 + tmp_5_reg_3860);

assign tmp60_fu_2810_p2 = (tmp_5_58_reg_4880 + tmp_5_57_reg_4875);

assign tmp61_fu_2818_p2 = (tmp_5_59_reg_4885 + tmp62_fu_2814_p2);

assign tmp62_fu_2814_p2 = (tmp_5_61_reg_4895 + tmp_5_60_reg_4890);

assign tmp63_fu_2944_p2 = (tmp64_fu_2930_p2 + tmp68_fu_2939_p2);

assign tmp64_fu_2930_p2 = (tmp65_reg_5080 + tmp66_fu_2926_p2);

assign tmp65_fu_2823_p2 = (tmp_5_63_reg_4905 + tmp_5_62_reg_4900);

assign tmp66_fu_2926_p2 = (tmp_5_64_reg_4980 + tmp67_reg_5085);

assign tmp67_fu_2827_p2 = (tmp_5_66_reg_4925 + tmp_5_65_reg_4920);

assign tmp68_fu_2939_p2 = (tmp69_reg_5090 + tmp70_fu_2935_p2);

assign tmp69_fu_2831_p2 = (tmp_5_68_reg_4935 + tmp_5_67_reg_4930);

assign tmp6_fu_2636_p2 = (tmp_5_3_reg_4585 + tmp_5_2_reg_4580);

assign tmp70_fu_2935_p2 = (tmp_5_69_reg_4985 + tmp71_reg_5095);

assign tmp71_fu_2835_p2 = (tmp_5_71_reg_4955 + tmp_5_70_reg_4950);

assign tmp7_fu_2658_p2 = (tmp8_fu_2645_p2 + tmp9_fu_2653_p2);

assign tmp8_fu_2645_p2 = (tmp_5_5_reg_4595 + tmp_5_4_reg_4590);

assign tmp9_fu_2653_p2 = (tmp_5_6_reg_4600 + tmp10_fu_2649_p2);

assign tmp_1_cast_fu_2962_p1 = $signed(grp_fu_2976_p3);

assign tmp_2_fu_2328_p1 = ib_mid2_fu_2306_p3;

assign tmp_5_10_fu_2384_p2 = ($signed(b_11_load_reg_3965) * $signed(a_11_load_reg_3960));

assign tmp_5_11_fu_2388_p2 = ($signed(b_12_load_reg_3975) * $signed(a_12_load_reg_3970));

assign tmp_5_12_fu_2392_p2 = ($signed(b_13_load_reg_3985) * $signed(a_13_load_reg_3980));

assign tmp_5_13_fu_2396_p2 = ($signed(b_14_load_reg_3995) * $signed(a_14_load_reg_3990));

assign tmp_5_14_fu_2400_p2 = ($signed(b_15_load_reg_4005) * $signed(a_15_load_reg_4000));

assign tmp_5_15_fu_2404_p2 = ($signed(b_16_load_reg_4015) * $signed(a_16_load_reg_4010));

assign tmp_5_16_fu_2408_p2 = ($signed(b_17_load_reg_4025) * $signed(a_17_load_reg_4020));

assign tmp_5_17_fu_2412_p2 = ($signed(b_18_load_reg_4035) * $signed(a_18_load_reg_4030));

assign tmp_5_18_fu_2416_p2 = ($signed(b_19_load_reg_4045) * $signed(a_19_load_reg_4040));

assign tmp_5_19_fu_2420_p2 = ($signed(b_20_load_reg_4055) * $signed(a_20_load_reg_4050));

assign tmp_5_1_fu_2344_p2 = ($signed(b_1_load_reg_3195) * $signed(a_1_load_reg_3190));

assign tmp_5_20_fu_2424_p2 = ($signed(b_21_load_reg_4065) * $signed(a_21_load_reg_4060));

assign tmp_5_21_fu_2428_p2 = ($signed(b_22_load_reg_4075) * $signed(a_22_load_reg_4070));

assign tmp_5_22_fu_2432_p2 = ($signed(b_23_load_reg_4085) * $signed(a_23_load_reg_4080));

assign tmp_5_23_fu_2436_p2 = ($signed(b_24_load_reg_4095) * $signed(a_24_load_reg_4090));

assign tmp_5_24_fu_2440_p2 = ($signed(b_25_load_reg_4105) * $signed(a_25_load_reg_4100));

assign tmp_5_25_fu_2444_p2 = ($signed(b_26_load_reg_4115) * $signed(a_26_load_reg_4110));

assign tmp_5_26_fu_2448_p2 = ($signed(b_27_load_reg_4125) * $signed(a_27_load_reg_4120));

assign tmp_5_27_fu_2452_p2 = ($signed(b_28_load_reg_4135) * $signed(a_28_load_reg_4130));

assign tmp_5_28_fu_2456_p2 = ($signed(b_29_load_reg_4145) * $signed(a_29_load_reg_4140));

assign tmp_5_29_fu_2460_p2 = ($signed(b_30_load_reg_4155) * $signed(a_30_load_reg_4150));

assign tmp_5_2_fu_2348_p2 = ($signed(b_2_load_reg_3875) * $signed(a_2_load_reg_3870));

assign tmp_5_30_fu_2464_p2 = ($signed(b_31_load_reg_4165) * $signed(a_31_load_reg_4160));

assign tmp_5_31_fu_2468_p2 = ($signed(b_32_load_reg_4175) * $signed(a_32_load_reg_4170));

assign tmp_5_32_fu_2472_p2 = ($signed(b_33_load_reg_4185) * $signed(a_33_load_reg_4180));

assign tmp_5_33_fu_2476_p2 = ($signed(b_34_load_reg_4195) * $signed(a_34_load_reg_4190));

assign tmp_5_34_fu_2480_p2 = ($signed(b_35_load_reg_4205) * $signed(a_35_load_reg_4200));

assign tmp_5_35_fu_2484_p2 = ($signed(b_36_load_reg_4215) * $signed(a_36_load_reg_4210));

assign tmp_5_36_fu_2488_p2 = ($signed(b_37_load_reg_4225) * $signed(a_37_load_reg_4220));

assign tmp_5_37_fu_2492_p2 = ($signed(b_38_load_reg_4235) * $signed(a_38_load_reg_4230));

assign tmp_5_38_fu_2496_p2 = ($signed(b_39_load_reg_4245) * $signed(a_39_load_reg_4240));

assign tmp_5_39_fu_2500_p2 = ($signed(b_40_load_reg_4255) * $signed(a_40_load_reg_4250));

assign tmp_5_3_fu_2352_p2 = ($signed(b_3_load_reg_3885) * $signed(a_3_load_reg_3880));

assign tmp_5_40_fu_2504_p2 = ($signed(b_41_load_reg_4265) * $signed(a_41_load_reg_4260));

assign tmp_5_41_fu_2508_p2 = ($signed(b_42_load_reg_4275) * $signed(a_42_load_reg_4270));

assign tmp_5_42_fu_2512_p2 = ($signed(b_43_load_reg_4285) * $signed(a_43_load_reg_4280));

assign tmp_5_43_fu_2516_p2 = ($signed(b_44_load_reg_4295) * $signed(a_44_load_reg_4290));

assign tmp_5_44_fu_2520_p2 = ($signed(b_45_load_reg_4305) * $signed(a_45_load_reg_4300));

assign tmp_5_45_fu_2524_p2 = ($signed(b_46_load_reg_4315) * $signed(a_46_load_reg_4310));

assign tmp_5_46_fu_2616_p2 = ($signed(b_47_load_reg_4810) * $signed(a_47_load_reg_4805));

assign tmp_5_47_fu_2620_p2 = ($signed(b_48_load_reg_4820) * $signed(a_48_load_reg_4815));

assign tmp_5_48_fu_2528_p2 = ($signed(b_49_load_reg_4345) * $signed(a_49_load_reg_4340));

assign tmp_5_49_fu_2532_p2 = ($signed(b_50_load_reg_4355) * $signed(a_50_load_reg_4350));

assign tmp_5_4_fu_2356_p2 = ($signed(b_4_load_reg_3895) * $signed(a_4_load_reg_3890));

assign tmp_5_50_fu_2624_p2 = ($signed(b_51_load_reg_4840) * $signed(a_51_load_reg_4835));

assign tmp_5_51_fu_2536_p2 = ($signed(b_52_load_reg_4375) * $signed(a_52_load_reg_4370));

assign tmp_5_52_fu_2540_p2 = ($signed(b_53_load_reg_4385) * $signed(a_53_load_reg_4380));

assign tmp_5_53_fu_2544_p2 = ($signed(b_54_load_reg_4395) * $signed(a_54_load_reg_4390));

assign tmp_5_54_fu_2548_p2 = ($signed(b_55_load_reg_4405) * $signed(a_55_load_reg_4400));

assign tmp_5_55_fu_2552_p2 = ($signed(b_56_load_reg_4415) * $signed(a_56_load_reg_4410));

assign tmp_5_56_fu_2556_p2 = ($signed(b_57_load_reg_4425) * $signed(a_57_load_reg_4420));

assign tmp_5_57_fu_2560_p2 = ($signed(b_58_load_reg_4435) * $signed(a_58_load_reg_4430));

assign tmp_5_58_fu_2564_p2 = ($signed(b_59_load_reg_4445) * $signed(a_59_load_reg_4440));

assign tmp_5_59_fu_2568_p2 = ($signed(b_60_load_reg_4455) * $signed(a_60_load_reg_4450));

assign tmp_5_5_fu_2360_p2 = ($signed(b_5_load_reg_3905) * $signed(a_5_load_reg_3900));

assign tmp_5_60_fu_2572_p2 = ($signed(b_61_load_reg_4465) * $signed(a_61_load_reg_4460));

assign tmp_5_61_fu_2576_p2 = ($signed(b_62_load_reg_4475) * $signed(a_62_load_reg_4470));

assign tmp_5_62_fu_2580_p2 = ($signed(b_63_load_reg_4485) * $signed(a_63_load_reg_4480));

assign tmp_5_63_fu_2584_p2 = ($signed(b_64_load_reg_4495) * $signed(a_64_load_reg_4490));

assign tmp_5_64_fu_2628_p2 = ($signed(b_65_load_reg_4915) * $signed(a_65_load_reg_4910));

assign tmp_5_65_fu_2588_p2 = ($signed(b_66_load_reg_4515) * $signed(a_66_load_reg_4510));

assign tmp_5_66_fu_2592_p2 = ($signed(b_67_load_reg_4525) * $signed(a_67_load_reg_4520));

assign tmp_5_67_fu_2596_p2 = ($signed(b_68_load_reg_4535) * $signed(a_68_load_reg_4530));

assign tmp_5_68_fu_2600_p2 = ($signed(b_69_load_reg_4545) * $signed(a_69_load_reg_4540));

assign tmp_5_69_fu_2632_p2 = ($signed(b_70_load_reg_4945) * $signed(a_70_load_reg_4940));

assign tmp_5_6_fu_2364_p2 = ($signed(b_6_load_reg_3915) * $signed(a_6_load_reg_3910));

assign tmp_5_70_fu_2604_p2 = ($signed(b_71_load_reg_4565) * $signed(a_71_load_reg_4560));

assign tmp_5_71_fu_2608_p2 = ($signed(b_72_load_reg_4575) * $signed(a_72_load_reg_4570));

assign tmp_5_7_fu_2368_p2 = ($signed(b_7_load_reg_3925) * $signed(a_7_load_reg_3920));

assign tmp_5_8_fu_2372_p2 = ($signed(b_8_load_reg_3935) * $signed(a_8_load_reg_3930));

assign tmp_5_9_fu_2376_p2 = ($signed(b_9_load_reg_3945) * $signed(a_9_load_reg_3940));

assign tmp_5_fu_2340_p2 = ($signed(b_0_load_reg_3185) * $signed(a_0_load_reg_3180));

assign tmp_5_s_fu_2380_p2 = ($signed(b_10_load_reg_3955) * $signed(a_10_load_reg_3950));

assign tmp_mid2_fu_2322_p1 = tmp_mid2_v_fu_2314_p3;

assign tmp_mid2_v_fu_2314_p3 = ((exitcond_fu_2300_p2[0:0] === 1'b1) ? ia_1_fu_2294_p2 : ap_phi_mux_ia_phi_fu_2264_p4);

always @ (posedge ap_clk) begin
    tmp_mid2_reg_3005[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_mid2_reg_3005_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_3080[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_2_reg_3080_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //mmult_hw
